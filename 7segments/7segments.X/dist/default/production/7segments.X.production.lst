

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 03 14:12:05 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	idataBANK0
   178     078A                     __pidataBANK0:
   179                           
   180                           ;initializer for main@F1008
   181     078A  34FC               	retlw	252
   182     078B  3460               	retlw	96
   183     078C  34DA               	retlw	218
   184     078D  34F2               	retlw	242
   185     078E  3466               	retlw	102
   186     078F  34B6               	retlw	182
   187     0790  34BE               	retlw	190
   188     0791  34E0               	retlw	224
   189     0792  34FE               	retlw	254
   190     0793  34F6               	retlw	246
   191     0006                     _PORTB          set	6
   192     0086                     _TRISB          set	134
   193                           
   194                           	psect	cinit
   195     07EE                     start_initialization:	
   196                           ; #config settings
   197                           
   198     07EE                     __initialization:
   199                           
   200                           ; Initialize objects allocated to BANK0
   201     07EE  1383               	bcf	3,7	;select IRP bank0
   202     07EF  3036               	movlw	low (__pdataBANK0+10)
   203     07F0  00FD               	movwf	btemp+-1
   204     07F1  3007               	movlw	high __pidataBANK0
   205     07F2  00FE               	movwf	btemp
   206     07F3  308A               	movlw	low __pidataBANK0
   207     07F4  00FF               	movwf	btemp+1
   208     07F5  302C               	movlw	low __pdataBANK0
   209     07F6  0084               	movwf	4
   210     07F7  120A  118A  2798  120A  118A  	fcall	init_ram0
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2FA7   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	dataBANK0
   219     002C                     __pdataBANK0:
   220     002C                     main@F1008:
   221     002C                     	ds	10
   222                           
   223                           	psect	inittext
   224     0794                     init_fetch0:	
   225                           ;	Called with low address in FSR and high address in W
   226                           
   227     0794  087E               	movf	btemp,w
   228     0795  008A               	movwf	10
   229     0796  087F               	movf	btemp+1,w
   230     0797  0082               	movwf	2
   231     0798                     init_ram0:	
   232                           ;Called with:
   233                           ;	high address of idata address in btemp 
   234                           ;	low address of idata address in btemp+1 
   235                           ;	low address of data in FSR
   236                           ;	high address + 1 of data in btemp-1
   237                           
   238     0798  120A  118A  2794  120A  118A  	fcall	init_fetch0
   239     079D  0080               	movwf	0
   240     079E  0A84               	incf	4,f
   241     079F  0804               	movf	4,w
   242     07A0  067D               	xorwf	btemp+-1,w
   243     07A1  1903               	btfsc	3,2
   244     07A2  3400               	retlw	0
   245     07A3  0AFF               	incf	btemp+1,f
   246     07A4  1903               	btfsc	3,2
   247     07A5  0AFE               	incf	btemp,f
   248     07A6  2F98               	goto	init_ram0
   249                           
   250                           	psect	cstackCOMMON
   251     0070                     __pcstackCOMMON:
   252     0070                     ?_main:
   253     0070                     ??_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258     0070                     	ds	4
   259                           
   260                           	psect	cstackBANK0
   261     0020                     __pcstackBANK0:
   262     0020                     main@seven_segments:
   263                           
   264                           ; 10 bytes @ 0x0
   265     0020                     	ds	10
   266     002A                     main@count:
   267                           
   268                           ; 2 bytes @ 0xA
   269     002A                     	ds	2
   270                           
   271                           	psect	maintext
   272     07A7                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 11 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  seven_segmen   10    0[BANK0 ] unsigned char [10]
   283 ;;  count           2   10[BANK0 ] int 
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0      12       0       0       0
   295 ;;      Temps:          4       0       0       0       0
   296 ;;      Totals:         4      12       0       0       0
   297 ;;Total ram usage:       16 bytes
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305     07A7                     _main:	
   306                           ;psect for function _main
   307                           
   308     07A7                     l575:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   311                           
   312                           
   313                           ;main.c: 13:     int count = 0;
   314     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   315     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   316     07A9  01AA               	clrf	main@count
   317     07AA  01AB               	clrf	main@count+1
   318                           
   319                           ;main.c: 14:     TRISB = 0x00;
   320     07AB  1683               	bsf	3,5	;RP0=1, select bank1
   321     07AC  1303               	bcf	3,6	;RP1=0, select bank1
   322     07AD  0186               	clrf	6	;volatile
   323                           
   324                           ;main.c: 15:     PORTB = 0x00;
   325     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   326     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   327     07B0  0186               	clrf	6	;volatile
   328     07B1                     l577:
   329                           
   330                           ;main.c: 17:     unsigned char seven_segments[10] = {0xFC, 0x60, 0xDA, 0xF2, 0x66, 0xB6,
   331     07B1  302C               	movlw	main@F1008& (0+255)
   332     07B2  0084               	movwf	4
   333     07B3  3020               	movlw	low main@seven_segments
   334     07B4  00F0               	movwf	??_main
   335     07B5  300A               	movlw	10
   336     07B6  00F1               	movwf	??_main+1
   337     07B7                     u30:
   338     07B7  1383               	bcf	3,7	;select IRP bank0
   339     07B8  0800               	movf	0,w
   340     07B9  00F2               	movwf	??_main+2
   341     07BA  0A04               	incf	4,w
   342     07BB  00F3               	movwf	??_main+3
   343     07BC  0870               	movf	??_main,w
   344     07BD  0084               	movwf	4
   345     07BE  0872               	movf	??_main+2,w
   346     07BF  0080               	movwf	0
   347     07C0  0A04               	incf	4,w
   348     07C1  00F0               	movwf	??_main
   349     07C2  0873               	movf	??_main+3,w
   350     07C3  0084               	movwf	4
   351     07C4  0BF1               	decfsz	??_main+1,f
   352     07C5  2FB7               	goto	u30
   353     07C6                     l579:
   354                           
   355                           ;main.c: 22:     {;main.c: 23:         PORTB = seven_segments[count];
   356     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   357     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   358     07C8  082A               	movf	main@count,w
   359     07C9  3E20               	addlw	(low (main@seven_segments| 0))& (0+255)
   360     07CA  0084               	movwf	4
   361     07CB  1383               	bcf	3,7	;select IRP bank0
   362     07CC  0800               	movf	0,w
   363     07CD  0086               	movwf	6	;volatile
   364     07CE                     l581:
   365                           
   366                           ;main.c: 24:         count++;
   367     07CE  3001               	movlw	1
   368     07CF  07AA               	addwf	main@count,f
   369     07D0  1803               	skipnc
   370     07D1  0AAB               	incf	main@count+1,f
   371     07D2  3000               	movlw	0
   372     07D3  07AB               	addwf	main@count+1,f
   373     07D4                     l583:
   374                           
   375                           ;main.c: 25:         if (count == 10)
   376     07D4  300A               	movlw	10
   377     07D5  062A               	xorwf	main@count,w
   378     07D6  042B               	iorwf	main@count+1,w
   379     07D7  1D03               	btfss	3,2
   380     07D8  2FDA               	goto	u41
   381     07D9  2FDB               	goto	u40
   382     07DA                     u41:
   383     07DA  2FDD               	goto	l587
   384     07DB                     u40:
   385     07DB                     l585:
   386                           
   387                           ;main.c: 26:             count = 0;
   388     07DB  01AA               	clrf	main@count
   389     07DC  01AB               	clrf	main@count+1
   390     07DD                     l587:
   391                           
   392                           ;main.c: 27:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   393     07DD  3006               	movlw	6
   394     07DE  00F2               	movwf	??_main+2
   395     07DF  3013               	movlw	19
   396     07E0  00F1               	movwf	??_main+1
   397     07E1  30AD               	movlw	173
   398     07E2  00F0               	movwf	??_main
   399     07E3                     u57:
   400     07E3  0BF0               	decfsz	??_main,f
   401     07E4  2FE3               	goto	u57
   402     07E5  0BF1               	decfsz	??_main+1,f
   403     07E6  2FE3               	goto	u57
   404     07E7  0BF2               	decfsz	??_main+2,f
   405     07E8  2FE3               	goto	u57
   406     07E9  2FEA               	nop2
   407     07EA  2FC6               	goto	l579
   408     07EB  120A  118A  2800   	ljmp	start
   409     07EE                     __end_of_main:
   410     0002                     ___latbits      equ	2
   411     007E                     btemp           set	126	;btemp
   412     007E                     wtemp0          set	126
   413                           
   414                           	psect	config
   415                           
   416                           ;Config register CONFIG @ 0x2007
   417                           ;	Oscillator Selection bits
   418                           ;	FOSC = XT, XT oscillator
   419                           ;	Watchdog Timer Enable bit
   420                           ;	WDTE = OFF, WDT disabled
   421                           ;	Power-up Timer Enable bit
   422                           ;	PWRTE = ON, PWRT enabled
   423                           ;	Brown-out Reset Enable bit
   424                           ;	BOREN = ON, BOR enabled
   425                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   426                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   427                           ;	Data EEPROM Memory Code Protection bit
   428                           ;	CPD = OFF, Data EEPROM code protection off
   429                           ;	Flash Program Memory Write Enable bits
   430                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   431                           ;	In-Circuit Debugger Mode bit
   432                           ;	DEBUG = 0x1, unprogrammed default
   433                           ;	Flash Program Memory Code Protection bit
   434                           ;	CP = OFF, Code protection off
   435     2007                     	org	8199
   436     2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0      71
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     12      22     27.5%
BITBANK0            80      0       0      0.0%
COMMON              14      4       4     28.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      26      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 03 14:12:05 2025

                      pc 0002                       u30 07B7                       u40 07DB  
                     u41 07DA                       u57 07E3                       fsr 0004  
                    l581 07CE                      l583 07D4                      l575 07A7  
                    l585 07DB                      l577 07B1                      l587 07DD  
                    l579 07C6                      fsr0 0004                      indf 0000  
                   _main 07A7                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
     main@seven_segments 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 078A               __pmaintext 07A7     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 0794              __pdataBANK0 002C  
              ___latbits 0002            __pcstackBANK0 0020                main@F1008 002C  
              main@count 002A                 init_ram0 0798  
