

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue May 13 15:37:41 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0019                     _TXREG          set	25
   176     0018                     _RCSTAbits      set	24
   177     0008                     _PORTD          set	8
   178     0006                     _PORTBbits      set	6
   179     0088                     _TRISD          set	136
   180     0086                     _TRISB          set	134
   181     0087                     _TRISCbits      set	135
   182     0098                     _TXSTAbits      set	152
   183     0099                     _SPBRG          set	153
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2FBD   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_GPIO_Init:
   200     0070                     ?_UART_TX_Init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_UART_Write_Data:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     UART_Write_Data@data:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_GPIO_Init:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ??_UART_TX_Init:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_UART_Write_Data:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	1
   224     0071                     ??_main:
   225                           
   226                           ; 1 bytes @ 0x1
   227     0071                     	ds	2
   228     0073                     main@data:
   229                           
   230                           ; 1 bytes @ 0x3
   231     0073                     	ds	1
   232                           
   233                           	psect	maintext
   234     07BD                     __pmaintext:	
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 20 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  data            1    3[COMMON] unsigned char 
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : B00/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         1       0       0       0       0
   256 ;;      Temps:          2       0       0       0       0
   257 ;;      Totals:         3       0       0       0       0
   258 ;;Total ram usage:        3 bytes
   259 ;; Hardware stack levels required when called: 1
   260 ;; This function calls:
   261 ;;		_GPIO_Init
   262 ;;		_UART_TX_Init
   263 ;;		_UART_Write_Data
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269     07BD                     _main:	
   270                           ;psect for function _main
   271                           
   272     07BD                     l603:	
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   275                           
   276                           
   277                           ;main.c: 22:     GPIO_Init();
   278     07BD  120A  118A  2799  120A  118A  	fcall	_GPIO_Init
   279                           
   280                           ;main.c: 23:     UART_TX_Init();
   281     07C2  120A  118A  27AE  120A  118A  	fcall	_UART_TX_Init
   282     07C7                     l605:
   283                           
   284                           ;main.c: 24:     uint8_t data = 0;
   285     07C7  01F3               	clrf	main@data
   286     07C8                     l607:
   287                           
   288                           ;main.c: 28:     {;main.c: 29:         if (PORTBbits.RB0)
   289     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   290     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   291     07CA  1C06               	btfss	6,0	;volatile
   292     07CB  2FCD               	goto	u21
   293     07CC  2FCE               	goto	u20
   294     07CD                     u21:
   295     07CD  2FD8               	goto	l613
   296     07CE                     u20:
   297     07CE                     l609:
   298                           
   299                           ;main.c: 30:         {;main.c: 31:             data++;
   300     07CE  3001               	movlw	1
   301     07CF  07F3               	addwf	main@data,f
   302     07D0                     l611:
   303                           
   304                           ;main.c: 32:             _delay((unsigned long)((150)*(4000000/4000.0)));
   305     07D0  30C3               	movlw	195
   306     07D1  00F2               	movwf	??_main+1
   307     07D2  30CD               	movlw	205
   308     07D3  00F1               	movwf	??_main
   309     07D4                     u57:
   310     07D4  0BF1               	decfsz	??_main,f
   311     07D5  2FD4               	goto	u57
   312     07D6  0BF2               	decfsz	??_main+1,f
   313     07D7  2FD4               	goto	u57
   314     07D8                     l613:
   315                           
   316                           ;main.c: 34:         if (PORTBbits.RB1)
   317     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   318     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   319     07DA  1C86               	btfss	6,1	;volatile
   320     07DB  2FDD               	goto	u31
   321     07DC  2FDE               	goto	u30
   322     07DD                     u31:
   323     07DD  2FE8               	goto	l619
   324     07DE                     u30:
   325     07DE                     l615:
   326                           
   327                           ;main.c: 35:         {;main.c: 36:             data--;
   328     07DE  3001               	movlw	1
   329     07DF  02F3               	subwf	main@data,f
   330     07E0                     l617:
   331                           
   332                           ;main.c: 37:             _delay((unsigned long)((150)*(4000000/4000.0)));
   333     07E0  30C3               	movlw	195
   334     07E1  00F2               	movwf	??_main+1
   335     07E2  30CD               	movlw	205
   336     07E3  00F1               	movwf	??_main
   337     07E4                     u67:
   338     07E4  0BF1               	decfsz	??_main,f
   339     07E5  2FE4               	goto	u67
   340     07E6  0BF2               	decfsz	??_main+1,f
   341     07E7  2FE4               	goto	u67
   342     07E8                     l619:
   343                           
   344                           ;main.c: 39:         if (PORTBbits.RB2)
   345     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   346     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   347     07EA  1D06               	btfss	6,2	;volatile
   348     07EB  2FED               	goto	u41
   349     07EC  2FEE               	goto	u40
   350     07ED                     u41:
   351     07ED  2FF4               	goto	l623
   352     07EE                     u40:
   353     07EE                     l621:
   354                           
   355                           ;main.c: 40:             {;main.c: 41:             UART_Write_Data(data);
   356     07EE  0873               	movf	main@data,w
   357     07EF  120A  118A  27A2  120A  118A  	fcall	_UART_Write_Data
   358     07F4                     l623:
   359                           
   360                           ;main.c: 43:         PORTD = data;
   361     07F4  0873               	movf	main@data,w
   362     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   363     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   364     07F7  0088               	movwf	8	;volatile
   365     07F8  2FC8               	goto	l607
   366     07F9  120A  118A  2800   	ljmp	start
   367     07FC                     __end_of_main:
   368                           
   369                           	psect	text1
   370     07A2                     __ptext1:	
   371 ;; *************** function _UART_Write_Data *****************
   372 ;; Defined at:
   373 ;;		line 60 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  data            1    wreg     unsigned char 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  data            1    0[COMMON] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         1       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0
   390 ;;      Totals:         1       0       0       0       0
   391 ;;Total ram usage:        1 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400     07A2                     _UART_Write_Data:	
   401                           ;psect for function _UART_Write_Data
   402                           
   403                           
   404                           ;incstack = 0
   405                           ; Regs used in _UART_Write_Data: [wreg]
   406                           ;UART_Write_Data@data stored from wreg
   407     07A2  00F0               	movwf	UART_Write_Data@data
   408     07A3                     l599:
   409     07A3                     l43:	
   410                           ;main.c: 60: void UART_Write_Data(uint8_t data);main.c: 61: {;main.c: 62:     while(!TXS
      +                          TAbits.TRMT);
   411                           
   412     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   413     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   414     07A5  1C98               	btfss	24,1	;volatile
   415     07A6  2FA8               	goto	u11
   416     07A7  2FA9               	goto	u10
   417     07A8                     u11:
   418     07A8  2FA3               	goto	l43
   419     07A9                     u10:
   420     07A9                     l601:
   421                           
   422                           ;main.c: 63:     TXREG = data;
   423     07A9  0870               	movf	UART_Write_Data@data,w
   424     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   425     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   426     07AC  0099               	movwf	25	;volatile
   427     07AD                     l46:
   428     07AD  0008               	return
   429     07AE                     __end_of_UART_Write_Data:
   430                           
   431                           	psect	text2
   432     07AE                     __ptext2:	
   433 ;; *************** function _UART_TX_Init *****************
   434 ;; Defined at:
   435 ;;		line 49 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		None
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462     07AE                     _UART_TX_Init:	
   463                           ;psect for function _UART_TX_Init
   464                           
   465     07AE                     l597:	
   466                           ;incstack = 0
   467                           ; Regs used in _UART_TX_Init: []
   468                           
   469                           
   470                           ;main.c: 51:     SPBRG = 25;
   471     07AE  3019               	movlw	25
   472     07AF  1683               	bsf	3,5	;RP0=1, select bank1
   473     07B0  1303               	bcf	3,6	;RP1=0, select bank1
   474     07B1  0099               	movwf	25	;volatile
   475                           
   476                           ;main.c: 52:     TXSTAbits.BRGH = 1;
   477     07B2  1518               	bsf	24,2	;volatile
   478                           
   479                           ;main.c: 53:     TXSTAbits.SYNC = 0;
   480     07B3  1218               	bcf	24,4	;volatile
   481                           
   482                           ;main.c: 54:     RCSTAbits.SPEN = 1;
   483     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   484     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   485     07B6  1798               	bsf	24,7	;volatile
   486                           
   487                           ;main.c: 55:     TRISCbits.TRISC6 = 1;
   488     07B7  1683               	bsf	3,5	;RP0=1, select bank1
   489     07B8  1303               	bcf	3,6	;RP1=0, select bank1
   490     07B9  1707               	bsf	7,6	;volatile
   491                           
   492                           ;main.c: 56:     TRISCbits.TRISC7 = 1;
   493     07BA  1787               	bsf	7,7	;volatile
   494                           
   495                           ;main.c: 57:     TXSTAbits.TXEN = 1;
   496     07BB  1698               	bsf	24,5	;volatile
   497     07BC                     l40:
   498     07BC  0008               	return
   499     07BD                     __end_of_UART_TX_Init:
   500                           
   501                           	psect	text3
   502     0799                     __ptext3:	
   503 ;; *************** function _GPIO_Init *****************
   504 ;; Defined at:
   505 ;;		line 66 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		status,2
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     0799                     _GPIO_Init:	
   533                           ;psect for function _GPIO_Init
   534                           
   535     0799                     l593:	
   536                           ;incstack = 0
   537                           ; Regs used in _GPIO_Init: [status,2]
   538                           
   539                           
   540                           ;main.c: 68:     TRISB = 0x07;
   541     0799  3007               	movlw	7
   542     079A  1683               	bsf	3,5	;RP0=1, select bank1
   543     079B  1303               	bcf	3,6	;RP1=0, select bank1
   544     079C  0086               	movwf	6	;volatile
   545     079D                     l595:
   546                           
   547                           ;main.c: 69:     TRISD = 0x00;
   548     079D  0188               	clrf	8	;volatile
   549                           
   550                           ;main.c: 70:     PORTD = 0x00;
   551     079E  1283               	bcf	3,5	;RP0=0, select bank0
   552     079F  1303               	bcf	3,6	;RP1=0, select bank0
   553     07A0  0188               	clrf	8	;volatile
   554     07A1                     l49:
   555     07A1  0008               	return
   556     07A2                     __end_of_GPIO_Init:
   557     0002                     ___latbits      equ	2
   558     007E                     btemp           set	126	;btemp
   559     007E                     wtemp0          set	126
   560                           
   561                           	psect	config
   562                           
   563                           ;Config register CONFIG @ 0x2007
   564                           ;	Oscillator Selection bits
   565                           ;	FOSC = HS, HS oscillator
   566                           ;	Watchdog Timer Enable bit
   567                           ;	WDTE = OFF, WDT disabled
   568                           ;	Power-up Timer Enable bit
   569                           ;	PWRTE = ON, PWRT enabled
   570                           ;	Brown-out Reset Enable bit
   571                           ;	BOREN = ON, BOR enabled
   572                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   573                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   574                           ;	Data EEPROM Memory Code Protection bit
   575                           ;	CPD = OFF, Data EEPROM code protection off
   576                           ;	Flash Program Memory Write Enable bits
   577                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   578                           ;	In-Circuit Debugger Mode bit
   579                           ;	DEBUG = 0x1, unprogrammed default
   580                           ;	Flash Program Memory Code Protection bit
   581                           ;	CP = OFF, Code protection off
   582     2007                     	org	8199
   583     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      45
                                              1 COMMON     3     3      0
                          _GPIO_Init
                       _UART_TX_Init
                    _UART_Write_Data
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Data                                      1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Init
   _UART_TX_Init
   _UART_Write_Data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue May 13 15:37:41 2025

                     l40 07BC                       l43 07A3                       l46 07AD  
                     l49 07A1                       u10 07A9                       u11 07A8  
                     u20 07CE                       u21 07CD                       u30 07DE  
                     u31 07DD                       u40 07EE                       u41 07ED  
                     u57 07D4                       u67 07E4                      l601 07A9  
                    l611 07D0                      l603 07BD                      l621 07EE  
                    l613 07D8                      l605 07C7                      l623 07F4  
                    l615 07DE                      l607 07C8                      l617 07E0  
                    l609 07CE                      l619 07E8                      l593 0799  
                    l595 079D                      l597 07AE                      l599 07A3  
                   _main 07BD                     btemp 007E                     start 0000  
__end_of_UART_Write_Data 07AE                    ?_main 0070                    _SPBRG 0099  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0071  
      __end_of_GPIO_Init 07A2         ?_UART_Write_Data 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07BD            ?_UART_TX_Init 0070  
                __ptext1 07A2                  __ptext2 07AE                  __ptext3 0799  
         ??_UART_TX_Init 0070                _GPIO_Init 0799     end_of_initialization 07FC  
              _RCSTAbits 0018                _PORTBbits 0006                _TRISCbits 0087  
             ?_GPIO_Init 0070                _TXSTAbits 0098      start_initialization 07FC  
   __end_of_UART_TX_Init 07BD                ___latbits 0002              ??_GPIO_Init 0070  
      ??_UART_Write_Data 0070      UART_Write_Data@data 0070             _UART_TX_Init 07AE  
               main@data 0073          _UART_Write_Data 07A2  
