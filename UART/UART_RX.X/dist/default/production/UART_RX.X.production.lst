

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue May 13 15:41:20 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,space=0,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     000B                     _INTCONbits     set	11
   178     0018                     _RCSTAbits      set	24
   179     0008                     _PORTD          set	8
   180     001A                     _RCREG          set	26
   181     000C                     _PIR1bits       set	12
   182     0088                     _TRISD          set	136
   183     008C                     _PIE1bits       set	140
   184     0087                     _TRISCbits      set	135
   185     0098                     _TXSTAbits      set	152
   186     0099                     _SPBRG          set	153
   187                           
   188                           	psect	cinit
   189     000F                     start_initialization:	
   190                           ; #config settings
   191                           
   192     000F                     __initialization:
   193                           
   194                           ; Clear objects allocated to COMMON
   195     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   196     0010                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199     0010                     __end_of__initialization:
   200     0010  0183               	clrf	3
   201     0011  120A  118A  2839   	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMMON
   204     0072                     __pbssCOMMON:
   205     0072                     _UART_Buffer:
   206     0072                     	ds	1
   207                           
   208                           	psect	cstackCOMMON
   209     0070                     __pcstackCOMMON:
   210     0070                     ?_UART_RX_Init:
   211     0070                     ?_GPIO_Init:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ?_ISR:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ??_ISR:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225     0070                     	ds	2
   226     0072                     ??_UART_RX_Init:
   227     0072                     ??_GPIO_Init:	
   228                           ; 1 bytes @ 0x2
   229                           
   230     0072                     ??_main:	
   231                           ; 1 bytes @ 0x2
   232                           
   233                           
   234                           	psect	maintext
   235     0039                     __pmaintext:	
   236                           ; 1 bytes @ 0x2
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 19 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called: 2
   262 ;; This function calls:
   263 ;;		_GPIO_Init
   264 ;;		_UART_RX_Init
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270     0039                     _main:	
   271                           ;psect for function _main
   272                           
   273     0039                     l594:	
   274                           ;incstack = 0
   275                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   276                           
   277                           
   278                           ;main.c: 21:     UART_RX_Init();
   279     0039  120A  118A  2014  120A  118A  	fcall	_UART_RX_Init
   280                           
   281                           ;main.c: 22:     GPIO_Init();
   282     003E  120A  118A  2047  120A  118A  	fcall	_GPIO_Init
   283     0043                     l31:	
   284                           ;main.c: 24:     while(1)
   285                           
   286     0043                     l32:	
   287                           ;main.c: 25:     {;main.c: 27:     }
   288                           
   289     0043  2843               	goto	l31
   290     0044  120A  118A  280C   	ljmp	start
   291     0047                     __end_of_main:
   292                           
   293                           	psect	text1
   294     0014                     __ptext1:	
   295 ;; *************** function _UART_RX_Init *****************
   296 ;; Defined at:
   297 ;;		line 44 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		None
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; Hardware stack levels required when called: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325     0014                     _UART_RX_Init:	
   326                           ;psect for function _UART_RX_Init
   327                           
   328     0014                     l590:	
   329                           ;incstack = 0
   330                           ; Regs used in _UART_RX_Init: []
   331                           
   332                           
   333                           ;main.c: 46:     SPBRG = 25;
   334     0014  3019               	movlw	25
   335     0015  1683               	bsf	3,5	;RP0=1, select bank1
   336     0016  1303               	bcf	3,6	;RP1=0, select bank1
   337     0017  0099               	movwf	25	;volatile
   338                           
   339                           ;main.c: 47:     TXSTAbits.BRGH = 1;
   340     0018  1518               	bsf	24,2	;volatile
   341                           
   342                           ;main.c: 48:     RCSTAbits.SPEN = 1;
   343     0019  1283               	bcf	3,5	;RP0=0, select bank0
   344     001A  1303               	bcf	3,6	;RP1=0, select bank0
   345     001B  1798               	bsf	24,7	;volatile
   346                           
   347                           ;main.c: 49:     TXSTAbits.SYNC = 0;
   348     001C  1683               	bsf	3,5	;RP0=1, select bank1
   349     001D  1303               	bcf	3,6	;RP1=0, select bank1
   350     001E  1218               	bcf	24,4	;volatile
   351                           
   352                           ;main.c: 50:     TRISCbits.TRISC6 = 1;
   353     001F  1707               	bsf	7,6	;volatile
   354                           
   355                           ;main.c: 51:     TRISCbits.TRISC7 = 1;
   356     0020  1787               	bsf	7,7	;volatile
   357                           
   358                           ;main.c: 52:     PIE1bits.RCIE = 1;
   359     0021  168C               	bsf	12,5	;volatile
   360                           
   361                           ;main.c: 53:     INTCONbits.PEIE = 1;
   362     0022  170B               	bsf	11,6	;volatile
   363                           
   364                           ;main.c: 54:     INTCONbits.GIE = 1;
   365     0023  178B               	bsf	11,7	;volatile
   366                           
   367                           ;main.c: 55:     RCSTAbits.CREN = 1;
   368     0024  1283               	bcf	3,5	;RP0=0, select bank0
   369     0025  1303               	bcf	3,6	;RP1=0, select bank0
   370     0026  1618               	bsf	24,4	;volatile
   371     0027                     l43:
   372     0027  0008               	return
   373     0028                     __end_of_UART_RX_Init:
   374                           
   375                           	psect	text2
   376     0047                     __ptext2:	
   377 ;; *************** function _GPIO_Init *****************
   378 ;; Defined at:
   379 ;;		line 60 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		status,2
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; Hardware stack levels required when called: 1
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407     0047                     _GPIO_Init:	
   408                           ;psect for function _GPIO_Init
   409                           
   410     0047                     l592:	
   411                           ;incstack = 0
   412                           ; Regs used in _GPIO_Init: [status,2]
   413                           
   414                           
   415                           ;main.c: 62:     TRISD = 0;
   416     0047  1683               	bsf	3,5	;RP0=1, select bank1
   417     0048  1303               	bcf	3,6	;RP1=0, select bank1
   418     0049  0188               	clrf	8	;volatile
   419                           
   420                           ;main.c: 63:     PORTD = 0;
   421     004A  1283               	bcf	3,5	;RP0=0, select bank0
   422     004B  1303               	bcf	3,6	;RP1=0, select bank0
   423     004C  0188               	clrf	8	;volatile
   424     004D                     l46:
   425     004D  0008               	return
   426     004E                     __end_of_GPIO_Init:
   427                           
   428                           	psect	text3
   429     0028                     __ptext3:	
   430 ;; *************** function _ISR *****************
   431 ;; Defined at:
   432 ;;		line 33 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0
   448 ;;      Temps:          2       0       0       0       0
   449 ;;      Totals:         2       0       0       0       0
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; This function calls:
   453 ;;		Nothing
   454 ;; This function is called by:
   455 ;;		Interrupt level 1
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     0028                     _ISR:	
   460                           ;psect for function _ISR
   461                           
   462     0028                     i1l596:
   463                           
   464                           ;main.c: 35:     if (PIR1bits.RCIF)
   465     0028  1283               	bcf	3,5	;RP0=0, select bank0
   466     0029  1303               	bcf	3,6	;RP1=0, select bank0
   467     002A  1E8C               	btfss	12,5	;volatile
   468     002B  282D               	goto	u1_21
   469     002C  282E               	goto	u1_20
   470     002D                     u1_21:
   471     002D  2832               	goto	i1l40
   472     002E                     u1_20:
   473     002E                     i1l598:
   474                           
   475                           ;main.c: 36:     {;main.c: 37:         UART_Buffer = RCREG;
   476     002E  081A               	movf	26,w	;volatile
   477     002F  00F2               	movwf	_UART_Buffer	;volatile
   478                           
   479                           ;main.c: 38:         PORTD = UART_Buffer;
   480     0030  0872               	movf	_UART_Buffer,w	;volatile
   481     0031  0088               	movwf	8	;volatile
   482     0032                     i1l40:
   483     0032  0871               	movf	??_ISR+1,w
   484     0033  008A               	movwf	10
   485     0034  0E70               	swapf	??_ISR,w
   486     0035  0083               	movwf	3
   487     0036  0EFE               	swapf	btemp,f
   488     0037  0E7E               	swapf	btemp,w
   489     0038  0009               	retfie
   490     0039                     __end_of_ISR:
   491     0002                     ___latbits      equ	2
   492     007E                     btemp           set	126	;btemp
   493     007E                     wtemp0          set	126
   494                           
   495                           	psect	intentry
   496     0004                     __pintentry:	
   497                           ;incstack = 0
   498                           ; Regs used in _ISR: [wreg]
   499                           
   500     0004                     interrupt_function:
   501     007E                     saved_w         set	btemp
   502     0004  00FE               	movwf	btemp
   503     0005  0E03               	swapf	3,w
   504     0006  00F0               	movwf	??_ISR
   505     0007  080A               	movf	10,w
   506     0008  00F1               	movwf	??_ISR+1
   507     0009  120A  118A  2828   	ljmp	_ISR
   508                           
   509                           	psect	config
   510                           
   511                           ;Config register CONFIG @ 0x2007
   512                           ;	Oscillator Selection bits
   513                           ;	FOSC = HS, HS oscillator
   514                           ;	Watchdog Timer Enable bit
   515                           ;	WDTE = OFF, WDT disabled
   516                           ;	Power-up Timer Enable bit
   517                           ;	PWRTE = ON, PWRT enabled
   518                           ;	Brown-out Reset Enable bit
   519                           ;	BOREN = ON, BOR enabled
   520                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   521                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   522                           ;	Data EEPROM Memory Code Protection bit
   523                           ;	CPD = OFF, Data EEPROM code protection off
   524                           ;	Flash Program Memory Write Enable bits
   525                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   526                           ;	In-Circuit Debugger Mode bit
   527                           ;	DEBUG = 0x1, unprogrammed default
   528                           ;	Flash Program Memory Code Protection bit
   529                           ;	CP = OFF, Code protection off
   530     2007                     	org	8199
   531     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _GPIO_Init
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Init
   _UART_RX_Init

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue May 13 15:41:20 2025

                     l31 0043                       l32 0043                       l43 0027  
                     l46 004D                      l590 0014                      l592 0047  
                    l594 0039                      _ISR 0028                     ?_ISR 0070  
                   i1l40 0032                     u1_20 002E                     u1_21 002D  
                   _main 0039                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l596 0028  
                  i1l598 002E                    _RCREG 001A                    _SPBRG 0099  
                  _PORTD 0008                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0047                   ??_main 0072        __end_of_GPIO_Init 004E  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0039               __pintentry 0004            ?_UART_RX_Init 0070  
                __ptext1 0014                  __ptext2 0047                  __ptext3 0028  
         ??_UART_RX_Init 0072                _GPIO_Init 0047     end_of_initialization 0010  
              _RCSTAbits 0018                _TRISCbits 0087               ?_GPIO_Init 0070  
              _TXSTAbits 0098      start_initialization 000F              __end_of_ISR 0039  
   __end_of_UART_RX_Init 0028              __pbssCOMMON 0072                ___latbits 0002  
            ??_GPIO_Init 0072        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C             _UART_RX_Init 0014               _INTCONbits 000B  
               intlevel1 0000              _UART_Buffer 0072  
