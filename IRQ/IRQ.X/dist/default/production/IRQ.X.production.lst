

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Mar 23 19:15:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174     0007                     _PORTCbits      set	7
   175     000B                     _INTCONbits     set	11
   176     0081                     _OPTION_REGbits set	129
   177     0087                     _TRISCbits      set	135
   178                           
   179                           	psect	cinit
   180     000F                     start_initialization:	
   181                           ; #config settings
   182                           
   183     000F                     __initialization:
   184     000F                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     000F                     __end_of__initialization:
   188     000F  0183               	clrf	3
   189     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_main:
   194     0070                     ?_ISR:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ??_ISR:	
   198                           ; 1 bytes @ 0x0
   199                           
   200                           
   201                           ; 1 bytes @ 0x0
   202     0070                     	ds	2
   203     0072                     ??_main:
   204                           
   205                           ; 1 bytes @ 0x2
   206     0072                     	ds	3
   207                           
   208                           	psect	maintext
   209     0013                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 13 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          3       0       0       0       0
   232 ;;      Totals:         3       0       0       0       0
   233 ;;Total ram usage:        3 bytes
   234 ;; Hardware stack levels required when called: 1
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     0013                     _main:	
   243                           ;psect for function _main
   244                           
   245     0013                     l568:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg]
   248                           
   249                           
   250                           ;main.c: 16:     TRISCbits.TRISC1 = 0;
   251     0013  1683               	bsf	3,5	;RP0=1, select bank1
   252     0014  1303               	bcf	3,6	;RP1=0, select bank1
   253     0015  1087               	bcf	7,1	;volatile
   254                           
   255                           ;main.c: 17:     TRISCbits.TRISC2 = 0;
   256     0016  1107               	bcf	7,2	;volatile
   257                           
   258                           ;main.c: 20:     OPTION_REGbits.INTEDG = 1;
   259     0017  1701               	bsf	1,6	;volatile
   260                           
   261                           ;main.c: 23:     INTCONbits.INTE = 1;
   262     0018  160B               	bsf	11,4	;volatile
   263                           
   264                           ;main.c: 24:     INTCONbits.GIE = 1;
   265     0019  178B               	bsf	11,7	;volatile
   266     001A                     l15:	
   267                           ;main.c: 26:     while(1)
   268                           
   269                           
   270                           ;main.c: 27:     {;main.c: 28:         PORTCbits.RC2 = 1;
   271     001A  1283               	bcf	3,5	;RP0=0, select bank0
   272     001B  1303               	bcf	3,6	;RP1=0, select bank0
   273     001C  1507               	bsf	7,2	;volatile
   274     001D                     l570:
   275                           
   276                           ;main.c: 29:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   277     001D  3006               	movlw	6
   278     001E  00F4               	movwf	??_main+2
   279     001F  3013               	movlw	19
   280     0020  00F3               	movwf	??_main+1
   281     0021  30AD               	movlw	173
   282     0022  00F2               	movwf	??_main
   283     0023                     u47:
   284     0023  0BF2               	decfsz	??_main,f
   285     0024  2823               	goto	u47
   286     0025  0BF3               	decfsz	??_main+1,f
   287     0026  2823               	goto	u47
   288     0027  0BF4               	decfsz	??_main+2,f
   289     0028  2823               	goto	u47
   290     0029  282A               	nop2
   291     002A                     l572:
   292                           
   293                           ;main.c: 30:         PORTCbits.RC2 = 0;
   294     002A  1283               	bcf	3,5	;RP0=0, select bank0
   295     002B  1303               	bcf	3,6	;RP1=0, select bank0
   296     002C  1107               	bcf	7,2	;volatile
   297                           
   298                           ;main.c: 31:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   299     002D  3006               	movlw	6
   300     002E  00F4               	movwf	??_main+2
   301     002F  3013               	movlw	19
   302     0030  00F3               	movwf	??_main+1
   303     0031  30AD               	movlw	173
   304     0032  00F2               	movwf	??_main
   305     0033                     u57:
   306     0033  0BF2               	decfsz	??_main,f
   307     0034  2833               	goto	u57
   308     0035  0BF3               	decfsz	??_main+1,f
   309     0036  2833               	goto	u57
   310     0037  0BF4               	decfsz	??_main+2,f
   311     0038  2833               	goto	u57
   312     0039  283A               	nop2
   313     003A  281A               	goto	l15
   314     003B  120A  118A  280C   	ljmp	start
   315     003E                     __end_of_main:
   316                           
   317                           	psect	text1
   318     003E                     __ptext1:	
   319 ;; *************** function _ISR *****************
   320 ;; Defined at:
   321 ;;		line 40 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		status,0
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          2       0       0       0       0
   338 ;;      Totals:         2       0       0       0       0
   339 ;;Total ram usage:        2 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		Interrupt level 1
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     003E                     _ISR:	
   349                           ;psect for function _ISR
   350                           
   351     003E                     i1l574:
   352                           
   353                           ;main.c: 42:     if (INTCONbits.INTF)
   354     003E  1C8B               	btfss	11,1	;volatile
   355     003F  2841               	goto	u1_21
   356     0040  2842               	goto	u1_20
   357     0041                     u1_21:
   358     0041  2852               	goto	i1l24
   359     0042                     u1_20:
   360     0042                     i1l576:
   361                           
   362                           ;main.c: 43:     {;main.c: 44:         PORTCbits.RC1 = ~PORTCbits.RC1;
   363     0042  1003               	clrc
   364     0043  1283               	bcf	3,5	;RP0=0, select bank0
   365     0044  1303               	bcf	3,6	;RP1=0, select bank0
   366     0045  1C87               	btfss	7,1	;volatile
   367     0046  1403               	setc
   368     0047  1803               	btfsc	3,0
   369     0048  284A               	goto	u2_21
   370     0049  284E               	goto	u2_20
   371     004A                     u2_21:
   372     004A  1283               	bcf	3,5	;RP0=0, select bank0
   373     004B  1303               	bcf	3,6	;RP1=0, select bank0
   374     004C  1487               	bsf	7,1	;volatile
   375     004D  2851               	goto	u3_24
   376     004E                     u2_20:
   377     004E  1283               	bcf	3,5	;RP0=0, select bank0
   378     004F  1303               	bcf	3,6	;RP1=0, select bank0
   379     0050  1087               	bcf	7,1	;volatile
   380     0051                     u3_24:
   381     0051                     i1l578:
   382                           
   383                           ;main.c: 45:         INTCONbits.INTF = 0;
   384     0051  108B               	bcf	11,1	;volatile
   385     0052                     i1l24:
   386     0052  0871               	movf	??_ISR+1,w
   387     0053  008A               	movwf	10
   388     0054  0E70               	swapf	??_ISR,w
   389     0055  0083               	movwf	3
   390     0056  0EFE               	swapf	btemp,f
   391     0057  0E7E               	swapf	btemp,w
   392     0058  0009               	retfie
   393     0059                     __end_of_ISR:
   394     0002                     ___latbits      equ	2
   395     007E                     btemp           set	126	;btemp
   396     007E                     wtemp0          set	126
   397                           
   398                           	psect	intentry
   399     0004                     __pintentry:	
   400                           ;incstack = 0
   401                           ; Regs used in _ISR: [status,0]
   402                           
   403     0004                     interrupt_function:
   404     007E                     saved_w         set	btemp
   405     0004  00FE               	movwf	btemp
   406     0005  0E03               	swapf	3,w
   407     0006  00F0               	movwf	??_ISR
   408     0007  080A               	movf	10,w
   409     0008  00F1               	movwf	??_ISR+1
   410     0009  120A  118A  283E   	ljmp	_ISR
   411                           
   412                           	psect	config
   413                           
   414                           ;Config register CONFIG @ 0x2007
   415                           ;	Oscillator Selection bits
   416                           ;	FOSC = HS, HS oscillator
   417                           ;	Watchdog Timer Enable bit
   418                           ;	WDTE = OFF, WDT disabled
   419                           ;	Power-up Timer Enable bit
   420                           ;	PWRTE = ON, PWRT enabled
   421                           ;	Brown-out Reset Enable bit
   422                           ;	BOREN = ON, BOR enabled
   423                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   424                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   425                           ;	Data EEPROM Memory Code Protection bit
   426                           ;	CPD = OFF, Data EEPROM code protection off
   427                           ;	Flash Program Memory Write Enable bits
   428                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   429                           ;	In-Circuit Debugger Mode bit
   430                           ;	DEBUG = 0x1, unprogrammed default
   431                           ;	Flash Program Memory Code Protection bit
   432                           ;	CP = OFF, Code protection off
   433     2007                     	org	8199
   434     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      5       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Mar 23 19:15:51 2025

                     l15 001A                       u47 0023                       u57 0033  
                    l570 001D                      l572 002A                      l568 0013  
                    _ISR 003E                     ?_ISR 0070                     i1l24 0052  
                   u1_20 0042                     u1_21 0041                     u2_20 004E  
                   u2_21 004A                     u3_24 0051                     _main 0013  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l574 003E                    i1l576 0042  
                  i1l578 0051                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 003E  
                 ??_main 0072                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 0013  
             __pintentry 0004                  __ptext1 003E     end_of_initialization 000F  
              _PORTCbits 0007                _TRISCbits 0087      start_initialization 000F  
            __end_of_ISR 0059                ___latbits 0002        interrupt_function 0004  
             _INTCONbits 000B                 intlevel1 0000  
