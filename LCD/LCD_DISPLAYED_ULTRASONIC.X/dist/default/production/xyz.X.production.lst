

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 29 23:09:33 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=3
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=3
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=3
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=3
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=2
    50                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,space=0,delta=2
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	psect	text16_split_1,local,class=CODE,space=0,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62     0000                     
    63                           ; Generated 12/10/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F877 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97     0004                     fsr             equ	4
    98     0004                     fsr0            equ	4
    99     0000                     indf            equ	0
   100     0000                     indf0           equ	0
   101     0002                     pc              equ	2
   102     0002                     pcl             equ	2
   103     000A                     pclath          equ	10
   104     0003                     status          equ	3
   105     0000                     INDF            equ	0	;# 
   106     0001                     TMR0            equ	1	;# 
   107     0002                     PCL             equ	2	;# 
   108     0003                     STATUS          equ	3	;# 
   109     0004                     FSR             equ	4	;# 
   110     0005                     PORTA           equ	5	;# 
   111     0006                     PORTB           equ	6	;# 
   112     0007                     PORTC           equ	7	;# 
   113     0008                     PORTD           equ	8	;# 
   114     0009                     PORTE           equ	9	;# 
   115     000A                     PCLATH          equ	10	;# 
   116     000B                     INTCON          equ	11	;# 
   117     000C                     PIR1            equ	12	;# 
   118     000D                     PIR2            equ	13	;# 
   119     000E                     TMR1            equ	14	;# 
   120     000E                     TMR1L           equ	14	;# 
   121     000F                     TMR1H           equ	15	;# 
   122     0010                     T1CON           equ	16	;# 
   123     0011                     TMR2            equ	17	;# 
   124     0012                     T2CON           equ	18	;# 
   125     0013                     SSPBUF          equ	19	;# 
   126     0014                     SSPCON          equ	20	;# 
   127     0015                     CCPR1           equ	21	;# 
   128     0015                     CCPR1L          equ	21	;# 
   129     0016                     CCPR1H          equ	22	;# 
   130     0017                     CCP1CON         equ	23	;# 
   131     0018                     RCSTA           equ	24	;# 
   132     0019                     TXREG           equ	25	;# 
   133     001A                     RCREG           equ	26	;# 
   134     001B                     CCPR2           equ	27	;# 
   135     001B                     CCPR2L          equ	27	;# 
   136     001C                     CCPR2H          equ	28	;# 
   137     001D                     CCP2CON         equ	29	;# 
   138     001E                     ADRESH          equ	30	;# 
   139     001F                     ADCON0          equ	31	;# 
   140     0081                     OPTION_REG      equ	129	;# 
   141     0085                     TRISA           equ	133	;# 
   142     0086                     TRISB           equ	134	;# 
   143     0087                     TRISC           equ	135	;# 
   144     0088                     TRISD           equ	136	;# 
   145     0089                     TRISE           equ	137	;# 
   146     008C                     PIE1            equ	140	;# 
   147     008D                     PIE2            equ	141	;# 
   148     008E                     PCON            equ	142	;# 
   149     0091                     SSPCON2         equ	145	;# 
   150     0092                     PR2             equ	146	;# 
   151     0093                     SSPADD          equ	147	;# 
   152     0094                     SSPSTAT         equ	148	;# 
   153     0098                     TXSTA           equ	152	;# 
   154     0099                     SPBRG           equ	153	;# 
   155     009E                     ADRESL          equ	158	;# 
   156     009F                     ADCON1          equ	159	;# 
   157     010C                     EEDATA          equ	268	;# 
   158     010D                     EEADR           equ	269	;# 
   159     010E                     EEDATH          equ	270	;# 
   160     010F                     EEADRH          equ	271	;# 
   161     018C                     EECON1          equ	396	;# 
   162     018D                     EECON2          equ	397	;# 
   163     0000                     INDF            equ	0	;# 
   164     0001                     TMR0            equ	1	;# 
   165     0002                     PCL             equ	2	;# 
   166     0003                     STATUS          equ	3	;# 
   167     0004                     FSR             equ	4	;# 
   168     0005                     PORTA           equ	5	;# 
   169     0006                     PORTB           equ	6	;# 
   170     0007                     PORTC           equ	7	;# 
   171     0008                     PORTD           equ	8	;# 
   172     0009                     PORTE           equ	9	;# 
   173     000A                     PCLATH          equ	10	;# 
   174     000B                     INTCON          equ	11	;# 
   175     000C                     PIR1            equ	12	;# 
   176     000D                     PIR2            equ	13	;# 
   177     000E                     TMR1            equ	14	;# 
   178     000E                     TMR1L           equ	14	;# 
   179     000F                     TMR1H           equ	15	;# 
   180     0010                     T1CON           equ	16	;# 
   181     0011                     TMR2            equ	17	;# 
   182     0012                     T2CON           equ	18	;# 
   183     0013                     SSPBUF          equ	19	;# 
   184     0014                     SSPCON          equ	20	;# 
   185     0015                     CCPR1           equ	21	;# 
   186     0015                     CCPR1L          equ	21	;# 
   187     0016                     CCPR1H          equ	22	;# 
   188     0017                     CCP1CON         equ	23	;# 
   189     0018                     RCSTA           equ	24	;# 
   190     0019                     TXREG           equ	25	;# 
   191     001A                     RCREG           equ	26	;# 
   192     001B                     CCPR2           equ	27	;# 
   193     001B                     CCPR2L          equ	27	;# 
   194     001C                     CCPR2H          equ	28	;# 
   195     001D                     CCP2CON         equ	29	;# 
   196     001E                     ADRESH          equ	30	;# 
   197     001F                     ADCON0          equ	31	;# 
   198     0081                     OPTION_REG      equ	129	;# 
   199     0085                     TRISA           equ	133	;# 
   200     0086                     TRISB           equ	134	;# 
   201     0087                     TRISC           equ	135	;# 
   202     0088                     TRISD           equ	136	;# 
   203     0089                     TRISE           equ	137	;# 
   204     008C                     PIE1            equ	140	;# 
   205     008D                     PIE2            equ	141	;# 
   206     008E                     PCON            equ	142	;# 
   207     0091                     SSPCON2         equ	145	;# 
   208     0092                     PR2             equ	146	;# 
   209     0093                     SSPADD          equ	147	;# 
   210     0094                     SSPSTAT         equ	148	;# 
   211     0098                     TXSTA           equ	152	;# 
   212     0099                     SPBRG           equ	153	;# 
   213     009E                     ADRESL          equ	158	;# 
   214     009F                     ADCON1          equ	159	;# 
   215     010C                     EEDATA          equ	268	;# 
   216     010D                     EEADR           equ	269	;# 
   217     010E                     EEDATH          equ	270	;# 
   218     010F                     EEADRH          equ	271	;# 
   219     018C                     EECON1          equ	396	;# 
   220     018D                     EECON2          equ	397	;# 
   221     0000                     INDF            equ	0	;# 
   222     0001                     TMR0            equ	1	;# 
   223     0002                     PCL             equ	2	;# 
   224     0003                     STATUS          equ	3	;# 
   225     0004                     FSR             equ	4	;# 
   226     0005                     PORTA           equ	5	;# 
   227     0006                     PORTB           equ	6	;# 
   228     0007                     PORTC           equ	7	;# 
   229     0008                     PORTD           equ	8	;# 
   230     0009                     PORTE           equ	9	;# 
   231     000A                     PCLATH          equ	10	;# 
   232     000B                     INTCON          equ	11	;# 
   233     000C                     PIR1            equ	12	;# 
   234     000D                     PIR2            equ	13	;# 
   235     000E                     TMR1            equ	14	;# 
   236     000E                     TMR1L           equ	14	;# 
   237     000F                     TMR1H           equ	15	;# 
   238     0010                     T1CON           equ	16	;# 
   239     0011                     TMR2            equ	17	;# 
   240     0012                     T2CON           equ	18	;# 
   241     0013                     SSPBUF          equ	19	;# 
   242     0014                     SSPCON          equ	20	;# 
   243     0015                     CCPR1           equ	21	;# 
   244     0015                     CCPR1L          equ	21	;# 
   245     0016                     CCPR1H          equ	22	;# 
   246     0017                     CCP1CON         equ	23	;# 
   247     0018                     RCSTA           equ	24	;# 
   248     0019                     TXREG           equ	25	;# 
   249     001A                     RCREG           equ	26	;# 
   250     001B                     CCPR2           equ	27	;# 
   251     001B                     CCPR2L          equ	27	;# 
   252     001C                     CCPR2H          equ	28	;# 
   253     001D                     CCP2CON         equ	29	;# 
   254     001E                     ADRESH          equ	30	;# 
   255     001F                     ADCON0          equ	31	;# 
   256     0081                     OPTION_REG      equ	129	;# 
   257     0085                     TRISA           equ	133	;# 
   258     0086                     TRISB           equ	134	;# 
   259     0087                     TRISC           equ	135	;# 
   260     0088                     TRISD           equ	136	;# 
   261     0089                     TRISE           equ	137	;# 
   262     008C                     PIE1            equ	140	;# 
   263     008D                     PIE2            equ	141	;# 
   264     008E                     PCON            equ	142	;# 
   265     0091                     SSPCON2         equ	145	;# 
   266     0092                     PR2             equ	146	;# 
   267     0093                     SSPADD          equ	147	;# 
   268     0094                     SSPSTAT         equ	148	;# 
   269     0098                     TXSTA           equ	152	;# 
   270     0099                     SPBRG           equ	153	;# 
   271     009E                     ADRESL          equ	158	;# 
   272     009F                     ADCON1          equ	159	;# 
   273     010C                     EEDATA          equ	268	;# 
   274     010D                     EEADR           equ	269	;# 
   275     010E                     EEDATH          equ	270	;# 
   276     010F                     EEADRH          equ	271	;# 
   277     018C                     EECON1          equ	396	;# 
   278     018D                     EECON2          equ	397	;# 
   279     000E                     _TMR1           set	14
   280     0006                     _PORTBbits      set	6
   281     0008                     _PORTDbits      set	8
   282     0012                     _T2CONbits      set	18
   283     000B                     _INTCONbits     set	11
   284     0010                     _T1CONbits      set	16
   285     0011                     _TMR2           set	17
   286     000C                     _PIR1bits       set	12
   287     0086                     _TRISBbits      set	134
   288     0086                     _TRISB          set	134
   289     0088                     _TRISDbits      set	136
   290     008C                     _PIE1bits       set	140
   291                           
   292                           	psect	strings
   293     1800                     __pstrings:
   294     1800                     stringtab:
   295     1800                     __stringtab:
   296                           
   297                           ;	String table - string pointers are 1 byte each
   298     1800  1BFF               	btfsc	btemp+1,7
   299     1801  280A               	ljmp	stringcode
   300     1802  1383               	bcf	3,7
   301     1803  187F               	btfsc	btemp+1,0
   302     1804  1783               	bsf	3,7
   303     1805  0800               	movf	0,w
   304     1806  0A84               	incf	4,f
   305     1807  1903               	skipnz
   306     1808  0AFF               	incf	btemp+1,f
   307     1809  0008               	return
   308     180A                     stringcode:
   309     180A                     stringdir:
   310     180A  3018               	movlw	high stringdir
   311     180B  008A               	movwf	10
   312     180C  0804               	movf	4,w
   313     180D  0A84               	incf	4,f
   314     180E  0782               	addwf	2,f
   315     180F                     __stringbase:
   316     180F  3400               	retlw	0
   317     1810                     __end_of__stringtab:
   318     1810                     STR_1:
   319     1810  3444               	retlw	68	;'D'
   320     1811  3469               	retlw	105	;'i'
   321     1812  3473               	retlw	115	;'s'
   322     1813  3474               	retlw	116	;'t'
   323     1814  3461               	retlw	97	;'a'
   324     1815  346E               	retlw	110	;'n'
   325     1816  3463               	retlw	99	;'c'
   326     1817  3465               	retlw	101	;'e'
   327     1818  3420               	retlw	32	;' '
   328     1819  3431               	retlw	49	;'1'
   329     181A  3420               	retlw	32	;' '
   330     181B  3469               	retlw	105	;'i'
   331     181C  3473               	retlw	115	;'s'
   332     181D  343A               	retlw	58	;':'
   333     181E  3400               	retlw	0
   334     181F                     STR_3:
   335     181F  3444               	retlw	68	;'D'
   336     1820  3469               	retlw	105	;'i'
   337     1821  3473               	retlw	115	;'s'
   338     1822  3474               	retlw	116	;'t'
   339     1823  3461               	retlw	97	;'a'
   340     1824  346E               	retlw	110	;'n'
   341     1825  3463               	retlw	99	;'c'
   342     1826  3465               	retlw	101	;'e'
   343     1827  3420               	retlw	32	;' '
   344     1828  3432               	retlw	50	;'2'
   345     1829  3420               	retlw	32	;' '
   346     182A  3469               	retlw	105	;'i'
   347     182B  3473               	retlw	115	;'s'
   348     182C  343A               	retlw	58	;':'
   349     182D  3400               	retlw	0
   350     182E                     STR_5:
   351     182E  3444               	retlw	68	;'D'
   352     182F  3469               	retlw	105	;'i'
   353     1830  3473               	retlw	115	;'s'
   354     1831  3474               	retlw	116	;'t'
   355     1832  3461               	retlw	97	;'a'
   356     1833  346E               	retlw	110	;'n'
   357     1834  3463               	retlw	99	;'c'
   358     1835  3465               	retlw	101	;'e'
   359     1836  3420               	retlw	32	;' '
   360     1837  3433               	retlw	51	;'3'
   361     1838  3420               	retlw	32	;' '
   362     1839  3469               	retlw	105	;'i'
   363     183A  3473               	retlw	115	;'s'
   364     183B  343A               	retlw	58	;':'
   365     183C  3400               	retlw	0
   366     183D                     STR_2:
   367     183D  3425               	retlw	37	;'%'
   368     183E  342E               	retlw	46	;'.'
   369     183F  3433               	retlw	51	;'3'
   370     1840  3466               	retlw	102	;'f'
   371     1841  3420               	retlw	32	;' '
   372     1842  345B               	retlw	91	;'['
   373     1843  3463               	retlw	99	;'c'
   374     1844  346D               	retlw	109	;'m'
   375     1845  345D               	retlw	93	;']'
   376     1846  3400               	retlw	0
   377     1847                     STR_7:
   378     1847  3469               	retlw	105	;'i'
   379     1848  346E               	retlw	110	;'n'
   380     1849  3466               	retlw	102	;'f'
   381     184A  3400               	retlw	0
   382     184B                     STR_10:
   383     184B  346E               	retlw	110	;'n'
   384     184C  3461               	retlw	97	;'a'
   385     184D  346E               	retlw	110	;'n'
   386     184E  3400               	retlw	0
   387     184B                     STR_11          equ	STR_10
   388     184B                     STR_12          equ	STR_10
   389     1847                     STR_8           equ	STR_7
   390     1847                     STR_9           equ	STR_7
   391     183D                     STR_4           equ	STR_2
   392     183D                     STR_6           equ	STR_2
   393                           
   394                           	psect	cinit
   395     000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398     000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   402     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK0
   405     0011  1283               	bcf	3,5	;RP0=0, select bank0
   406     0012  1303               	bcf	3,6	;RP1=0, select bank0
   407     0013  01EF               	clrf	__pbssBANK0& (0+127)
   408                           
   409                           ; Clear objects allocated to BANK1
   410     0014  1383               	bcf	3,7	;select IRP bank0
   411     0015  30DA               	movlw	low __pbssBANK1
   412     0016  0084               	movwf	4
   413     0017  30ED               	movlw	low (__pbssBANK1+19)
   414     0018  160A  158A  24AA  120A  118A  	fcall	clear_ram0
   415                           
   416                           ; Clear objects allocated to BANK3
   417     001D  1783               	bsf	3,7	;select IRP bank2
   418     001E  3090               	movlw	low __pbssBANK3
   419     001F  0084               	movwf	4
   420     0020  30B0               	movlw	low (__pbssBANK3+32)
   421     0021  160A  158A  24AA  120A  118A  	fcall	clear_ram0
   422                           
   423                           ; Clear objects allocated to BANK2
   424     0026  3010               	movlw	low __pbssBANK2
   425     0027  0084               	movwf	4
   426     0028  3060               	movlw	low (__pbssBANK2+80)
   427     0029  160A  158A  24AA  120A  118A  	fcall	clear_ram0
   428     002E                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431     002E                     __end_of__initialization:
   432     002E  0183               	clrf	3
   433     002F  160A  118A  28DA   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssCOMMON
   436     007A                     __pbssCOMMON:
   437     007A                     _updateSensor2:
   438     007A                     	ds	1
   439     007B                     _updateSensor1:
   440     007B                     	ds	1
   441                           
   442                           	psect	bssBANK0
   443     006F                     __pbssBANK0:
   444     006F                     _updateSensor3:
   445     006F                     	ds	1
   446                           
   447                           	psect	bssBANK1
   448     00DA                     __pbssBANK1:
   449     00DA                     _data:
   450     00DA                     	ds	4
   451     00DE                     _value_2:
   452     00DE                     	ds	4
   453     00E2                     _value_1:
   454     00E2                     	ds	4
   455     00E6                     _width:
   456     00E6                     	ds	2
   457     00E8                     _prec:
   458     00E8                     	ds	2
   459     00EA                     _C:
   460     00EA                     	ds	2
   461     00EC                     _flags:
   462     00EC                     	ds	1
   463                           
   464                           	psect	bssBANK3
   465     0190                     __pbssBANK3:
   466     0190                     floorf@F521:
   467     0190                     	ds	4
   468     0194                     ___fpclassifyf@F465:
   469     0194                     	ds	4
   470     0198                     _value_3:
   471     0198                     	ds	4
   472     019C                     _buffer:
   473     019C                     	ds	20
   474                           
   475                           	psect	bssBANK2
   476     0110                     __pbssBANK2:
   477     0110                     _dbuf:
   478     0110                     	ds	80
   479                           
   480                           	psect	clrtext
   481     1CAA                     clear_ram0:	
   482                           ;	Called with FSR containing the base address, and
   483                           ;	W with the last address+1
   484                           
   485     1CAA  0064               	clrwdt	;clear the watchdog before getting into this loop
   486     1CAB                     clrloop0:
   487     1CAB  0180               	clrf	0	;clear RAM location pointed to by FSR
   488     1CAC  0A84               	incf	4,f	;increment pointer
   489     1CAD  0604               	xorwf	4,w	;XOR with final address
   490     1CAE  1903               	btfsc	3,2	;have we reached the end yet?
   491     1CAF  3400               	retlw	0	;all done for this memory range, return
   492     1CB0  0604               	xorwf	4,w	;XOR again to restore value
   493     1CB1  2CAB               	goto	clrloop0	;do the next byte
   494                           
   495                           	psect	cstackBANK1
   496     00A0                     __pcstackBANK1:
   497     00A0                     efgtoa@ne:
   498                           
   499                           ; 2 bytes @ 0x0
   500     00A0                     	ds	2
   501     00A2                     efgtoa@p:
   502                           
   503                           ; 2 bytes @ 0x2
   504     00A2                     	ds	2
   505     00A4                     efgtoa@t:
   506                           
   507                           ; 2 bytes @ 0x4
   508     00A4                     	ds	2
   509     00A6                     _efgtoa$994:
   510                           
   511                           ; 2 bytes @ 0x6
   512     00A6                     	ds	2
   513     00A8                     efgtoa@pp:
   514                           
   515                           ; 1 bytes @ 0x8
   516     00A8                     	ds	1
   517     00A9                     efgtoa@mode:
   518                           
   519                           ; 1 bytes @ 0x9
   520     00A9                     	ds	1
   521     00AA                     efgtoa@nmode:
   522                           
   523                           ; 1 bytes @ 0xA
   524     00AA                     	ds	1
   525     00AB                     efgtoa@d:
   526                           
   527                           ; 2 bytes @ 0xB
   528     00AB                     	ds	2
   529     00AD                     efgtoa@m:
   530                           
   531                           ; 2 bytes @ 0xD
   532     00AD                     	ds	2
   533     00AF                     efgtoa@e:
   534                           
   535                           ; 2 bytes @ 0xF
   536     00AF                     	ds	2
   537     00B1                     efgtoa@w:
   538                           
   539                           ; 2 bytes @ 0x11
   540     00B1                     	ds	2
   541     00B3                     efgtoa@ou:
   542                           
   543                           ; 4 bytes @ 0x13
   544     00B3                     	ds	4
   545     00B7                     efgtoa@i:
   546                           
   547                           ; 2 bytes @ 0x17
   548     00B7                     	ds	2
   549     00B9                     efgtoa@h:
   550                           
   551                           ; 4 bytes @ 0x19
   552     00B9                     	ds	4
   553     00BD                     efgtoa@l:
   554                           
   555                           ; 4 bytes @ 0x1D
   556     00BD                     	ds	4
   557     00C1                     efgtoa@sign:
   558                           
   559                           ; 1 bytes @ 0x21
   560     00C1                     	ds	1
   561     00C2                     efgtoa@g:
   562                           
   563                           ; 4 bytes @ 0x22
   564     00C2                     	ds	4
   565     00C6                     efgtoa@n:
   566                           
   567                           ; 2 bytes @ 0x26
   568     00C6                     	ds	2
   569     00C8                     efgtoa@u:
   570                           
   571                           ; 4 bytes @ 0x28
   572     00C8                     	ds	4
   573     00CC                     ?_vfpfcnvrt:
   574     00CC                     vfpfcnvrt@fp:	
   575                           ; 1 bytes @ 0x2C
   576                           
   577                           
   578                           ; 2 bytes @ 0x2C
   579     00CC                     	ds	2
   580     00CE                     vfpfcnvrt@fmt:
   581                           
   582                           ; 1 bytes @ 0x2E
   583     00CE                     	ds	1
   584     00CF                     vfpfcnvrt@ap:
   585                           
   586                           ; 1 bytes @ 0x2F
   587     00CF                     	ds	1
   588     00D0                     ?_vfprintf:
   589     00D0                     vfprintf@fp:	
   590                           ; 2 bytes @ 0x30
   591                           
   592                           
   593                           ; 2 bytes @ 0x30
   594     00D0                     	ds	2
   595     00D2                     vfprintf@fmt:
   596                           
   597                           ; 1 bytes @ 0x32
   598     00D2                     	ds	1
   599     00D3                     vfprintf@ap:
   600                           
   601                           ; 1 bytes @ 0x33
   602     00D3                     	ds	1
   603     00D4                     ?_sprintf:
   604     00D4                     sprintf@s:	
   605                           ; 2 bytes @ 0x34
   606                           
   607                           
   608                           ; 1 bytes @ 0x34
   609     00D4                     	ds	1
   610     00D5                     sprintf@fmt:
   611                           
   612                           ; 1 bytes @ 0x35
   613     00D5                     	ds	5
   614                           
   615                           	psect	cstackCOMMON
   616     0070                     __pcstackCOMMON:
   617     0070                     ?_GPIO_Config:
   618     0070                     ?_LCD_Init:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_LCD_Clear:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_TMR1_Init:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_TMR2_Init:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_trigger_1:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_LCD_Display_1:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_trigger_2:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_LCD_Display_2:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_trigger_3:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_LCD_Display_3:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_putch:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_ISR:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_LCD_DATA:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_LCD_CMD:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_LCD_Write_Char:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     putch@c:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ??_ISR:	
   670                           ; 1 bytes @ 0x0
   671                           
   672                           
   673                           ; 1 bytes @ 0x0
   674     0070                     	ds	2
   675     0072                     ?_strcpy:
   676     0072                     ?_memcpy:	
   677                           ; 1 bytes @ 0x2
   678                           
   679     0072                     ?___fleq:	
   680                           ; 1 bytes @ 0x2
   681                           
   682     0072                     ?__Umul8_16:	
   683                           ; 1 bit 
   684                           
   685     0072                     ?_fputc:	
   686                           ; 2 bytes @ 0x2
   687                           
   688     0072                     ?___fpclassifyf:	
   689                           ; 2 bytes @ 0x2
   690                           
   691     0072                     ?___wmul:	
   692                           ; 2 bytes @ 0x2
   693                           
   694     0072                     ?_labs:	
   695                           ; 2 bytes @ 0x2
   696                           
   697     0072                     ?___flneg:	
   698                           ; 4 bytes @ 0x2
   699                           
   700     0072                     ?___fltol:	
   701                           ; 4 bytes @ 0x2
   702                           
   703     0072                     ?___fladd:	
   704                           ; 4 bytes @ 0x2
   705                           
   706     0072                     ?___fldiv:	
   707                           ; 4 bytes @ 0x2
   708                           
   709     0072                     ?___xxtofl:	
   710                           ; 4 bytes @ 0x2
   711                           
   712     0072                     LCD_DATA@data:	
   713                           ; 4 bytes @ 0x2
   714                           
   715     0072                     __Umul8_16@multiplicand:	
   716                           ; 1 bytes @ 0x2
   717                           
   718     0072                     memcpy@d1:	
   719                           ; 1 bytes @ 0x2
   720                           
   721     0072                     strcpy@dest:	
   722                           ; 1 bytes @ 0x2
   723                           
   724     0072                     ___wmul@multiplier:	
   725                           ; 1 bytes @ 0x2
   726                           
   727     0072                     fputc@c:	
   728                           ; 2 bytes @ 0x2
   729                           
   730     0072                     ___fleq@ff1:	
   731                           ; 2 bytes @ 0x2
   732                           
   733     0072                     ___flneg@f1:	
   734                           ; 4 bytes @ 0x2
   735                           
   736     0072                     ___fltol@f1:	
   737                           ; 4 bytes @ 0x2
   738                           
   739     0072                     ___fladd@b:	
   740                           ; 4 bytes @ 0x2
   741                           
   742     0072                     ___fldiv@a:	
   743                           ; 4 bytes @ 0x2
   744                           
   745     0072                     ___xxtofl@val:	
   746                           ; 4 bytes @ 0x2
   747                           
   748     0072                     ___fpclassifyf@x:	
   749                           ; 4 bytes @ 0x2
   750                           
   751     0072                     labs@a:	
   752                           ; 4 bytes @ 0x2
   753                           
   754     0072                     ??_GPIO_Config:	
   755                           ; 4 bytes @ 0x2
   756                           
   757     0072                     ??_TMR1_Init:	
   758                           ; 1 bytes @ 0x2
   759                           
   760     0072                     ??_TMR2_Init:	
   761                           ; 1 bytes @ 0x2
   762                           
   763     0072                     ??_putch:	
   764                           ; 1 bytes @ 0x2
   765                           
   766     0072                     ??_LCD_DATA:	
   767                           ; 1 bytes @ 0x2
   768                           
   769                           
   770                           ; 1 bytes @ 0x2
   771     0072                     	ds	1
   772     0073                     memcpy@s1:
   773     0073                     strcpy@src:	
   774                           ; 1 bytes @ 0x3
   775                           
   776     0073                     ??_LCD_CMD:	
   777                           ; 1 bytes @ 0x3
   778                           
   779     0073                     ??_LCD_Write_Char:	
   780                           ; 1 bytes @ 0x3
   781                           
   782                           
   783                           ; 1 bytes @ 0x3
   784     0073                     	ds	1
   785     0074                     LCD_CMD@cmd:
   786     0074                     LCD_Write_Char@high4:	
   787                           ; 1 bytes @ 0x4
   788                           
   789     0074                     strcpy@d:	
   790                           ; 1 bytes @ 0x4
   791                           
   792     0074                     ___wmul@multiplicand:	
   793                           ; 1 bytes @ 0x4
   794                           
   795     0074                     memcpy@n:	
   796                           ; 2 bytes @ 0x4
   797                           
   798     0074                     fputc@fp:	
   799                           ; 2 bytes @ 0x4
   800                           
   801     0074                     ??__Umul8_16:	
   802                           ; 2 bytes @ 0x4
   803                           
   804     0074                     ??_strcpy:	
   805                           ; 1 bytes @ 0x4
   806                           
   807                           
   808                           ; 1 bytes @ 0x4
   809     0074                     	ds	1
   810     0075                     ?_LCD_Set_Cursor:
   811     0075                     LCD_Write_Char@low4:	
   812                           ; 1 bytes @ 0x5
   813                           
   814     0075                     LCD_Set_Cursor@c:	
   815                           ; 1 bytes @ 0x5
   816                           
   817     0075                     ??_LCD_Init:	
   818                           ; 1 bytes @ 0x5
   819                           
   820     0075                     ??_LCD_Clear:	
   821                           ; 1 bytes @ 0x5
   822                           
   823                           
   824                           ; 1 bytes @ 0x5
   825     0075                     	ds	1
   826     0076                     ?_fputs:
   827     0076                     LCD_Write_Char@data:	
   828                           ; 2 bytes @ 0x6
   829                           
   830     0076                     memcpy@tmp:	
   831                           ; 1 bytes @ 0x6
   832                           
   833     0076                     fputs@s:	
   834                           ; 1 bytes @ 0x6
   835                           
   836     0076                     ___wmul@product:	
   837                           ; 1 bytes @ 0x6
   838                           
   839     0076                     ___fleq@ff2:	
   840                           ; 2 bytes @ 0x6
   841                           
   842     0076                     ___fladd@a:	
   843                           ; 4 bytes @ 0x6
   844                           
   845     0076                     ___fldiv@b:	
   846                           ; 4 bytes @ 0x6
   847                           
   848     0076                     ??_LCD_Set_Cursor:	
   849                           ; 4 bytes @ 0x6
   850                           
   851     0076                     ??_labs:	
   852                           ; 1 bytes @ 0x6
   853                           
   854     0076                     ??_memcpy:	
   855                           ; 1 bytes @ 0x6
   856                           
   857     0076                     ??___wmul:	
   858                           ; 1 bytes @ 0x6
   859                           
   860     0076                     ??___flneg:	
   861                           ; 1 bytes @ 0x6
   862                           
   863     0076                     ??___fltol:	
   864                           ; 1 bytes @ 0x6
   865                           
   866     0076                     ??___xxtofl:	
   867                           ; 1 bytes @ 0x6
   868                           
   869                           
   870                           ; 1 bytes @ 0x6
   871     0076                     	ds	1
   872     0077                     ?_LCD_Write_String:
   873     0077                     memcpy@d:	
   874                           ; 1 bytes @ 0x7
   875                           
   876     0077                     LCD_Write_String@str:	
   877                           ; 1 bytes @ 0x7
   878                           
   879     0077                     fputs@fp:	
   880                           ; 2 bytes @ 0x7
   881                           
   882                           
   883                           ; 2 bytes @ 0x7
   884     0077                     	ds	1
   885     0078                     ?_read_prec_or_width:
   886     0078                     read_prec_or_width@fmt:	
   887                           ; 2 bytes @ 0x8
   888                           
   889     0078                     memcpy@s:	
   890                           ; 1 bytes @ 0x8
   891                           
   892                           
   893                           ; 1 bytes @ 0x8
   894     0078                     	ds	1
   895     0079                     read_prec_or_width@ap:
   896     0079                     ??_pad:	
   897                           ; 1 bytes @ 0x9
   898                           
   899                           
   900                           ; 1 bytes @ 0x9
   901     0079                     	ds	1
   902     007A                     ??_vfprintf:
   903     007A                     ??_main:	
   904                           ; 1 bytes @ 0xA
   905                           
   906     007A                     ??___flsub:	
   907                           ; 1 bytes @ 0xA
   908                           
   909     007A                     ??_read_prec_or_width:	
   910                           ; 1 bytes @ 0xA
   911                           
   912                           
   913                           	psect	cstackBANK0
   914     0020                     __pcstackBANK0:	
   915                           ; 1 bytes @ 0xA
   916                           
   917     0020                     LCD_Set_Cursor@r:
   918     0020                     ___fltol@sign1:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0020                     ___xxtofl@sign:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0020                     read_prec_or_width@c:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0020                     __Umul8_16@product:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0020                     ??_LCD_Write_String:	
   931                           ; 2 bytes @ 0x0
   932                           
   933     0020                     ??_fputc:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0020                     ??___fpclassifyf:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0020                     ??___fleq:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0020                     ??___fladd:	
   943                           ; 1 bytes @ 0x0
   944                           
   945     0020                     ??___fldiv:	
   946                           ; 1 bytes @ 0x0
   947                           
   948                           
   949                           ; 1 bytes @ 0x0
   950     0020                     	ds	1
   951     0021                     LCD_Set_Cursor@high4:
   952     0021                     ___fltol@exp1:	
   953                           ; 1 bytes @ 0x1
   954                           
   955     0021                     ___xxtofl@exp:	
   956                           ; 1 bytes @ 0x1
   957                           
   958     0021                     read_prec_or_width@n:	
   959                           ; 1 bytes @ 0x1
   960                           
   961                           
   962                           ; 2 bytes @ 0x1
   963     0021                     	ds	1
   964     0022                     LCD_Set_Cursor@low4:
   965     0022                     __Umul8_16@word_mpld:	
   966                           ; 1 bytes @ 0x2
   967                           
   968     0022                     ___xxtofl@arg:	
   969                           ; 2 bytes @ 0x2
   970                           
   971                           
   972                           ; 4 bytes @ 0x2
   973     0022                     	ds	1
   974     0023                     LCD_Set_Cursor@temp:
   975     0023                     LCD_Write_String@i:	
   976                           ; 1 bytes @ 0x3
   977                           
   978                           
   979                           ; 2 bytes @ 0x3
   980     0023                     	ds	1
   981     0024                     __Umul8_16@multiplier:
   982                           
   983                           ; 1 bytes @ 0x4
   984     0024                     	ds	1
   985     0025                     ___fldiv@rem:
   986                           
   987                           ; 4 bytes @ 0x5
   988     0025                     	ds	1
   989     0026                     ?___flmul:
   990     0026                     ___fpclassifyf@e:	
   991                           ; 4 bytes @ 0x6
   992                           
   993     0026                     ___flmul@b:	
   994                           ; 2 bytes @ 0x6
   995                           
   996                           
   997                           ; 4 bytes @ 0x6
   998     0026                     	ds	2
   999     0028                     ___fladd@signs:
  1000     0028                     ___fpclassifyf@u:	
  1001                           ; 1 bytes @ 0x8
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x8
  1005     0028                     	ds	1
  1006     0029                     ___fladd@aexp:
  1007     0029                     ___fldiv@sign:	
  1008                           ; 1 bytes @ 0x9
  1009                           
  1010     0029                     ??_fputs:	
  1011                           ; 1 bytes @ 0x9
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0x9
  1015     0029                     	ds	1
  1016     002A                     ___fladd@bexp:
  1017     002A                     ___fldiv@new_exp:	
  1018                           ; 1 bytes @ 0xA
  1019                           
  1020     002A                     ___flmul@a:	
  1021                           ; 2 bytes @ 0xA
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0xA
  1025     002A                     	ds	1
  1026     002B                     ___fladd@grs:
  1027     002B                     fputs@c:	
  1028                           ; 1 bytes @ 0xB
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0xB
  1032     002B                     	ds	1
  1033     002C                     fputs@i:
  1034     002C                     ___fldiv@grs:	
  1035                           ; 2 bytes @ 0xC
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0xC
  1039     002C                     	ds	2
  1040     002E                     ?_pad:
  1041     002E                     pad@fp:	
  1042                           ; 1 bytes @ 0xE
  1043                           
  1044     002E                     ??___flmul:	
  1045                           ; 2 bytes @ 0xE
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0xE
  1049     002E                     	ds	2
  1050     0030                     ___fldiv@bexp:
  1051     0030                     pad@buf:	
  1052                           ; 1 bytes @ 0x10
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x10
  1056     0030                     	ds	1
  1057     0031                     ___fldiv@aexp:
  1058     0031                     pad@p:	
  1059                           ; 1 bytes @ 0x11
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0x11
  1063     0031                     	ds	1
  1064     0032                     ?_floorf:
  1065     0032                     floorf@x:	
  1066                           ; 4 bytes @ 0x12
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x12
  1070     0032                     	ds	1
  1071     0033                     ___flmul@sign:
  1072     0033                     pad@i:	
  1073                           ; 1 bytes @ 0x13
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x13
  1077     0033                     	ds	1
  1078     0034                     ___flmul@aexp:
  1079                           
  1080                           ; 1 bytes @ 0x14
  1081     0034                     	ds	1
  1082     0035                     ___flmul@grs:
  1083                           
  1084                           ; 4 bytes @ 0x15
  1085     0035                     	ds	1
  1086     0036                     ??_floorf:
  1087                           
  1088                           ; 1 bytes @ 0x16
  1089     0036                     	ds	3
  1090     0039                     ___flmul@bexp:
  1091                           
  1092                           ; 1 bytes @ 0x19
  1093     0039                     	ds	1
  1094     003A                     ___flmul@prod:
  1095                           
  1096                           ; 4 bytes @ 0x1A
  1097     003A                     	ds	2
  1098     003C                     floorf@m:
  1099                           
  1100                           ; 4 bytes @ 0x1C
  1101     003C                     	ds	2
  1102     003E                     ___flmul@temp:
  1103                           
  1104                           ; 2 bytes @ 0x1E
  1105     003E                     	ds	2
  1106     0040                     ?___flge:
  1107     0040                     ?___flsub:	
  1108                           ; 1 bit 
  1109                           
  1110     0040                     floorf@e:	
  1111                           ; 4 bytes @ 0x20
  1112                           
  1113     0040                     ___flge@ff1:	
  1114                           ; 2 bytes @ 0x20
  1115                           
  1116     0040                     ___flsub@a:	
  1117                           ; 4 bytes @ 0x20
  1118                           
  1119     0040                     ??_trigger_1:	
  1120                           ; 4 bytes @ 0x20
  1121                           
  1122     0040                     ??_trigger_2:	
  1123                           ; 1 bytes @ 0x20
  1124                           
  1125     0040                     ??_trigger_3:	
  1126                           ; 1 bytes @ 0x20
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x20
  1130     0040                     	ds	2
  1131     0042                     floorf@u:
  1132                           
  1133                           ; 4 bytes @ 0x22
  1134     0042                     	ds	2
  1135     0044                     ___flge@ff2:
  1136     0044                     ___flsub@b:	
  1137                           ; 4 bytes @ 0x24
  1138                           
  1139                           
  1140                           ; 4 bytes @ 0x24
  1141     0044                     	ds	4
  1142     0048                     ??___flge:
  1143                           
  1144                           ; 1 bytes @ 0x28
  1145     0048                     	ds	4
  1146     004C                     ?_efgtoa:
  1147     004C                     efgtoa@fp:	
  1148                           ; 1 bytes @ 0x2C
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x2C
  1152     004C                     	ds	2
  1153     004E                     efgtoa@f:
  1154                           
  1155                           ; 4 bytes @ 0x2E
  1156     004E                     	ds	4
  1157     0052                     efgtoa@c:
  1158                           
  1159                           ; 1 bytes @ 0x32
  1160     0052                     	ds	1
  1161     0053                     ??_efgtoa:
  1162                           
  1163                           ; 1 bytes @ 0x33
  1164     0053                     	ds	4
  1165     0057                     ??_vfpfcnvrt:
  1166                           
  1167                           ; 1 bytes @ 0x37
  1168     0057                     	ds	2
  1169     0059                     vfpfcnvrt@convarg:
  1170                           
  1171                           ; 4 bytes @ 0x39
  1172     0059                     	ds	4
  1173     005D                     vfpfcnvrt@c:
  1174                           
  1175                           ; 1 bytes @ 0x3D
  1176     005D                     	ds	1
  1177     005E                     vfpfcnvrt@cp:
  1178                           
  1179                           ; 1 bytes @ 0x3E
  1180     005E                     	ds	1
  1181     005F                     vfprintf@cfmt:
  1182                           
  1183                           ; 1 bytes @ 0x3F
  1184     005F                     	ds	1
  1185     0060                     ??_sprintf:
  1186                           
  1187                           ; 1 bytes @ 0x40
  1188     0060                     	ds	1
  1189     0061                     sprintf@ap:
  1190                           
  1191                           ; 1 bytes @ 0x41
  1192     0061                     	ds	1
  1193     0062                     sprintf@f:
  1194                           
  1195                           ; 11 bytes @ 0x42
  1196     0062                     	ds	11
  1197     006D                     ??_LCD_Display_1:
  1198     006D                     ??_LCD_Display_2:	
  1199                           ; 1 bytes @ 0x4D
  1200                           
  1201     006D                     ??_LCD_Display_3:	
  1202                           ; 1 bytes @ 0x4D
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x4D
  1206     006D                     	ds	2
  1207                           
  1208                           	psect	maintext
  1209     10DA                     __pmaintext:	
  1210 ;;
  1211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1212 ;;
  1213 ;; *************** function _main *****************
  1214 ;; Defined at:
  1215 ;;		line 51 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : B00/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels required when called: 10
  1235 ;; This function calls:
  1236 ;;		_GPIO_Config
  1237 ;;		_LCD_Clear
  1238 ;;		_LCD_Display_1
  1239 ;;		_LCD_Display_2
  1240 ;;		_LCD_Display_3
  1241 ;;		_LCD_Init
  1242 ;;		_TMR1_Init
  1243 ;;		_TMR2_Init
  1244 ;;		_trigger_1
  1245 ;;		_trigger_2
  1246 ;;		_trigger_3
  1247 ;; This function is called by:
  1248 ;;		Startup code after reset
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252     10DA                     _main:	
  1253                           ;psect for function _main
  1254                           
  1255     10DA                     l4262:	
  1256                           ;incstack = 0
  1257 ;; hardware stack exceeded
  1258                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1259                           
  1260                           
  1261                           ;main.c: 52:     GPIO_Config();
  1262     10DA  160A  158A  24B2  160A  118A  	fcall	_GPIO_Config
  1263     10DF                     l4264:
  1264                           
  1265                           ;main.c: 53:     LCD_Init();
  1266     10DF  160A  118A  22B8  160A  118A  	fcall	_LCD_Init
  1267     10E4                     l4266:
  1268                           
  1269                           ;main.c: 54:     LCD_Clear();
  1270     10E4  120A  118A  27F1  160A  118A  	fcall	_LCD_Clear
  1271                           
  1272                           ;main.c: 55:     TMR1_Init();
  1273     10E9  160A  158A  24BB  160A  118A  	fcall	_TMR1_Init
  1274                           
  1275                           ;main.c: 56:     TMR2_Init();
  1276     10EE  120A  158A  2001  160A  118A  	fcall	_TMR2_Init
  1277     10F3                     l4268:
  1278                           
  1279                           ;main.c: 59:     {;main.c: 60:         if (updateSensor1) {
  1280     10F3  087B               	movf	_updateSensor1,w	;volatile
  1281     10F4  1903               	btfsc	3,2
  1282     10F5  28F7               	goto	u6231
  1283     10F6  28F8               	goto	u6230
  1284     10F7                     u6231:
  1285     10F7  2903               	goto	l4276
  1286     10F8                     u6230:
  1287     10F8                     l4270:
  1288                           
  1289                           ;main.c: 61:             trigger_1();
  1290     10F8  160A  118A  2182  160A  118A  	fcall	_trigger_1
  1291     10FD                     l4272:
  1292                           
  1293                           ;main.c: 62:             LCD_Display_1();
  1294     10FD  160A  158A  265F  160A  118A  	fcall	_LCD_Display_1
  1295     1102                     l4274:
  1296                           
  1297                           ;main.c: 63:             updateSensor1 = 0;
  1298     1102  01FB               	clrf	_updateSensor1	;volatile
  1299     1103                     l4276:
  1300                           
  1301                           ;main.c: 65:         if (updateSensor2) {
  1302     1103  087A               	movf	_updateSensor2,w	;volatile
  1303     1104  1903               	btfsc	3,2
  1304     1105  2907               	goto	u6241
  1305     1106  2908               	goto	u6240
  1306     1107                     u6241:
  1307     1107  2913               	goto	l4284
  1308     1108                     u6240:
  1309     1108                     l4278:
  1310                           
  1311                           ;main.c: 66:             trigger_2();
  1312     1108  160A  118A  21E8  160A  118A  	fcall	_trigger_2
  1313     110D                     l4280:
  1314                           
  1315                           ;main.c: 67:             LCD_Display_2();
  1316     110D  160A  158A  26A0  160A  118A  	fcall	_LCD_Display_2
  1317     1112                     l4282:
  1318                           
  1319                           ;main.c: 68:             updateSensor2 = 0;
  1320     1112  01FA               	clrf	_updateSensor2	;volatile
  1321     1113                     l4284:
  1322                           
  1323                           ;main.c: 70:         if (updateSensor3) {
  1324     1113  1283               	bcf	3,5	;RP0=0, select bank0
  1325     1114  1303               	bcf	3,6	;RP1=0, select bank0
  1326     1115  086F               	movf	_updateSensor3,w	;volatile
  1327     1116  1903               	btfsc	3,2
  1328     1117  2919               	goto	u6251
  1329     1118  291A               	goto	u6250
  1330     1119                     u6251:
  1331     1119  28F3               	goto	l4268
  1332     111A                     u6250:
  1333     111A                     l4286:
  1334                           
  1335                           ;main.c: 71:             trigger_3();
  1336     111A  160A  118A  2250  160A  118A  	fcall	_trigger_3
  1337     111F                     l4288:
  1338                           
  1339                           ;main.c: 72:             LCD_Display_3();
  1340     111F  160A  118A  2089  160A  118A  	fcall	_LCD_Display_3
  1341     1124                     l4290:
  1342                           
  1343                           ;main.c: 73:             updateSensor3 = 0;
  1344     1124  1283               	bcf	3,5	;RP0=0, select bank0
  1345     1125  1303               	bcf	3,6	;RP1=0, select bank0
  1346     1126  01EF               	clrf	_updateSensor3	;volatile
  1347     1127  28F3               	goto	l4268
  1348     1128  120A  118A  280C   	ljmp	start
  1349     112B                     __end_of_main:
  1350                           
  1351                           	psect	text1
  1352     1250                     __ptext1:	
  1353 ;; *************** function _trigger_3 *****************
  1354 ;; Defined at:
  1355 ;;		line 133 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       1       0       0       0
  1372 ;;      Totals:         0       1       0       0       0
  1373 ;;Total ram usage:        1 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 3
  1376 ;; This function calls:
  1377 ;;		___flmul
  1378 ;;		___xxtofl
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     1250                     _trigger_3:	
  1385                           ;psect for function _trigger_3
  1386                           
  1387     1250                     l4240:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _trigger_3: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1390                           
  1391                           
  1392                           ;main.c: 136:     TMR1 = 0;
  1393     1250  1283               	bcf	3,5	;RP0=0, select bank0
  1394     1251  1303               	bcf	3,6	;RP1=0, select bank0
  1395     1252  018E               	clrf	14	;volatile
  1396     1253  018F               	clrf	15	;volatile
  1397     1254                     l4242:
  1398                           
  1399                           ;main.c: 137:     PORTDbits.RD4 = 1;
  1400     1254  1608               	bsf	8,4	;volatile
  1401     1255                     l4244:
  1402                           
  1403                           ;main.c: 138:     _delay((unsigned long)((10)*(12000000/4000000.0)));
  1404     1255  3009               	movlw	9
  1405     1256  1283               	bcf	3,5	;RP0=0, select bank0
  1406     1257  1303               	bcf	3,6	;RP1=0, select bank0
  1407     1258  00C0               	movwf	??_trigger_3
  1408     1259                     u6267:
  1409     1259  0BC0               	decfsz	??_trigger_3,f
  1410     125A  2A59               	goto	u6267
  1411     125B                     l4246:
  1412                           
  1413                           ;main.c: 139:     PORTDbits.RD4 = 0;
  1414     125B  1283               	bcf	3,5	;RP0=0, select bank0
  1415     125C  1303               	bcf	3,6	;RP1=0, select bank0
  1416     125D  1208               	bcf	8,4	;volatile
  1417     125E                     l115:	
  1418                           ;main.c: 140:      while(!PORTDbits.RD5);
  1419                           
  1420     125E  1E88               	btfss	8,5	;volatile
  1421     125F  2A61               	goto	u6211
  1422     1260  2A62               	goto	u6210
  1423     1261                     u6211:
  1424     1261  2A5E               	goto	l115
  1425     1262                     u6210:
  1426     1262                     l117:
  1427                           
  1428                           ;main.c: 141:     T1CONbits.TMR1ON = 1;
  1429     1262  1410               	bsf	16,0	;volatile
  1430     1263                     l4248:
  1431                           
  1432                           ;main.c: 142:     TMR1 = 0;
  1433     1263  018E               	clrf	14	;volatile
  1434     1264  018F               	clrf	15	;volatile
  1435     1265                     l118:	
  1436                           ;main.c: 143:     while(PORTDbits.RD5);
  1437                           
  1438     1265  1A88               	btfsc	8,5	;volatile
  1439     1266  2A68               	goto	u6221
  1440     1267  2A69               	goto	u6220
  1441     1268                     u6221:
  1442     1268  2A65               	goto	l118
  1443     1269                     u6220:
  1444     1269                     l120:
  1445                           
  1446                           ;main.c: 144:     T1CONbits.TMR1ON = 0;
  1447     1269  1010               	bcf	16,0	;volatile
  1448     126A                     l4250:
  1449                           
  1450                           ;main.c: 145:     data = TMR1;
  1451     126A  080E               	movf	14,w	;volatile
  1452     126B  1683               	bsf	3,5	;RP0=1, select bank1
  1453     126C  1303               	bcf	3,6	;RP1=0, select bank1
  1454     126D  00DA               	movwf	_data^(0+128)
  1455     126E  1283               	bcf	3,5	;RP0=0, select bank0
  1456     126F  1303               	bcf	3,6	;RP1=0, select bank0
  1457     1270  080F               	movf	15,w	;volatile
  1458     1271  1683               	bsf	3,5	;RP0=1, select bank1
  1459     1272  1303               	bcf	3,6	;RP1=0, select bank1
  1460     1273  00DB               	movwf	(_data^(0+128)+1)
  1461     1274  01DC               	clrf	(_data^(0+128)+2)
  1462     1275  01DD               	clrf	(_data^(0+128)+3)
  1463     1276                     l4252:
  1464                           
  1465                           ;main.c: 146:     value_3 = (float)data*0.048;
  1466     1276  303D               	movlw	61
  1467     1277  1283               	bcf	3,5	;RP0=0, select bank0
  1468     1278  1303               	bcf	3,6	;RP1=0, select bank0
  1469     1279  00A9               	movwf	___flmul@b+3
  1470     127A  3044               	movlw	68
  1471     127B  00A8               	movwf	___flmul@b+2
  1472     127C  309B               	movlw	155
  1473     127D  00A7               	movwf	___flmul@b+1
  1474     127E  30A6               	movlw	166
  1475     127F  00A6               	movwf	___flmul@b
  1476     1280  1683               	bsf	3,5	;RP0=1, select bank1
  1477     1281  1303               	bcf	3,6	;RP1=0, select bank1
  1478     1282  085D               	movf	(_data+3)^(0+128),w
  1479     1283  00F5               	movwf	___xxtofl@val+3
  1480     1284  085C               	movf	(_data+2)^(0+128),w
  1481     1285  00F4               	movwf	___xxtofl@val+2
  1482     1286  085B               	movf	(_data+1)^(0+128),w
  1483     1287  00F3               	movwf	___xxtofl@val+1
  1484     1288  085A               	movf	_data^(0+128),w
  1485     1289  00F2               	movwf	___xxtofl@val
  1486     128A  3000               	movlw	0
  1487     128B  120A  118A  273B  160A  118A  	fcall	___xxtofl
  1488     1290  0875               	movf	?___xxtofl+3,w
  1489     1291  1283               	bcf	3,5	;RP0=0, select bank0
  1490     1292  1303               	bcf	3,6	;RP1=0, select bank0
  1491     1293  00AD               	movwf	___flmul@a+3
  1492     1294  0874               	movf	?___xxtofl+2,w
  1493     1295  00AC               	movwf	___flmul@a+2
  1494     1296  0873               	movf	?___xxtofl+1,w
  1495     1297  00AB               	movwf	___flmul@a+1
  1496     1298  0872               	movf	?___xxtofl,w
  1497     1299  00AA               	movwf	___flmul@a
  1498     129A  120A  158A  24BE  160A  118A  	fcall	___flmul
  1499     129F  1283               	bcf	3,5	;RP0=0, select bank0
  1500     12A0  1303               	bcf	3,6	;RP1=0, select bank0
  1501     12A1  0829               	movf	?___flmul+3,w
  1502     12A2  1683               	bsf	3,5	;RP0=1, select bank3
  1503     12A3  1703               	bsf	3,6	;RP1=1, select bank3
  1504     12A4  009B               	movwf	(_value_3+3)^(0+384)
  1505     12A5  1283               	bcf	3,5	;RP0=0, select bank0
  1506     12A6  1303               	bcf	3,6	;RP1=0, select bank0
  1507     12A7  0828               	movf	?___flmul+2,w
  1508     12A8  1683               	bsf	3,5	;RP0=1, select bank3
  1509     12A9  1703               	bsf	3,6	;RP1=1, select bank3
  1510     12AA  009A               	movwf	(_value_3+2)^(0+384)
  1511     12AB  1283               	bcf	3,5	;RP0=0, select bank0
  1512     12AC  1303               	bcf	3,6	;RP1=0, select bank0
  1513     12AD  0827               	movf	?___flmul+1,w
  1514     12AE  1683               	bsf	3,5	;RP0=1, select bank3
  1515     12AF  1703               	bsf	3,6	;RP1=1, select bank3
  1516     12B0  0099               	movwf	(_value_3+1)^(0+384)
  1517     12B1  1283               	bcf	3,5	;RP0=0, select bank0
  1518     12B2  1303               	bcf	3,6	;RP1=0, select bank0
  1519     12B3  0826               	movf	?___flmul,w
  1520     12B4  1683               	bsf	3,5	;RP0=1, select bank3
  1521     12B5  1703               	bsf	3,6	;RP1=1, select bank3
  1522     12B6  0098               	movwf	_value_3^(0+384)
  1523     12B7                     l121:
  1524     12B7  0008               	return
  1525     12B8                     __end_of_trigger_3:
  1526                           
  1527                           	psect	text2
  1528     11E8                     __ptext2:	
  1529 ;; *************** function _trigger_2 *****************
  1530 ;; Defined at:
  1531 ;;		line 119 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          0       1       0       0       0
  1548 ;;      Totals:         0       1       0       0       0
  1549 ;;Total ram usage:        1 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 3
  1552 ;; This function calls:
  1553 ;;		___flmul
  1554 ;;		___xxtofl
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560     11E8                     _trigger_2:	
  1561                           ;psect for function _trigger_2
  1562                           
  1563     11E8                     l4218:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _trigger_2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1566                           
  1567                           
  1568                           ;main.c: 121:     TMR1 = 0;
  1569     11E8  1283               	bcf	3,5	;RP0=0, select bank0
  1570     11E9  1303               	bcf	3,6	;RP1=0, select bank0
  1571     11EA  018E               	clrf	14	;volatile
  1572     11EB  018F               	clrf	15	;volatile
  1573     11EC                     l4220:
  1574                           
  1575                           ;main.c: 122:     PORTDbits.RD2 = 1;
  1576     11EC  1508               	bsf	8,2	;volatile
  1577     11ED                     l4222:
  1578                           
  1579                           ;main.c: 123:     _delay((unsigned long)((10)*(12000000/4000000.0)));
  1580     11ED  3009               	movlw	9
  1581     11EE  1283               	bcf	3,5	;RP0=0, select bank0
  1582     11EF  1303               	bcf	3,6	;RP1=0, select bank0
  1583     11F0  00C0               	movwf	??_trigger_2
  1584     11F1                     u6277:
  1585     11F1  0BC0               	decfsz	??_trigger_2,f
  1586     11F2  29F1               	goto	u6277
  1587     11F3                     l4224:
  1588                           
  1589                           ;main.c: 124:     PORTDbits.RD2 = 0;
  1590     11F3  1283               	bcf	3,5	;RP0=0, select bank0
  1591     11F4  1303               	bcf	3,6	;RP1=0, select bank0
  1592     11F5  1108               	bcf	8,2	;volatile
  1593     11F6                     l106:	
  1594                           ;main.c: 125:      while(!PORTDbits.RD3);
  1595                           
  1596     11F6  1D88               	btfss	8,3	;volatile
  1597     11F7  29F9               	goto	u6191
  1598     11F8  29FA               	goto	u6190
  1599     11F9                     u6191:
  1600     11F9  29F6               	goto	l106
  1601     11FA                     u6190:
  1602     11FA                     l108:
  1603                           
  1604                           ;main.c: 126:     T1CONbits.TMR1ON = 1;
  1605     11FA  1410               	bsf	16,0	;volatile
  1606     11FB                     l4226:
  1607                           
  1608                           ;main.c: 127:     TMR1 = 0;
  1609     11FB  018E               	clrf	14	;volatile
  1610     11FC  018F               	clrf	15	;volatile
  1611     11FD                     l109:	
  1612                           ;main.c: 128:     while(PORTDbits.RD3);
  1613                           
  1614     11FD  1988               	btfsc	8,3	;volatile
  1615     11FE  2A00               	goto	u6201
  1616     11FF  2A01               	goto	u6200
  1617     1200                     u6201:
  1618     1200  29FD               	goto	l109
  1619     1201                     u6200:
  1620     1201                     l111:
  1621                           
  1622                           ;main.c: 129:     T1CONbits.TMR1ON = 0;
  1623     1201  1010               	bcf	16,0	;volatile
  1624     1202                     l4228:
  1625                           
  1626                           ;main.c: 130:     data = TMR1;
  1627     1202  080E               	movf	14,w	;volatile
  1628     1203  1683               	bsf	3,5	;RP0=1, select bank1
  1629     1204  1303               	bcf	3,6	;RP1=0, select bank1
  1630     1205  00DA               	movwf	_data^(0+128)
  1631     1206  1283               	bcf	3,5	;RP0=0, select bank0
  1632     1207  1303               	bcf	3,6	;RP1=0, select bank0
  1633     1208  080F               	movf	15,w	;volatile
  1634     1209  1683               	bsf	3,5	;RP0=1, select bank1
  1635     120A  1303               	bcf	3,6	;RP1=0, select bank1
  1636     120B  00DB               	movwf	(_data^(0+128)+1)
  1637     120C  01DC               	clrf	(_data^(0+128)+2)
  1638     120D  01DD               	clrf	(_data^(0+128)+3)
  1639     120E                     l4230:
  1640                           
  1641                           ;main.c: 131:     value_2 = (float)data*0.048;
  1642     120E  303D               	movlw	61
  1643     120F  1283               	bcf	3,5	;RP0=0, select bank0
  1644     1210  1303               	bcf	3,6	;RP1=0, select bank0
  1645     1211  00A9               	movwf	___flmul@b+3
  1646     1212  3044               	movlw	68
  1647     1213  00A8               	movwf	___flmul@b+2
  1648     1214  309B               	movlw	155
  1649     1215  00A7               	movwf	___flmul@b+1
  1650     1216  30A6               	movlw	166
  1651     1217  00A6               	movwf	___flmul@b
  1652     1218  1683               	bsf	3,5	;RP0=1, select bank1
  1653     1219  1303               	bcf	3,6	;RP1=0, select bank1
  1654     121A  085D               	movf	(_data+3)^(0+128),w
  1655     121B  00F5               	movwf	___xxtofl@val+3
  1656     121C  085C               	movf	(_data+2)^(0+128),w
  1657     121D  00F4               	movwf	___xxtofl@val+2
  1658     121E  085B               	movf	(_data+1)^(0+128),w
  1659     121F  00F3               	movwf	___xxtofl@val+1
  1660     1220  085A               	movf	_data^(0+128),w
  1661     1221  00F2               	movwf	___xxtofl@val
  1662     1222  3000               	movlw	0
  1663     1223  120A  118A  273B  160A  118A  	fcall	___xxtofl
  1664     1228  0875               	movf	?___xxtofl+3,w
  1665     1229  1283               	bcf	3,5	;RP0=0, select bank0
  1666     122A  1303               	bcf	3,6	;RP1=0, select bank0
  1667     122B  00AD               	movwf	___flmul@a+3
  1668     122C  0874               	movf	?___xxtofl+2,w
  1669     122D  00AC               	movwf	___flmul@a+2
  1670     122E  0873               	movf	?___xxtofl+1,w
  1671     122F  00AB               	movwf	___flmul@a+1
  1672     1230  0872               	movf	?___xxtofl,w
  1673     1231  00AA               	movwf	___flmul@a
  1674     1232  120A  158A  24BE  160A  118A  	fcall	___flmul
  1675     1237  1283               	bcf	3,5	;RP0=0, select bank0
  1676     1238  1303               	bcf	3,6	;RP1=0, select bank0
  1677     1239  0829               	movf	?___flmul+3,w
  1678     123A  1683               	bsf	3,5	;RP0=1, select bank1
  1679     123B  1303               	bcf	3,6	;RP1=0, select bank1
  1680     123C  00E1               	movwf	(_value_2+3)^(0+128)
  1681     123D  1283               	bcf	3,5	;RP0=0, select bank0
  1682     123E  1303               	bcf	3,6	;RP1=0, select bank0
  1683     123F  0828               	movf	?___flmul+2,w
  1684     1240  1683               	bsf	3,5	;RP0=1, select bank1
  1685     1241  1303               	bcf	3,6	;RP1=0, select bank1
  1686     1242  00E0               	movwf	(_value_2+2)^(0+128)
  1687     1243  1283               	bcf	3,5	;RP0=0, select bank0
  1688     1244  1303               	bcf	3,6	;RP1=0, select bank0
  1689     1245  0827               	movf	?___flmul+1,w
  1690     1246  1683               	bsf	3,5	;RP0=1, select bank1
  1691     1247  1303               	bcf	3,6	;RP1=0, select bank1
  1692     1248  00DF               	movwf	(_value_2+1)^(0+128)
  1693     1249  1283               	bcf	3,5	;RP0=0, select bank0
  1694     124A  1303               	bcf	3,6	;RP1=0, select bank0
  1695     124B  0826               	movf	?___flmul,w
  1696     124C  1683               	bsf	3,5	;RP0=1, select bank1
  1697     124D  1303               	bcf	3,6	;RP1=0, select bank1
  1698     124E  00DE               	movwf	_value_2^(0+128)
  1699     124F                     l112:
  1700     124F  0008               	return
  1701     1250                     __end_of_trigger_2:
  1702                           
  1703                           	psect	text3
  1704     1182                     __ptext3:	
  1705 ;; *************** function _trigger_1 *****************
  1706 ;; Defined at:
  1707 ;;		line 105 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1721 ;;      Params:         0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0
  1723 ;;      Temps:          0       1       0       0       0
  1724 ;;      Totals:         0       1       0       0       0
  1725 ;;Total ram usage:        1 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; Hardware stack levels required when called: 3
  1728 ;; This function calls:
  1729 ;;		___flmul
  1730 ;;		___xxtofl
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736     1182                     _trigger_1:	
  1737                           ;psect for function _trigger_1
  1738                           
  1739     1182                     l4198:	
  1740                           ;incstack = 0
  1741                           ; Regs used in _trigger_1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1742                           
  1743                           
  1744                           ;main.c: 107:     PORTDbits.RD0 = 1;
  1745     1182  1283               	bcf	3,5	;RP0=0, select bank0
  1746     1183  1303               	bcf	3,6	;RP1=0, select bank0
  1747     1184  1408               	bsf	8,0	;volatile
  1748     1185                     l4200:
  1749                           
  1750                           ;main.c: 108:     _delay((unsigned long)((10)*(12000000/4000000.0)));
  1751     1185  3009               	movlw	9
  1752     1186  1283               	bcf	3,5	;RP0=0, select bank0
  1753     1187  1303               	bcf	3,6	;RP1=0, select bank0
  1754     1188  00C0               	movwf	??_trigger_1
  1755     1189                     u6287:
  1756     1189  0BC0               	decfsz	??_trigger_1,f
  1757     118A  2989               	goto	u6287
  1758     118B                     l4202:
  1759                           
  1760                           ;main.c: 109:     PORTDbits.RD0 = 0;
  1761     118B  1283               	bcf	3,5	;RP0=0, select bank0
  1762     118C  1303               	bcf	3,6	;RP1=0, select bank0
  1763     118D  1008               	bcf	8,0	;volatile
  1764     118E                     l97:	
  1765                           ;main.c: 110:     while(!PORTDbits.RD1);
  1766                           
  1767     118E  1C88               	btfss	8,1	;volatile
  1768     118F  2991               	goto	u6171
  1769     1190  2992               	goto	u6170
  1770     1191                     u6171:
  1771     1191  298E               	goto	l97
  1772     1192                     u6170:
  1773     1192                     l99:
  1774                           
  1775                           ;main.c: 111:     T1CONbits.TMR1ON = 1;
  1776     1192  1410               	bsf	16,0	;volatile
  1777     1193                     l4204:
  1778                           
  1779                           ;main.c: 112:     TMR1 = 0;
  1780     1193  018E               	clrf	14	;volatile
  1781     1194  018F               	clrf	15	;volatile
  1782     1195                     l100:	
  1783                           ;main.c: 113:     while(PORTDbits.RD1);
  1784                           
  1785     1195  1888               	btfsc	8,1	;volatile
  1786     1196  2998               	goto	u6181
  1787     1197  2999               	goto	u6180
  1788     1198                     u6181:
  1789     1198  2995               	goto	l100
  1790     1199                     u6180:
  1791     1199                     l102:
  1792                           
  1793                           ;main.c: 114:     T1CONbits.TMR1ON = 0;
  1794     1199  1010               	bcf	16,0	;volatile
  1795     119A                     l4206:
  1796                           
  1797                           ;main.c: 115:     data = TMR1;
  1798     119A  080E               	movf	14,w	;volatile
  1799     119B  1683               	bsf	3,5	;RP0=1, select bank1
  1800     119C  1303               	bcf	3,6	;RP1=0, select bank1
  1801     119D  00DA               	movwf	_data^(0+128)
  1802     119E  1283               	bcf	3,5	;RP0=0, select bank0
  1803     119F  1303               	bcf	3,6	;RP1=0, select bank0
  1804     11A0  080F               	movf	15,w	;volatile
  1805     11A1  1683               	bsf	3,5	;RP0=1, select bank1
  1806     11A2  1303               	bcf	3,6	;RP1=0, select bank1
  1807     11A3  00DB               	movwf	(_data^(0+128)+1)
  1808     11A4  01DC               	clrf	(_data^(0+128)+2)
  1809     11A5  01DD               	clrf	(_data^(0+128)+3)
  1810     11A6                     l4208:
  1811                           
  1812                           ;main.c: 116:     value_1 = (float)data*0.048;
  1813     11A6  303D               	movlw	61
  1814     11A7  1283               	bcf	3,5	;RP0=0, select bank0
  1815     11A8  1303               	bcf	3,6	;RP1=0, select bank0
  1816     11A9  00A9               	movwf	___flmul@b+3
  1817     11AA  3044               	movlw	68
  1818     11AB  00A8               	movwf	___flmul@b+2
  1819     11AC  309B               	movlw	155
  1820     11AD  00A7               	movwf	___flmul@b+1
  1821     11AE  30A6               	movlw	166
  1822     11AF  00A6               	movwf	___flmul@b
  1823     11B0  1683               	bsf	3,5	;RP0=1, select bank1
  1824     11B1  1303               	bcf	3,6	;RP1=0, select bank1
  1825     11B2  085D               	movf	(_data+3)^(0+128),w
  1826     11B3  00F5               	movwf	___xxtofl@val+3
  1827     11B4  085C               	movf	(_data+2)^(0+128),w
  1828     11B5  00F4               	movwf	___xxtofl@val+2
  1829     11B6  085B               	movf	(_data+1)^(0+128),w
  1830     11B7  00F3               	movwf	___xxtofl@val+1
  1831     11B8  085A               	movf	_data^(0+128),w
  1832     11B9  00F2               	movwf	___xxtofl@val
  1833     11BA  3000               	movlw	0
  1834     11BB  120A  118A  273B  160A  118A  	fcall	___xxtofl
  1835     11C0  0875               	movf	?___xxtofl+3,w
  1836     11C1  1283               	bcf	3,5	;RP0=0, select bank0
  1837     11C2  1303               	bcf	3,6	;RP1=0, select bank0
  1838     11C3  00AD               	movwf	___flmul@a+3
  1839     11C4  0874               	movf	?___xxtofl+2,w
  1840     11C5  00AC               	movwf	___flmul@a+2
  1841     11C6  0873               	movf	?___xxtofl+1,w
  1842     11C7  00AB               	movwf	___flmul@a+1
  1843     11C8  0872               	movf	?___xxtofl,w
  1844     11C9  00AA               	movwf	___flmul@a
  1845     11CA  120A  158A  24BE  160A  118A  	fcall	___flmul
  1846     11CF  1283               	bcf	3,5	;RP0=0, select bank0
  1847     11D0  1303               	bcf	3,6	;RP1=0, select bank0
  1848     11D1  0829               	movf	?___flmul+3,w
  1849     11D2  1683               	bsf	3,5	;RP0=1, select bank1
  1850     11D3  1303               	bcf	3,6	;RP1=0, select bank1
  1851     11D4  00E5               	movwf	(_value_1+3)^(0+128)
  1852     11D5  1283               	bcf	3,5	;RP0=0, select bank0
  1853     11D6  1303               	bcf	3,6	;RP1=0, select bank0
  1854     11D7  0828               	movf	?___flmul+2,w
  1855     11D8  1683               	bsf	3,5	;RP0=1, select bank1
  1856     11D9  1303               	bcf	3,6	;RP1=0, select bank1
  1857     11DA  00E4               	movwf	(_value_1+2)^(0+128)
  1858     11DB  1283               	bcf	3,5	;RP0=0, select bank0
  1859     11DC  1303               	bcf	3,6	;RP1=0, select bank0
  1860     11DD  0827               	movf	?___flmul+1,w
  1861     11DE  1683               	bsf	3,5	;RP0=1, select bank1
  1862     11DF  1303               	bcf	3,6	;RP1=0, select bank1
  1863     11E0  00E3               	movwf	(_value_1+1)^(0+128)
  1864     11E1  1283               	bcf	3,5	;RP0=0, select bank0
  1865     11E2  1303               	bcf	3,6	;RP1=0, select bank0
  1866     11E3  0826               	movf	?___flmul,w
  1867     11E4  1683               	bsf	3,5	;RP0=1, select bank1
  1868     11E5  1303               	bcf	3,6	;RP1=0, select bank1
  1869     11E6  00E2               	movwf	_value_1^(0+128)
  1870     11E7                     l103:
  1871     11E7  0008               	return
  1872     11E8                     __end_of_trigger_1:
  1873                           
  1874                           	psect	text4
  1875     073B                     __ptext4:	
  1876 ;; *************** function ___xxtofl *****************
  1877 ;; Defined at:
  1878 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  sign            1    wreg     unsigned char 
  1881 ;;  val             4    2[COMMON] long 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  sign            1    0[BANK0 ] unsigned char 
  1884 ;;  arg             4    2[BANK0 ] unsigned long 
  1885 ;;  exp             1    1[BANK0 ] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  4    2[COMMON] unsigned char 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         4       0       0       0       0
  1896 ;;      Locals:         0       6       0       0       0
  1897 ;;      Temps:          4       0       0       0       0
  1898 ;;      Totals:         8       6       0       0       0
  1899 ;;Total ram usage:       14 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_trigger_1
  1906 ;;		_trigger_2
  1907 ;;		_trigger_3
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911     073B                     ___xxtofl:	
  1912                           ;psect for function ___xxtofl
  1913                           
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1917                           ;___xxtofl@sign stored from wreg
  1918     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1919     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1920     073D  00A0               	movwf	___xxtofl@sign
  1921     073E                     l3324:
  1922     073E  0820               	movf	___xxtofl@sign,w
  1923     073F  1903               	btfsc	3,2
  1924     0740  2F42               	goto	u4781
  1925     0741  2F43               	goto	u4780
  1926     0742                     u4781:
  1927     0742  2F57               	goto	l3330
  1928     0743                     u4780:
  1929     0743                     l3326:
  1930     0743  1FF5               	btfss	___xxtofl@val+3,7
  1931     0744  2F46               	goto	u4791
  1932     0745  2F47               	goto	u4790
  1933     0746                     u4791:
  1934     0746  2F57               	goto	l3330
  1935     0747                     u4790:
  1936     0747                     l3328:
  1937     0747  0972               	comf	___xxtofl@val,w
  1938     0748  00A2               	movwf	___xxtofl@arg
  1939     0749  0973               	comf	___xxtofl@val+1,w
  1940     074A  00A3               	movwf	___xxtofl@arg+1
  1941     074B  0974               	comf	___xxtofl@val+2,w
  1942     074C  00A4               	movwf	___xxtofl@arg+2
  1943     074D  0975               	comf	___xxtofl@val+3,w
  1944     074E  00A5               	movwf	___xxtofl@arg+3
  1945     074F  0AA2               	incf	___xxtofl@arg,f
  1946     0750  1903               	skipnz
  1947     0751  0AA3               	incf	___xxtofl@arg+1,f
  1948     0752  1903               	skipnz
  1949     0753  0AA4               	incf	___xxtofl@arg+2,f
  1950     0754  1903               	skipnz
  1951     0755  0AA5               	incf	___xxtofl@arg+3,f
  1952     0756  2F5F               	goto	l708
  1953     0757                     l3330:
  1954     0757  0875               	movf	___xxtofl@val+3,w
  1955     0758  00A5               	movwf	___xxtofl@arg+3
  1956     0759  0874               	movf	___xxtofl@val+2,w
  1957     075A  00A4               	movwf	___xxtofl@arg+2
  1958     075B  0873               	movf	___xxtofl@val+1,w
  1959     075C  00A3               	movwf	___xxtofl@arg+1
  1960     075D  0872               	movf	___xxtofl@val,w
  1961     075E  00A2               	movwf	___xxtofl@arg
  1962     075F                     l708:
  1963     075F  0875               	movf	___xxtofl@val+3,w
  1964     0760  0474               	iorwf	___xxtofl@val+2,w
  1965     0761  0473               	iorwf	___xxtofl@val+1,w
  1966     0762  0472               	iorwf	___xxtofl@val,w
  1967     0763  1D03               	skipz
  1968     0764  2F66               	goto	u4801
  1969     0765  2F67               	goto	u4800
  1970     0766                     u4801:
  1971     0766  2F70               	goto	l709
  1972     0767                     u4800:
  1973     0767                     l3332:
  1974     0767  3000               	movlw	0
  1975     0768  00F5               	movwf	?___xxtofl+3
  1976     0769  3000               	movlw	0
  1977     076A  00F4               	movwf	?___xxtofl+2
  1978     076B  3000               	movlw	0
  1979     076C  00F3               	movwf	?___xxtofl+1
  1980     076D  3000               	movlw	0
  1981     076E  00F2               	movwf	?___xxtofl
  1982     076F  2FF0               	goto	l710
  1983     0770                     l709:
  1984     0770  3096               	movlw	150
  1985     0771  00A1               	movwf	___xxtofl@exp
  1986     0772  2F7E               	goto	l3338
  1987     0773                     l3336:
  1988     0773  3001               	movlw	1
  1989     0774  07A1               	addwf	___xxtofl@exp,f
  1990     0775  3001               	movlw	1
  1991     0776                     u4815:
  1992     0776  1003               	clrc
  1993     0777  0CA5               	rrf	___xxtofl@arg+3,f
  1994     0778  0CA4               	rrf	___xxtofl@arg+2,f
  1995     0779  0CA3               	rrf	___xxtofl@arg+1,f
  1996     077A  0CA2               	rrf	___xxtofl@arg,f
  1997     077B  3EFF               	addlw	-1
  1998     077C  1D03               	skipz
  1999     077D  2F76               	goto	u4815
  2000     077E                     l3338:
  2001     077E  30FE               	movlw	254
  2002     077F  0525               	andwf	___xxtofl@arg+3,w
  2003     0780  1D03               	btfss	3,2
  2004     0781  2F83               	goto	u4821
  2005     0782  2F84               	goto	u4820
  2006     0783                     u4821:
  2007     0783  2F73               	goto	l3336
  2008     0784                     u4820:
  2009     0784  2F9E               	goto	l714
  2010     0785                     l3340:
  2011     0785  3001               	movlw	1
  2012     0786  07A1               	addwf	___xxtofl@exp,f
  2013     0787                     l3342:
  2014     0787  3001               	movlw	1
  2015     0788  07A2               	addwf	___xxtofl@arg,f
  2016     0789  3000               	movlw	0
  2017     078A  1803               	skipnc
  2018     078B  3001               	movlw	1
  2019     078C  07A3               	addwf	___xxtofl@arg+1,f
  2020     078D  3000               	movlw	0
  2021     078E  1803               	skipnc
  2022     078F  3001               	movlw	1
  2023     0790  07A4               	addwf	___xxtofl@arg+2,f
  2024     0791  3000               	movlw	0
  2025     0792  1803               	skipnc
  2026     0793  3001               	movlw	1
  2027     0794  07A5               	addwf	___xxtofl@arg+3,f
  2028     0795                     l3344:
  2029     0795  3001               	movlw	1
  2030     0796                     u4835:
  2031     0796  1003               	clrc
  2032     0797  0CA5               	rrf	___xxtofl@arg+3,f
  2033     0798  0CA4               	rrf	___xxtofl@arg+2,f
  2034     0799  0CA3               	rrf	___xxtofl@arg+1,f
  2035     079A  0CA2               	rrf	___xxtofl@arg,f
  2036     079B  3EFF               	addlw	-1
  2037     079C  1D03               	skipz
  2038     079D  2F96               	goto	u4835
  2039     079E                     l714:
  2040     079E  30FF               	movlw	255
  2041     079F  0525               	andwf	___xxtofl@arg+3,w
  2042     07A0  1D03               	btfss	3,2
  2043     07A1  2FA3               	goto	u4841
  2044     07A2  2FA4               	goto	u4840
  2045     07A3                     u4841:
  2046     07A3  2F85               	goto	l3340
  2047     07A4                     u4840:
  2048     07A4  2FB0               	goto	l3348
  2049     07A5                     l3346:
  2050     07A5  3001               	movlw	1
  2051     07A6  02A1               	subwf	___xxtofl@exp,f
  2052     07A7  3001               	movlw	1
  2053     07A8  00F6               	movwf	??___xxtofl
  2054     07A9                     u4855:
  2055     07A9  1003               	clrc
  2056     07AA  0DA2               	rlf	___xxtofl@arg,f
  2057     07AB  0DA3               	rlf	___xxtofl@arg+1,f
  2058     07AC  0DA4               	rlf	___xxtofl@arg+2,f
  2059     07AD  0DA5               	rlf	___xxtofl@arg+3,f
  2060     07AE  0BF6               	decfsz	??___xxtofl,f
  2061     07AF  2FA9               	goto	u4855
  2062     07B0                     l3348:
  2063     07B0  1BA4               	btfsc	___xxtofl@arg+2,7
  2064     07B1  2FB3               	goto	u4861
  2065     07B2  2FB4               	goto	u4860
  2066     07B3                     u4861:
  2067     07B3  2FBA               	goto	l721
  2068     07B4                     u4860:
  2069     07B4                     l3350:
  2070     07B4  3002               	movlw	2
  2071     07B5  0221               	subwf	___xxtofl@exp,w
  2072     07B6  1803               	skipnc
  2073     07B7  2FB9               	goto	u4871
  2074     07B8  2FBA               	goto	u4870
  2075     07B9                     u4871:
  2076     07B9  2FA5               	goto	l3346
  2077     07BA                     u4870:
  2078     07BA                     l721:
  2079     07BA  1821               	btfsc	___xxtofl@exp,0
  2080     07BB  2FBD               	goto	u4881
  2081     07BC  2FBE               	goto	u4880
  2082     07BD                     u4881:
  2083     07BD  2FC6               	goto	l722
  2084     07BE                     u4880:
  2085     07BE                     l3352:
  2086     07BE  30FF               	movlw	255
  2087     07BF  05A2               	andwf	___xxtofl@arg,f
  2088     07C0  30FF               	movlw	255
  2089     07C1  05A3               	andwf	___xxtofl@arg+1,f
  2090     07C2  307F               	movlw	127
  2091     07C3  05A4               	andwf	___xxtofl@arg+2,f
  2092     07C4  30FF               	movlw	255
  2093     07C5  05A5               	andwf	___xxtofl@arg+3,f
  2094     07C6                     l722:
  2095     07C6  1003               	clrc
  2096     07C7  0CA1               	rrf	___xxtofl@exp,f
  2097     07C8                     l3354:
  2098     07C8  0821               	movf	___xxtofl@exp,w
  2099     07C9  00F6               	movwf	??___xxtofl
  2100     07CA  01F7               	clrf	??___xxtofl+1
  2101     07CB  01F8               	clrf	??___xxtofl+2
  2102     07CC  01F9               	clrf	??___xxtofl+3
  2103     07CD  3018               	movlw	24
  2104     07CE                     u4895:
  2105     07CE  1003               	clrc
  2106     07CF  0DF6               	rlf	??___xxtofl,f
  2107     07D0  0DF7               	rlf	??___xxtofl+1,f
  2108     07D1  0DF8               	rlf	??___xxtofl+2,f
  2109     07D2  0DF9               	rlf	??___xxtofl+3,f
  2110     07D3                     u4890:
  2111     07D3  3EFF               	addlw	-1
  2112     07D4  1D03               	skipz
  2113     07D5  2FCE               	goto	u4895
  2114     07D6  0876               	movf	??___xxtofl,w
  2115     07D7  04A2               	iorwf	___xxtofl@arg,f
  2116     07D8  0877               	movf	??___xxtofl+1,w
  2117     07D9  04A3               	iorwf	___xxtofl@arg+1,f
  2118     07DA  0878               	movf	??___xxtofl+2,w
  2119     07DB  04A4               	iorwf	___xxtofl@arg+2,f
  2120     07DC  0879               	movf	??___xxtofl+3,w
  2121     07DD  04A5               	iorwf	___xxtofl@arg+3,f
  2122     07DE                     l3356:
  2123     07DE  0820               	movf	___xxtofl@sign,w
  2124     07DF  1903               	btfsc	3,2
  2125     07E0  2FE2               	goto	u4901
  2126     07E1  2FE3               	goto	u4900
  2127     07E2                     u4901:
  2128     07E2  2FE8               	goto	l3362
  2129     07E3                     u4900:
  2130     07E3                     l3358:
  2131     07E3  1FF5               	btfss	___xxtofl@val+3,7
  2132     07E4  2FE6               	goto	u4911
  2133     07E5  2FE7               	goto	u4910
  2134     07E6                     u4911:
  2135     07E6  2FE8               	goto	l3362
  2136     07E7                     u4910:
  2137     07E7                     l3360:
  2138     07E7  17A5               	bsf	___xxtofl@arg+3,7
  2139     07E8                     l3362:
  2140     07E8  0825               	movf	___xxtofl@arg+3,w
  2141     07E9  00F5               	movwf	?___xxtofl+3
  2142     07EA  0824               	movf	___xxtofl@arg+2,w
  2143     07EB  00F4               	movwf	?___xxtofl+2
  2144     07EC  0823               	movf	___xxtofl@arg+1,w
  2145     07ED  00F3               	movwf	?___xxtofl+1
  2146     07EE  0822               	movf	___xxtofl@arg,w
  2147     07EF  00F2               	movwf	?___xxtofl
  2148     07F0                     l710:
  2149     07F0  0008               	return
  2150     07F1                     __end_of___xxtofl:
  2151                           
  2152                           	psect	text5
  2153     0801                     __ptext5:	
  2154 ;; *************** function _TMR2_Init *****************
  2155 ;; Defined at:
  2156 ;;		line 93 in file "main.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		None
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0
  2173 ;;      Totals:         0       0       0       0       0
  2174 ;;Total ram usage:        0 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 1
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184     0801                     _TMR2_Init:	
  2185                           ;psect for function _TMR2_Init
  2186                           
  2187     0801                     l3426:	
  2188                           ;incstack = 0
  2189                           ; Regs used in _TMR2_Init: []
  2190                           
  2191                           
  2192                           ;main.c: 95:     T2CONbits.T2CKPS1 = 1;
  2193     0801  1283               	bcf	3,5	;RP0=0, select bank0
  2194     0802  1303               	bcf	3,6	;RP1=0, select bank0
  2195     0803  1492               	bsf	18,1	;volatile
  2196                           
  2197                           ;main.c: 96:     T2CONbits.T2CKPS0 = 0;
  2198     0804  1012               	bcf	18,0	;volatile
  2199                           
  2200                           ;main.c: 97:     TMR2 = 68;
  2201     0805  3044               	movlw	68
  2202     0806  0091               	movwf	17	;volatile
  2203                           
  2204                           ;main.c: 98:     PIE1bits.TMR2IE = 1;
  2205     0807  1683               	bsf	3,5	;RP0=1, select bank1
  2206     0808  1303               	bcf	3,6	;RP1=0, select bank1
  2207     0809  148C               	bsf	12,1	;volatile
  2208                           
  2209                           ;main.c: 99:     PIR1bits.TMR2IF = 0;
  2210     080A  1283               	bcf	3,5	;RP0=0, select bank0
  2211     080B  1303               	bcf	3,6	;RP1=0, select bank0
  2212     080C  108C               	bcf	12,1	;volatile
  2213                           
  2214                           ;main.c: 100:     INTCONbits.PEIE = 1;
  2215     080D  170B               	bsf	11,6	;volatile
  2216                           
  2217                           ;main.c: 101:     INTCONbits.GIE = 1;
  2218     080E  178B               	bsf	11,7	;volatile
  2219                           
  2220                           ;main.c: 102:     T2CONbits.TMR2ON = 1;
  2221     080F  1512               	bsf	18,2	;volatile
  2222     0810                     l94:
  2223     0810  0008               	return
  2224     0811                     __end_of_TMR2_Init:
  2225                           
  2226                           	psect	text6
  2227     1CBB                     __ptext6:	
  2228 ;; *************** function _TMR1_Init *****************
  2229 ;; Defined at:
  2230 ;;		line 80 in file "main.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		status,2
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258     1CBB                     _TMR1_Init:	
  2259                           ;psect for function _TMR1_Init
  2260                           
  2261     1CBB                     l3410:	
  2262                           ;incstack = 0
  2263                           ; Regs used in _TMR1_Init: [status,2]
  2264                           
  2265                           
  2266                           ;main.c: 82:     TMR1 = 0;
  2267     1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  2268     1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  2269     1CBD  018E               	clrf	14	;volatile
  2270     1CBE  018F               	clrf	15	;volatile
  2271     1CBF                     l3412:
  2272                           
  2273                           ;main.c: 83:     T1CONbits.TMR1CS = 0;
  2274     1CBF  1090               	bcf	16,1	;volatile
  2275     1CC0                     l3414:
  2276                           
  2277                           ;main.c: 84:     T1CONbits.T1CKPS0 = 1;
  2278     1CC0  1610               	bsf	16,4	;volatile
  2279     1CC1                     l3416:
  2280                           
  2281                           ;main.c: 85:     T1CONbits.T1CKPS1 = 1;
  2282     1CC1  1690               	bsf	16,5	;volatile
  2283     1CC2                     l3418:
  2284                           
  2285                           ;main.c: 87:     PIE1bits.TMR1IE = 1;
  2286     1CC2  1683               	bsf	3,5	;RP0=1, select bank1
  2287     1CC3  1303               	bcf	3,6	;RP1=0, select bank1
  2288     1CC4  140C               	bsf	12,0	;volatile
  2289     1CC5                     l3420:
  2290                           
  2291                           ;main.c: 88:     PIR1bits.TMR1IF = 0;
  2292     1CC5  1283               	bcf	3,5	;RP0=0, select bank0
  2293     1CC6  1303               	bcf	3,6	;RP1=0, select bank0
  2294     1CC7  100C               	bcf	12,0	;volatile
  2295     1CC8                     l3422:
  2296                           
  2297                           ;main.c: 89:     INTCONbits.PEIE = 1;
  2298     1CC8  170B               	bsf	11,6	;volatile
  2299     1CC9                     l3424:
  2300                           
  2301                           ;main.c: 90:     INTCONbits.GIE = 1;
  2302     1CC9  178B               	bsf	11,7	;volatile
  2303     1CCA                     l91:
  2304     1CCA  0008               	return
  2305     1CCB                     __end_of_TMR1_Init:
  2306                           
  2307                           	psect	text7
  2308     12B8                     __ptext7:	
  2309 ;; *************** function _LCD_Init *****************
  2310 ;; Defined at:
  2311 ;;		line 33 in file "lcd.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          2       0       0       0       0
  2328 ;;      Totals:         2       0       0       0       0
  2329 ;;Total ram usage:        2 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 3
  2332 ;; This function calls:
  2333 ;;		_LCD_CMD
  2334 ;;		_LCD_DATA
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340     12B8                     _LCD_Init:	
  2341                           ;psect for function _LCD_Init
  2342                           
  2343     12B8                     l4156:	
  2344                           ;incstack = 0
  2345                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2346                           
  2347                           
  2348                           ;lcd.c: 35:     TRISB = 0;
  2349     12B8  1683               	bsf	3,5	;RP0=1, select bank1
  2350     12B9  1303               	bcf	3,6	;RP1=0, select bank1
  2351     12BA  0186               	clrf	6	;volatile
  2352     12BB                     l4158:
  2353                           
  2354                           ;lcd.c: 36:     TRISBbits.TRISB5 = 0;
  2355     12BB  1286               	bcf	6,5	;volatile
  2356     12BC                     l4160:
  2357                           
  2358                           ;lcd.c: 37:     TRISBbits.TRISB4 = 0;
  2359     12BC  1206               	bcf	6,4	;volatile
  2360     12BD                     l4162:
  2361                           
  2362                           ;lcd.c: 39:     LCD_DATA(0x00);
  2363     12BD  3000               	movlw	0
  2364     12BE  160A  158A  2539  160A  118A  	fcall	_LCD_DATA
  2365     12C3                     l4164:
  2366                           
  2367                           ;lcd.c: 40:     _delay((unsigned long)((30)*(12000000/4000.0)));
  2368     12C3  3075               	movlw	117
  2369     12C4  00F6               	movwf	??_LCD_Init+1
  2370     12C5  30E1               	movlw	225
  2371     12C6  00F5               	movwf	??_LCD_Init
  2372     12C7                     u6297:
  2373     12C7  0BF5               	decfsz	??_LCD_Init,f
  2374     12C8  2AC7               	goto	u6297
  2375     12C9  0BF6               	decfsz	??_LCD_Init+1,f
  2376     12CA  2AC7               	goto	u6297
  2377     12CB                     l4166:
  2378                           
  2379                           ;lcd.c: 41:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  2380     12CB  30D6               	movlw	214
  2381     12CC  00F5               	movwf	??_LCD_Init
  2382     12CD                     u6307:
  2383     12CD  2ACE               	nop2
  2384     12CE  2ACF               	nop2
  2385     12CF  0BF5               	decfsz	??_LCD_Init,f
  2386     12D0  2ACD               	goto	u6307
  2387     12D1  0000               	nop
  2388     12D2                     l4168:
  2389                           
  2390                           ;lcd.c: 43:     LCD_CMD(0x03);
  2391     12D2  3003               	movlw	3
  2392     12D3  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2393     12D8                     l4170:
  2394                           
  2395                           ;lcd.c: 44:     _delay((unsigned long)((5)*(12000000/4000.0)));
  2396     12D8  3014               	movlw	20
  2397     12D9  00F6               	movwf	??_LCD_Init+1
  2398     12DA  3079               	movlw	121
  2399     12DB  00F5               	movwf	??_LCD_Init
  2400     12DC                     u6317:
  2401     12DC  0BF5               	decfsz	??_LCD_Init,f
  2402     12DD  2ADC               	goto	u6317
  2403     12DE  0BF6               	decfsz	??_LCD_Init+1,f
  2404     12DF  2ADC               	goto	u6317
  2405     12E0  2AE1               	nop2
  2406     12E1                     l4172:
  2407                           
  2408                           ;lcd.c: 46:     LCD_CMD(0x03);
  2409     12E1  3003               	movlw	3
  2410     12E2  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2411     12E7                     l4174:
  2412                           
  2413                           ;lcd.c: 47:     _delay((unsigned long)((150)*(12000000/4000000.0)));
  2414     12E7  3095               	movlw	149
  2415     12E8  00F5               	movwf	??_LCD_Init
  2416     12E9                     u6327:
  2417     12E9  0BF5               	decfsz	??_LCD_Init,f
  2418     12EA  2AE9               	goto	u6327
  2419     12EB  2AEC               	nop2
  2420     12EC                     l4176:
  2421                           
  2422                           ;lcd.c: 49:     LCD_CMD(0x03);
  2423     12EC  3003               	movlw	3
  2424     12ED  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2425     12F2                     l4178:
  2426                           
  2427                           ;lcd.c: 51:     LCD_CMD(0x02);
  2428     12F2  3002               	movlw	2
  2429     12F3  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2430     12F8                     l4180:
  2431                           
  2432                           ;lcd.c: 53:     LCD_CMD(0x02);
  2433     12F8  3002               	movlw	2
  2434     12F9  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2435     12FE                     l4182:
  2436                           
  2437                           ;lcd.c: 54:     LCD_CMD(0x08);
  2438     12FE  3008               	movlw	8
  2439     12FF  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2440     1304                     l4184:
  2441                           
  2442                           ;lcd.c: 56:     LCD_CMD(0x00);
  2443     1304  3000               	movlw	0
  2444     1305  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2445     130A                     l4186:
  2446                           
  2447                           ;lcd.c: 57:     LCD_CMD(0x01);
  2448     130A  3001               	movlw	1
  2449     130B  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2450     1310                     l4188:
  2451                           
  2452                           ;lcd.c: 59:     LCD_CMD(0x00);
  2453     1310  3000               	movlw	0
  2454     1311  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2455     1316                     l4190:
  2456                           
  2457                           ;lcd.c: 60:     LCD_CMD(0x0c);
  2458     1316  300C               	movlw	12
  2459     1317  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2460     131C                     l4192:
  2461                           
  2462                           ;lcd.c: 62:     LCD_CMD(0x00);
  2463     131C  3000               	movlw	0
  2464     131D  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2465     1322                     l4194:
  2466                           
  2467                           ;lcd.c: 63:     LCD_CMD(0x06);
  2468     1322  3006               	movlw	6
  2469     1323  160A  158A  24F9  160A  118A  	fcall	_LCD_CMD
  2470     1328                     l158:
  2471     1328  0008               	return
  2472     1329                     __end_of_LCD_Init:
  2473                           
  2474                           	psect	text8
  2475     1089                     __ptext8:	
  2476 ;; *************** function _LCD_Display_3 *****************
  2477 ;; Defined at:
  2478 ;;		line 175 in file "main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       2       0       0       0
  2495 ;;      Totals:         0       2       0       0       0
  2496 ;;Total ram usage:        2 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 9
  2499 ;; This function calls:
  2500 ;;		_LCD_Set_Cursor
  2501 ;;		_LCD_Write_String
  2502 ;;		_sprintf
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508     1089                     _LCD_Display_3:	
  2509                           ;psect for function _LCD_Display_3
  2510                           
  2511     1089                     l4254:	
  2512                           ;incstack = 0
  2513 ;; hardware stack exceeded
  2514                           ; Regs used in _LCD_Display_3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2515                           
  2516                           
  2517                           ;main.c: 177:     LCD_Set_Cursor(1,1);
  2518     1089  01F5               	clrf	LCD_Set_Cursor@c
  2519     108A  0AF5               	incf	LCD_Set_Cursor@c,f
  2520     108B  3001               	movlw	1
  2521     108C  160A  158A  27B1  160A  118A  	fcall	_LCD_Set_Cursor
  2522     1091                     l4256:
  2523                           
  2524                           ;main.c: 178:     LCD_Write_String("Distance 3 is:");
  2525     1091  301F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2526     1092  00F7               	movwf	LCD_Write_String@str
  2527     1093  3080               	movlw	128
  2528     1094  00F8               	movwf	LCD_Write_String@str+1
  2529     1095  160A  158A  2724  160A  118A  	fcall	_LCD_Write_String
  2530     109A                     l4258:
  2531                           
  2532                           ;main.c: 179:     LCD_Set_Cursor(2,1);
  2533     109A  01F5               	clrf	LCD_Set_Cursor@c
  2534     109B  0AF5               	incf	LCD_Set_Cursor@c,f
  2535     109C  3002               	movlw	2
  2536     109D  160A  158A  27B1  160A  118A  	fcall	_LCD_Set_Cursor
  2537                           
  2538                           ;main.c: 180:     sprintf(buffer, "%.3f [cm]", value_3);
  2539     10A2  309C               	movlw	(low (_buffer| (0+256)))& (0+255)
  2540     10A3  1683               	bsf	3,5	;RP0=1, select bank1
  2541     10A4  1303               	bcf	3,6	;RP1=0, select bank1
  2542     10A5  00D4               	movwf	sprintf@s^(0+128)
  2543     10A6  302E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2544     10A7  00D5               	movwf	sprintf@fmt^(0+128)
  2545     10A8  1683               	bsf	3,5	;RP0=1, select bank3
  2546     10A9  1703               	bsf	3,6	;RP1=1, select bank3
  2547     10AA  081B               	movf	(_value_3+3)^(0+384),w
  2548     10AB  1683               	bsf	3,5	;RP0=1, select bank1
  2549     10AC  1303               	bcf	3,6	;RP1=0, select bank1
  2550     10AD  00D9               	movwf	((?_sprintf+3)^(0+128)+2)
  2551     10AE  1683               	bsf	3,5	;RP0=1, select bank3
  2552     10AF  1703               	bsf	3,6	;RP1=1, select bank3
  2553     10B0  081A               	movf	(_value_3+2)^(0+384),w
  2554     10B1  1683               	bsf	3,5	;RP0=1, select bank1
  2555     10B2  1303               	bcf	3,6	;RP1=0, select bank1
  2556     10B3  00D8               	movwf	((?_sprintf+2)^(0+128)+2)
  2557     10B4  1683               	bsf	3,5	;RP0=1, select bank3
  2558     10B5  1703               	bsf	3,6	;RP1=1, select bank3
  2559     10B6  0819               	movf	(_value_3+1)^(0+384),w
  2560     10B7  1683               	bsf	3,5	;RP0=1, select bank1
  2561     10B8  1303               	bcf	3,6	;RP1=0, select bank1
  2562     10B9  00D7               	movwf	((?_sprintf+1)^(0+128)+2)
  2563     10BA  1683               	bsf	3,5	;RP0=1, select bank3
  2564     10BB  1703               	bsf	3,6	;RP1=1, select bank3
  2565     10BC  0818               	movf	_value_3^(0+384),w
  2566     10BD  1683               	bsf	3,5	;RP0=1, select bank1
  2567     10BE  1303               	bcf	3,6	;RP1=0, select bank1
  2568     10BF  00D6               	movwf	(?_sprintf^(0+128)+2)
  2569     10C0  160A  118A  200C  160A  118A  	fcall	_sprintf
  2570                           
  2571                           ;main.c: 181:     LCD_Write_String(buffer);
  2572     10C5  309C               	movlw	(low (_buffer| (0+256)))& (0+255)
  2573     10C6  00F7               	movwf	LCD_Write_String@str
  2574     10C7  3001               	movlw	1
  2575     10C8  00F8               	movwf	LCD_Write_String@str+1
  2576     10C9  160A  158A  2724  160A  118A  	fcall	_LCD_Write_String
  2577     10CE                     l4260:
  2578                           
  2579                           ;main.c: 182:     _delay((unsigned long)((20)*(12000000/4000.0)));
  2580     10CE  304E               	movlw	78
  2581     10CF  1283               	bcf	3,5	;RP0=0, select bank0
  2582     10D0  1303               	bcf	3,6	;RP1=0, select bank0
  2583     10D1  00EE               	movwf	??_LCD_Display_3+1
  2584     10D2  30EA               	movlw	234
  2585     10D3  00ED               	movwf	??_LCD_Display_3
  2586     10D4                     u6337:
  2587     10D4  0BED               	decfsz	??_LCD_Display_3,f
  2588     10D5  28D4               	goto	u6337
  2589     10D6  0BEE               	decfsz	??_LCD_Display_3+1,f
  2590     10D7  28D4               	goto	u6337
  2591     10D8  0000               	nop
  2592     10D9                     l133:
  2593     10D9  0008               	return
  2594     10DA                     __end_of_LCD_Display_3:
  2595                           
  2596                           	psect	text9
  2597     1EA0                     __ptext9:	
  2598 ;; *************** function _LCD_Display_2 *****************
  2599 ;; Defined at:
  2600 ;;		line 167 in file "main.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0
  2616 ;;      Temps:          0       2       0       0       0
  2617 ;;      Totals:         0       2       0       0       0
  2618 ;;Total ram usage:        2 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 9
  2621 ;; This function calls:
  2622 ;;		_LCD_Set_Cursor
  2623 ;;		_LCD_Write_String
  2624 ;;		_sprintf
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630     1EA0                     _LCD_Display_2:	
  2631                           ;psect for function _LCD_Display_2
  2632                           
  2633     1EA0                     l4232:	
  2634                           ;incstack = 0
  2635 ;; hardware stack exceeded
  2636                           ; Regs used in _LCD_Display_2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2637                           
  2638     1EA0  01F5               	clrf	LCD_Set_Cursor@c
  2639     1EA1  0AF5               	incf	LCD_Set_Cursor@c,f
  2640     1EA2  3001               	movlw	1
  2641     1EA3  160A  158A  27B1  160A  158A  	fcall	_LCD_Set_Cursor
  2642     1EA8                     l4234:
  2643                           
  2644                           ;main.c: 169:     LCD_Write_String("Distance 2 is:");
  2645     1EA8  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2646     1EA9  00F7               	movwf	LCD_Write_String@str
  2647     1EAA  3080               	movlw	128
  2648     1EAB  00F8               	movwf	LCD_Write_String@str+1
  2649     1EAC  160A  158A  2724  160A  158A  	fcall	_LCD_Write_String
  2650     1EB1                     l4236:
  2651                           
  2652                           ;main.c: 170:     LCD_Set_Cursor(2,1);
  2653     1EB1  01F5               	clrf	LCD_Set_Cursor@c
  2654     1EB2  0AF5               	incf	LCD_Set_Cursor@c,f
  2655     1EB3  3002               	movlw	2
  2656     1EB4  160A  158A  27B1  160A  158A  	fcall	_LCD_Set_Cursor
  2657                           
  2658                           ;main.c: 171:     sprintf(buffer, "%.3f [cm]", value_2);
  2659     1EB9  309C               	movlw	(low (_buffer| (0+256)))& (0+255)
  2660     1EBA  1683               	bsf	3,5	;RP0=1, select bank1
  2661     1EBB  1303               	bcf	3,6	;RP1=0, select bank1
  2662     1EBC  00D4               	movwf	sprintf@s^(0+128)
  2663     1EBD  302E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2664     1EBE  00D5               	movwf	sprintf@fmt^(0+128)
  2665     1EBF  0861               	movf	(_value_2+3)^(0+128),w
  2666     1EC0  00D9               	movwf	((?_sprintf+3)^(0+128)+2)
  2667     1EC1  0860               	movf	(_value_2+2)^(0+128),w
  2668     1EC2  00D8               	movwf	((?_sprintf+2)^(0+128)+2)
  2669     1EC3  085F               	movf	(_value_2+1)^(0+128),w
  2670     1EC4  00D7               	movwf	((?_sprintf+1)^(0+128)+2)
  2671     1EC5  085E               	movf	_value_2^(0+128),w
  2672     1EC6  00D6               	movwf	(?_sprintf^(0+128)+2)
  2673     1EC7  160A  118A  200C  160A  158A  	fcall	_sprintf
  2674                           
  2675                           ;main.c: 172:     LCD_Write_String(buffer);
  2676     1ECC  309C               	movlw	(low (_buffer| (0+256)))& (0+255)
  2677     1ECD  00F7               	movwf	LCD_Write_String@str
  2678     1ECE  3001               	movlw	1
  2679     1ECF  00F8               	movwf	LCD_Write_String@str+1
  2680     1ED0  160A  158A  2724  160A  158A  	fcall	_LCD_Write_String
  2681     1ED5                     l4238:
  2682                           
  2683                           ;main.c: 173:     _delay((unsigned long)((20)*(12000000/4000.0)));
  2684     1ED5  304E               	movlw	78
  2685     1ED6  1283               	bcf	3,5	;RP0=0, select bank0
  2686     1ED7  1303               	bcf	3,6	;RP1=0, select bank0
  2687     1ED8  00EE               	movwf	??_LCD_Display_2+1
  2688     1ED9  30EA               	movlw	234
  2689     1EDA  00ED               	movwf	??_LCD_Display_2
  2690     1EDB                     u6347:
  2691     1EDB  0BED               	decfsz	??_LCD_Display_2,f
  2692     1EDC  2EDB               	goto	u6347
  2693     1EDD  0BEE               	decfsz	??_LCD_Display_2+1,f
  2694     1EDE  2EDB               	goto	u6347
  2695     1EDF  0000               	nop
  2696     1EE0                     l130:
  2697     1EE0  0008               	return
  2698     1EE1                     __end_of_LCD_Display_2:
  2699                           
  2700                           	psect	text10
  2701     1E5F                     __ptext10:	
  2702 ;; *************** function _LCD_Display_1 *****************
  2703 ;; Defined at:
  2704 ;;		line 158 in file "main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0
  2720 ;;      Temps:          0       2       0       0       0
  2721 ;;      Totals:         0       2       0       0       0
  2722 ;;Total ram usage:        2 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 9
  2725 ;; This function calls:
  2726 ;;		_LCD_Set_Cursor
  2727 ;;		_LCD_Write_String
  2728 ;;		_sprintf
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734     1E5F                     _LCD_Display_1:	
  2735                           ;psect for function _LCD_Display_1
  2736                           
  2737     1E5F                     l4210:	
  2738                           ;incstack = 0
  2739 ;; hardware stack exceeded
  2740                           ; Regs used in _LCD_Display_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2741                           
  2742                           
  2743                           ;main.c: 160:     LCD_Set_Cursor(1,1);
  2744     1E5F  01F5               	clrf	LCD_Set_Cursor@c
  2745     1E60  0AF5               	incf	LCD_Set_Cursor@c,f
  2746     1E61  3001               	movlw	1
  2747     1E62  160A  158A  27B1  160A  158A  	fcall	_LCD_Set_Cursor
  2748     1E67                     l4212:
  2749                           
  2750                           ;main.c: 161:     LCD_Write_String("Distance 1 is:");
  2751     1E67  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2752     1E68  00F7               	movwf	LCD_Write_String@str
  2753     1E69  3080               	movlw	128
  2754     1E6A  00F8               	movwf	LCD_Write_String@str+1
  2755     1E6B  160A  158A  2724  160A  158A  	fcall	_LCD_Write_String
  2756     1E70                     l4214:
  2757                           
  2758                           ;main.c: 162:     LCD_Set_Cursor(2,1);
  2759     1E70  01F5               	clrf	LCD_Set_Cursor@c
  2760     1E71  0AF5               	incf	LCD_Set_Cursor@c,f
  2761     1E72  3002               	movlw	2
  2762     1E73  160A  158A  27B1  160A  158A  	fcall	_LCD_Set_Cursor
  2763                           
  2764                           ;main.c: 163:     sprintf(buffer, "%.3f [cm]", value_1);
  2765     1E78  309C               	movlw	(low (_buffer| (0+256)))& (0+255)
  2766     1E79  1683               	bsf	3,5	;RP0=1, select bank1
  2767     1E7A  1303               	bcf	3,6	;RP1=0, select bank1
  2768     1E7B  00D4               	movwf	sprintf@s^(0+128)
  2769     1E7C  302E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2770     1E7D  00D5               	movwf	sprintf@fmt^(0+128)
  2771     1E7E  0865               	movf	(_value_1+3)^(0+128),w
  2772     1E7F  00D9               	movwf	((?_sprintf+3)^(0+128)+2)
  2773     1E80  0864               	movf	(_value_1+2)^(0+128),w
  2774     1E81  00D8               	movwf	((?_sprintf+2)^(0+128)+2)
  2775     1E82  0863               	movf	(_value_1+1)^(0+128),w
  2776     1E83  00D7               	movwf	((?_sprintf+1)^(0+128)+2)
  2777     1E84  0862               	movf	_value_1^(0+128),w
  2778     1E85  00D6               	movwf	(?_sprintf^(0+128)+2)
  2779     1E86  160A  118A  200C  160A  158A  	fcall	_sprintf
  2780                           
  2781                           ;main.c: 164:     LCD_Write_String(buffer);
  2782     1E8B  309C               	movlw	(low (_buffer| (0+256)))& (0+255)
  2783     1E8C  00F7               	movwf	LCD_Write_String@str
  2784     1E8D  3001               	movlw	1
  2785     1E8E  00F8               	movwf	LCD_Write_String@str+1
  2786     1E8F  160A  158A  2724  160A  158A  	fcall	_LCD_Write_String
  2787     1E94                     l4216:
  2788                           
  2789                           ;main.c: 165:     _delay((unsigned long)((20)*(12000000/4000.0)));
  2790     1E94  304E               	movlw	78
  2791     1E95  1283               	bcf	3,5	;RP0=0, select bank0
  2792     1E96  1303               	bcf	3,6	;RP1=0, select bank0
  2793     1E97  00EE               	movwf	??_LCD_Display_1+1
  2794     1E98  30EA               	movlw	234
  2795     1E99  00ED               	movwf	??_LCD_Display_1
  2796     1E9A                     u6357:
  2797     1E9A  0BED               	decfsz	??_LCD_Display_1,f
  2798     1E9B  2E9A               	goto	u6357
  2799     1E9C  0BEE               	decfsz	??_LCD_Display_1+1,f
  2800     1E9D  2E9A               	goto	u6357
  2801     1E9E  0000               	nop
  2802     1E9F                     l127:
  2803     1E9F  0008               	return
  2804     1EA0                     __end_of_LCD_Display_1:
  2805                           
  2806                           	psect	text11
  2807     100C                     __ptext11:	
  2808 ;; *************** function _sprintf *****************
  2809 ;; Defined at:
  2810 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  s               1   52[BANK1 ] PTR unsigned char 
  2813 ;;		 -> buffer(20), 
  2814 ;;  fmt             1   53[BANK1 ] PTR const unsigned char 
  2815 ;;		 -> STR_6(10), STR_4(10), STR_2(10), 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  f              11   66[BANK0 ] struct _IO_FILE
  2818 ;;  ret             2    0        int 
  2819 ;;  ap              1   65[BANK0 ] PTR void [1]
  2820 ;;		 -> ?_sprintf(2), 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2   52[BANK1 ] int 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       0       6       0       0
  2831 ;;      Locals:         0      12       0       0       0
  2832 ;;      Temps:          0       1       0       0       0
  2833 ;;      Totals:         0      13       6       0       0
  2834 ;;Total ram usage:       19 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 8
  2837 ;; This function calls:
  2838 ;;		_vfprintf
  2839 ;; This function is called by:
  2840 ;;		_LCD_Display_1
  2841 ;;		_LCD_Display_2
  2842 ;;		_LCD_Display_3
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846     100C                     _sprintf:	
  2847                           ;psect for function _sprintf
  2848                           
  2849     100C                     l4142:	
  2850                           ;incstack = 0
  2851 ;; hardware stack exceeded
  2852                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2853                           
  2854     100C  30D6               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2855     100D  1283               	bcf	3,5	;RP0=0, select bank0
  2856     100E  1303               	bcf	3,6	;RP1=0, select bank0
  2857     100F  00E1               	movwf	sprintf@ap
  2858     1010                     l4144:
  2859     1010  1683               	bsf	3,5	;RP0=1, select bank1
  2860     1011  1303               	bcf	3,6	;RP1=0, select bank1
  2861     1012  0854               	movf	sprintf@s^(0+128),w
  2862     1013  1283               	bcf	3,5	;RP0=0, select bank0
  2863     1014  1303               	bcf	3,6	;RP1=0, select bank0
  2864     1015  00E2               	movwf	sprintf@f
  2865     1016  3001               	movlw	1
  2866     1017  00E3               	movwf	sprintf@f+1
  2867     1018                     l4146:
  2868     1018  01E4               	clrf	sprintf@f+2
  2869     1019  01E5               	clrf	sprintf@f+3
  2870     101A                     l4148:
  2871     101A  01EB               	clrf	sprintf@f+9
  2872     101B  01EC               	clrf	sprintf@f+10
  2873     101C                     l4150:
  2874     101C  3062               	movlw	low sprintf@f
  2875     101D  1683               	bsf	3,5	;RP0=1, select bank1
  2876     101E  1303               	bcf	3,6	;RP1=0, select bank1
  2877     101F  00D0               	movwf	vfprintf@fp^(0+128)
  2878     1020  3000               	movlw	high sprintf@f
  2879     1021  00D1               	movwf	(vfprintf@fp^(0+128)+1)
  2880     1022  0855               	movf	sprintf@fmt^(0+128),w
  2881     1023  00D2               	movwf	vfprintf@fmt^(0+128)
  2882     1024  3061               	movlw	(low (sprintf@ap| 0))& (0+255)
  2883     1025  00D3               	movwf	vfprintf@ap^(0+128)
  2884     1026  160A  158A  25CD  160A  118A  	fcall	_vfprintf
  2885     102B                     l4152:
  2886     102B  1283               	bcf	3,5	;RP0=0, select bank0
  2887     102C  1303               	bcf	3,6	;RP1=0, select bank0
  2888     102D  0864               	movf	sprintf@f+2,w
  2889     102E  1683               	bsf	3,5	;RP0=1, select bank1
  2890     102F  1303               	bcf	3,6	;RP1=0, select bank1
  2891     1030  0754               	addwf	sprintf@s^(0+128),w
  2892     1031  1283               	bcf	3,5	;RP0=0, select bank0
  2893     1032  1303               	bcf	3,6	;RP1=0, select bank0
  2894     1033  00E0               	movwf	??_sprintf
  2895     1034  0860               	movf	??_sprintf,w
  2896     1035  0084               	movwf	4
  2897     1036  1783               	bsf	3,7	;select IRP bank2
  2898     1037  0180               	clrf	0
  2899     1038                     l730:
  2900     1038  0008               	return
  2901     1039                     __end_of_sprintf:
  2902                           
  2903                           	psect	text12
  2904     1DCD                     __ptext12:	
  2905 ;; *************** function _vfprintf *****************
  2906 ;; Defined at:
  2907 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  2910 ;;		 -> sprintf@f(11), 
  2911 ;;  fmt             1   50[BANK1 ] PTR const unsigned char 
  2912 ;;		 -> STR_6(10), STR_4(10), STR_2(10), 
  2913 ;;  ap              1   51[BANK1 ] PTR PTR void 
  2914 ;;		 -> sprintf@ap(1), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  cfmt            1   63[BANK0 ] PTR unsigned char 
  2917 ;;		 -> STR_6(10), STR_4(10), STR_2(10), 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2   48[BANK1 ] int 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       0       4       0       0
  2928 ;;      Locals:         0       1       0       0       0
  2929 ;;      Temps:          0       0       0       0       0
  2930 ;;      Totals:         0       1       4       0       0
  2931 ;;Total ram usage:        5 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 7
  2934 ;; This function calls:
  2935 ;;		_vfpfcnvrt
  2936 ;; This function is called by:
  2937 ;;		_sprintf
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941     1DCD                     _vfprintf:	
  2942                           ;psect for function _vfprintf
  2943                           
  2944     1DCD                     l4100:	
  2945                           ;incstack = 0
  2946 ;; hardware stack exceeded
  2947                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2948                           
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2951     1DCD  1683               	bsf	3,5	;RP0=1, select bank1
  2952     1DCE  1303               	bcf	3,6	;RP1=0, select bank1
  2953     1DCF  0852               	movf	vfprintf@fmt^(0+128),w
  2954     1DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2955     1DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2956     1DD2  00DF               	movwf	vfprintf@cfmt
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2959     1DD3  2DE3               	goto	l4104
  2960     1DD4                     l4102:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2963     1DD4  1683               	bsf	3,5	;RP0=1, select bank1
  2964     1DD5  1303               	bcf	3,6	;RP1=0, select bank1
  2965     1DD6  0850               	movf	vfprintf@fp^(0+128),w
  2966     1DD7  00CC               	movwf	vfpfcnvrt@fp^(0+128)
  2967     1DD8  0851               	movf	(vfprintf@fp+1)^(0+128),w
  2968     1DD9  00CD               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  2969     1DDA  305F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2970     1DDB  00CE               	movwf	vfpfcnvrt@fmt^(0+128)
  2971     1DDC  0853               	movf	vfprintf@ap^(0+128),w
  2972     1DDD  00CF               	movwf	vfpfcnvrt@ap^(0+128)
  2973     1DDE  160A  118A  24E3  160A  158A  	fcall	_vfpfcnvrt
  2974     1DE3                     l4104:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2977     1DE3  1283               	bcf	3,5	;RP0=0, select bank0
  2978     1DE4  1303               	bcf	3,6	;RP1=0, select bank0
  2979     1DE5  085F               	movf	vfprintf@cfmt,w
  2980     1DE6  0084               	movwf	4
  2981     1DE7  160A  158A  200A  160A  158A  	fcall	stringdir
  2982     1DEC  3A00               	xorlw	0
  2983     1DED  1D03               	skipz
  2984     1DEE  2DF0               	goto	u6091
  2985     1DEF  2DF1               	goto	u6090
  2986     1DF0                     u6091:
  2987     1DF0  2DD4               	goto	l4102
  2988     1DF1                     u6090:
  2989     1DF1                     l4106:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2992     1DF1  1683               	bsf	3,5	;RP0=1, select bank1
  2993     1DF2  1303               	bcf	3,6	;RP1=0, select bank1
  2994     1DF3  01D0               	clrf	?_vfprintf^(0+128)
  2995     1DF4  01D1               	clrf	(?_vfprintf+1)^(0+128)
  2996     1DF5                     l848:
  2997     1DF5  0008               	return
  2998     1DF6                     __end_of_vfprintf:
  2999                           
  3000                           	psect	text13
  3001     14E3                     __ptext13:	
  3002 ;; *************** function _vfpfcnvrt *****************
  3003 ;; Defined at:
  3004 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  3007 ;;		 -> sprintf@f(11), 
  3008 ;;  fmt             1   46[BANK1 ] PTR PTR unsigned char 
  3009 ;;		 -> vfprintf@cfmt(1), 
  3010 ;;  ap              1   47[BANK1 ] PTR PTR void 
  3011 ;;		 -> sprintf@ap(1), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  convarg         4   57[BANK0 ] struct .
  3014 ;;  cp              1   62[BANK0 ] PTR unsigned char 
  3015 ;;		 -> STR_6(10), STR_4(10), STR_2(10), 
  3016 ;;  c               1   61[BANK0 ] unsigned char 
  3017 ;;  done            1    0        _Bool 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         0       0       4       0       0
  3028 ;;      Locals:         0       6       0       0       0
  3029 ;;      Temps:          0       2       0       0       0
  3030 ;;      Totals:         0       8       4       0       0
  3031 ;;Total ram usage:       12 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 6
  3034 ;; This function calls:
  3035 ;;		_efgtoa
  3036 ;;		_fputc
  3037 ;;		_read_prec_or_width
  3038 ;; This function is called by:
  3039 ;;		_vfprintf
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043     14E3                     _vfpfcnvrt:	
  3044                           ;psect for function _vfpfcnvrt
  3045                           
  3046     14E3                     l4008:	
  3047                           ;incstack = 0
  3048 ;; hardware stack exceeded
  3049                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3050                           
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3053     14E3  1683               	bsf	3,5	;RP0=1, select bank1
  3054     14E4  1303               	bcf	3,6	;RP1=0, select bank1
  3055     14E5  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3056     14E6  0084               	movwf	4
  3057     14E7  1383               	bcf	3,7	;select IRP bank0
  3058     14E8  0800               	movf	0,w
  3059     14E9  0084               	movwf	4
  3060     14EA  160A  158A  200A  160A  118A  	fcall	stringdir
  3061     14EF  3A25               	xorlw	37
  3062     14F0  1D03               	skipz
  3063     14F1  2CF3               	goto	u6051
  3064     14F2  2CF4               	goto	u6050
  3065     14F3                     u6051:
  3066     14F3  2DC8               	goto	l4058
  3067     14F4                     u6050:
  3068     14F4                     l4010:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3071     14F4  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3072     14F5  0084               	movwf	4
  3073     14F6  3001               	movlw	1
  3074     14F7  0780               	addwf	0,f
  3075     14F8                     l4012:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3078     14F8  01E6               	clrf	_width^(0+128)
  3079     14F9  01E7               	clrf	(_width+1)^(0+128)
  3080     14FA  3000               	movlw	0
  3081     14FB  00EC               	movwf	_flags^(0+128)
  3082     14FC                     l4014:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3085     14FC  30FF               	movlw	255
  3086     14FD  00E8               	movwf	_prec^(0+128)
  3087     14FE  30FF               	movlw	255
  3088     14FF  00E9               	movwf	(_prec^(0+128)+1)
  3089     1500                     l4016:
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3092     1500  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3093     1501  0084               	movwf	4
  3094     1502  0800               	movf	0,w
  3095     1503  0084               	movwf	4
  3096     1504  160A  158A  200A  160A  118A  	fcall	stringdir
  3097     1509  3A2E               	xorlw	46
  3098     150A  1D03               	skipz
  3099     150B  2D0D               	goto	u6061
  3100     150C  2D0E               	goto	u6060
  3101     150D                     u6061:
  3102     150D  2D21               	goto	l4022
  3103     150E                     u6060:
  3104     150E                     l4018:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3107     150E  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3108     150F  0084               	movwf	4
  3109     1510  3001               	movlw	1
  3110     1511  0780               	addwf	0,f
  3111     1512                     l4020:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3114     1512  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3115     1513  00F8               	movwf	read_prec_or_width@fmt
  3116     1514  084F               	movf	vfpfcnvrt@ap^(0+128),w
  3117     1515  00F9               	movwf	read_prec_or_width@ap
  3118     1516  160A  118A  212B  160A  118A  	fcall	_read_prec_or_width
  3119     151B  0879               	movf	?_read_prec_or_width+1,w
  3120     151C  1683               	bsf	3,5	;RP0=1, select bank1
  3121     151D  1303               	bcf	3,6	;RP1=0, select bank1
  3122     151E  00E9               	movwf	(_prec+1)^(0+128)
  3123     151F  0878               	movf	?_read_prec_or_width,w
  3124     1520  00E8               	movwf	_prec^(0+128)
  3125     1521                     l4022:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3128     1521  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3129     1522  0084               	movwf	4
  3130     1523  1383               	bcf	3,7	;select IRP bank0
  3131     1524  0800               	movf	0,w
  3132     1525  1283               	bcf	3,5	;RP0=0, select bank0
  3133     1526  1303               	bcf	3,6	;RP1=0, select bank0
  3134     1527  00DE               	movwf	vfpfcnvrt@cp
  3135     1528                     l4024:
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3138     1528  085E               	movf	vfpfcnvrt@cp,w
  3139     1529  0084               	movwf	4
  3140     152A  160A  158A  200A  160A  118A  	fcall	stringdir
  3141     152F  00DD               	movwf	vfpfcnvrt@c
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3144     1530  2D39               	goto	l4032
  3145     1531                     l4026:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3148     1531  3001               	movlw	1
  3149     1532  07DE               	addwf	vfpfcnvrt@cp,f
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  3152     1533  2D44               	goto	l4034
  3153     1534                     l830:	
  3154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  3155                           
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3158     1534  306C               	movlw	108
  3159     1535  00DD               	movwf	vfpfcnvrt@c
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  3162     1536  2D44               	goto	l4034
  3163     1537                     l4028:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3166     1537  01DD               	clrf	vfpfcnvrt@c
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  3169     1538  2D44               	goto	l4034
  3170     1539                     l4032:
  3171     1539  085D               	movf	vfpfcnvrt@c,w
  3172                           
  3173                           ; Switch size 1, requested type "simple"
  3174                           ; Number of cases is 3, Range of values is 76 to 108
  3175                           ; switch strategies available:
  3176                           ; Name         Instructions Cycles
  3177                           ; simple_byte           10     6 (average)
  3178                           ; direct_byte          110    11 (fixed)
  3179                           ; jumptable            263     9 (fixed)
  3180                           ;	Chosen strategy is simple_byte
  3181     153A  3A4C               	xorlw	76	; case 76
  3182     153B  1903               	skipnz
  3183     153C  2D31               	goto	l4026
  3184     153D  3A2A               	xorlw	42	; case 102
  3185     153E  1903               	skipnz
  3186     153F  2D34               	goto	l830
  3187     1540  3A0A               	xorlw	10	; case 108
  3188     1541  1903               	skipnz
  3189     1542  2D31               	goto	l4026
  3190     1543  2D37               	goto	l4028
  3191     1544                     l4034:
  3192     1544  085E               	movf	vfpfcnvrt@cp,w
  3193     1545  0084               	movwf	4
  3194     1546  160A  158A  200A  160A  118A  	fcall	stringdir
  3195     154B  3A66               	xorlw	102
  3196     154C  1D03               	skipz
  3197     154D  2D4F               	goto	u6071
  3198     154E  2D50               	goto	u6070
  3199     154F                     u6071:
  3200     154F  2DC0               	goto	l4054
  3201     1550                     u6070:
  3202     1550  2D81               	goto	l4042
  3203     1551                     l4036:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3206     1551  1683               	bsf	3,5	;RP0=1, select bank1
  3207     1552  1303               	bcf	3,6	;RP1=0, select bank1
  3208     1553  084F               	movf	vfpfcnvrt@ap^(0+128),w
  3209     1554  0084               	movwf	4
  3210     1555  0800               	movf	0,w
  3211     1556  00FF               	movwf	btemp+1
  3212     1557  3004               	movlw	4
  3213     1558  0780               	addwf	0,f
  3214     1559  087F               	movf	btemp+1,w
  3215     155A  0084               	movwf	4
  3216     155B  0800               	movf	0,w
  3217     155C  1283               	bcf	3,5	;RP0=0, select bank0
  3218     155D  1303               	bcf	3,6	;RP1=0, select bank0
  3219     155E  00D9               	movwf	vfpfcnvrt@convarg
  3220     155F  0A84               	incf	4,f
  3221     1560  0800               	movf	0,w
  3222     1561  00DA               	movwf	vfpfcnvrt@convarg+1
  3223     1562  0A84               	incf	4,f
  3224     1563  0800               	movf	0,w
  3225     1564  00DB               	movwf	vfpfcnvrt@convarg+2
  3226     1565  0A84               	incf	4,f
  3227     1566  0800               	movf	0,w
  3228     1567  00DC               	movwf	vfpfcnvrt@convarg+3
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  3231     1568  2D89               	goto	l4044
  3232     1569                     l4038:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3235     1569  1683               	bsf	3,5	;RP0=1, select bank1
  3236     156A  1303               	bcf	3,6	;RP1=0, select bank1
  3237     156B  084F               	movf	vfpfcnvrt@ap^(0+128),w
  3238     156C  0084               	movwf	4
  3239     156D  0800               	movf	0,w
  3240     156E  00FF               	movwf	btemp+1
  3241     156F  3004               	movlw	4
  3242     1570  0780               	addwf	0,f
  3243     1571  087F               	movf	btemp+1,w
  3244     1572  0084               	movwf	4
  3245     1573  0800               	movf	0,w
  3246     1574  1283               	bcf	3,5	;RP0=0, select bank0
  3247     1575  1303               	bcf	3,6	;RP1=0, select bank0
  3248     1576  00D9               	movwf	vfpfcnvrt@convarg
  3249     1577  0A84               	incf	4,f
  3250     1578  0800               	movf	0,w
  3251     1579  00DA               	movwf	vfpfcnvrt@convarg+1
  3252     157A  0A84               	incf	4,f
  3253     157B  0800               	movf	0,w
  3254     157C  00DB               	movwf	vfpfcnvrt@convarg+2
  3255     157D  0A84               	incf	4,f
  3256     157E  0800               	movf	0,w
  3257     157F  00DC               	movwf	vfpfcnvrt@convarg+3
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  3260     1580  2D89               	goto	l4044
  3261     1581                     l4042:
  3262     1581  085D               	movf	vfpfcnvrt@c,w
  3263                           
  3264                           ; Switch size 1, requested type "simple"
  3265                           ; Number of cases is 2, Range of values is 76 to 108
  3266                           ; switch strategies available:
  3267                           ; Name         Instructions Cycles
  3268                           ; simple_byte            7     4 (average)
  3269                           ; direct_byte          110    11 (fixed)
  3270                           ; jumptable            263     9 (fixed)
  3271                           ;	Chosen strategy is simple_byte
  3272     1582  3A4C               	xorlw	76	; case 76
  3273     1583  1903               	skipnz
  3274     1584  2D69               	goto	l4038
  3275     1585  3A20               	xorlw	32	; case 108
  3276     1586  1903               	skipnz
  3277     1587  2D51               	goto	l4036
  3278     1588  2D89               	goto	l4044
  3279     1589                     l4044:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3282     1589  1683               	bsf	3,5	;RP0=1, select bank1
  3283     158A  1303               	bcf	3,6	;RP1=0, select bank1
  3284     158B  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3285     158C  0084               	movwf	4
  3286     158D  1283               	bcf	3,5	;RP0=0, select bank0
  3287     158E  1303               	bcf	3,6	;RP1=0, select bank0
  3288     158F  085E               	movf	vfpfcnvrt@cp,w
  3289     1590  3E01               	addlw	1
  3290     1591  0080               	movwf	0
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3293     1592  2DB5               	goto	l4052
  3294     1593                     l4046:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3297     1593  1683               	bsf	3,5	;RP0=1, select bank1
  3298     1594  1303               	bcf	3,6	;RP1=0, select bank1
  3299     1595  084C               	movf	vfpfcnvrt@fp^(0+128),w
  3300     1596  1283               	bcf	3,5	;RP0=0, select bank0
  3301     1597  1303               	bcf	3,6	;RP1=0, select bank0
  3302     1598  00CC               	movwf	efgtoa@fp
  3303     1599  1683               	bsf	3,5	;RP0=1, select bank1
  3304     159A  1303               	bcf	3,6	;RP1=0, select bank1
  3305     159B  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  3306     159C  1283               	bcf	3,5	;RP0=0, select bank0
  3307     159D  1303               	bcf	3,6	;RP1=0, select bank0
  3308     159E  00CD               	movwf	efgtoa@fp+1
  3309     159F  085C               	movf	vfpfcnvrt@convarg+3,w
  3310     15A0  00D1               	movwf	efgtoa@f+3
  3311     15A1  085B               	movf	vfpfcnvrt@convarg+2,w
  3312     15A2  00D0               	movwf	efgtoa@f+2
  3313     15A3  085A               	movf	vfpfcnvrt@convarg+1,w
  3314     15A4  00CF               	movwf	efgtoa@f+1
  3315     15A5  0859               	movf	vfpfcnvrt@convarg,w
  3316     15A6  00CE               	movwf	efgtoa@f
  3317     15A7  085E               	movf	vfpfcnvrt@cp,w
  3318     15A8  0084               	movwf	4
  3319     15A9  160A  158A  200A  160A  118A  	fcall	stringdir
  3320     15AE  00D2               	movwf	efgtoa@c
  3321     15AF  160A  118A  25E6  160A  118A  	fcall	_efgtoa
  3322     15B4  2DE5               	goto	l841
  3323     15B5                     l4052:
  3324     15B5  085E               	movf	vfpfcnvrt@cp,w
  3325     15B6  0084               	movwf	4
  3326     15B7  160A  158A  200A  160A  118A  	fcall	stringdir
  3327                           
  3328                           ; Switch size 1, requested type "simple"
  3329                           ; Number of cases is 1, Range of values is 102 to 102
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte            4     3 (average)
  3333                           ; direct_byte           14    11 (fixed)
  3334                           ; jumptable            263     9 (fixed)
  3335                           ;	Chosen strategy is simple_byte
  3336     15BC  3A66               	xorlw	102	; case 102
  3337     15BD  1903               	skipnz
  3338     15BE  2D93               	goto	l4046
  3339     15BF  2DC0               	goto	l4054
  3340     15C0                     l4054:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3343     15C0  1683               	bsf	3,5	;RP0=1, select bank1
  3344     15C1  1303               	bcf	3,6	;RP1=0, select bank1
  3345     15C2  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3346     15C3  0084               	movwf	4
  3347     15C4  3001               	movlw	1
  3348     15C5  1383               	bcf	3,7	;select IRP bank0
  3349     15C6  0780               	addwf	0,f
  3350     15C7  2DE5               	goto	l841
  3351     15C8                     l4058:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3354     15C8  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  3355     15C9  0084               	movwf	4
  3356     15CA  0800               	movf	0,w
  3357     15CB  0084               	movwf	4
  3358     15CC  160A  158A  200A  160A  118A  	fcall	stringdir
  3359     15D1  1283               	bcf	3,5	;RP0=0, select bank0
  3360     15D2  1303               	bcf	3,6	;RP1=0, select bank0
  3361     15D3  00D7               	movwf	??_vfpfcnvrt
  3362     15D4  01D8               	clrf	??_vfpfcnvrt+1
  3363     15D5  0857               	movf	??_vfpfcnvrt,w
  3364     15D6  00F2               	movwf	fputc@c
  3365     15D7  0858               	movf	??_vfpfcnvrt+1,w
  3366     15D8  00F3               	movwf	fputc@c+1
  3367     15D9  1683               	bsf	3,5	;RP0=1, select bank1
  3368     15DA  1303               	bcf	3,6	;RP1=0, select bank1
  3369     15DB  084C               	movf	vfpfcnvrt@fp^(0+128),w
  3370     15DC  00F4               	movwf	fputc@fp
  3371     15DD  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  3372     15DE  00F5               	movwf	fputc@fp+1
  3373     15DF  160A  118A  239F  160A  118A  	fcall	_fputc
  3374     15E4  2DC0               	goto	l4054
  3375     15E5                     l841:
  3376     15E5  0008               	return
  3377     15E6                     __end_of_vfpfcnvrt:
  3378                           
  3379                           	psect	text14
  3380     112B                     __ptext14:	
  3381 ;; *************** function _read_prec_or_width *****************
  3382 ;; Defined at:
  3383 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  fmt             1    8[COMMON] PTR PTR const unsigned c
  3386 ;;		 -> vfprintf@cfmt(1), 
  3387 ;;  ap              1    9[COMMON] PTR PTR void [1]
  3388 ;;		 -> sprintf@ap(1), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  c               1    0[BANK0 ] unsigned char 
  3391 ;;  n               2    1[BANK0 ] int 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  2    8[COMMON] int 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         2       0       0       0       0
  3402 ;;      Locals:         0       3       0       0       0
  3403 ;;      Temps:          0       0       0       0       0
  3404 ;;      Totals:         2       3       0       0       0
  3405 ;;Total ram usage:        5 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 2
  3408 ;; This function calls:
  3409 ;;		___wmul
  3410 ;; This function is called by:
  3411 ;;		_vfpfcnvrt
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415     112B                     _read_prec_or_width:	
  3416                           ;psect for function _read_prec_or_width
  3417                           
  3418     112B                     l3148:	
  3419                           ;incstack = 0
  3420                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3421                           
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3424     112B  1283               	bcf	3,5	;RP0=0, select bank0
  3425     112C  1303               	bcf	3,6	;RP1=0, select bank0
  3426     112D  01A1               	clrf	read_prec_or_width@n
  3427     112E  01A2               	clrf	read_prec_or_width@n+1
  3428     112F                     l3150:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3431     112F  0878               	movf	read_prec_or_width@fmt,w
  3432     1130  0084               	movwf	4
  3433     1131  1383               	bcf	3,7	;select IRP bank0
  3434     1132  0800               	movf	0,w
  3435     1133  0084               	movwf	4
  3436     1134  160A  158A  200A  160A  118A  	fcall	stringdir
  3437     1139  3A2A               	xorlw	42
  3438     113A  1D03               	skipz
  3439     113B  293D               	goto	u4601
  3440     113C  293E               	goto	u4600
  3441     113D                     u4601:
  3442     113D  296C               	goto	l3160
  3443     113E                     u4600:
  3444     113E                     l3152:
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3447     113E  0878               	movf	read_prec_or_width@fmt,w
  3448     113F  0084               	movwf	4
  3449     1140  3001               	movlw	1
  3450     1141  0780               	addwf	0,f
  3451     1142                     l3154:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3454     1142  0879               	movf	read_prec_or_width@ap,w
  3455     1143  0084               	movwf	4
  3456     1144  0800               	movf	0,w
  3457     1145  00FF               	movwf	btemp+1
  3458     1146  3002               	movlw	2
  3459     1147  0780               	addwf	0,f
  3460     1148  087F               	movf	btemp+1,w
  3461     1149  0084               	movwf	4
  3462     114A  0800               	movf	0,w
  3463     114B  00A1               	movwf	read_prec_or_width@n
  3464     114C  0A84               	incf	4,f
  3465     114D  0800               	movf	0,w
  3466     114E  00A2               	movwf	read_prec_or_width@n+1
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3469     114F  297D               	goto	l3162
  3470     1150                     l3156:
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3473     1150  0822               	movf	read_prec_or_width@n+1,w
  3474     1151  00F3               	movwf	___wmul@multiplier+1
  3475     1152  0821               	movf	read_prec_or_width@n,w
  3476     1153  00F2               	movwf	___wmul@multiplier
  3477     1154  300A               	movlw	10
  3478     1155  00F4               	movwf	___wmul@multiplicand
  3479     1156  3000               	movlw	0
  3480     1157  00F5               	movwf	___wmul@multiplicand+1
  3481     1158  160A  158A  257F  160A  118A  	fcall	___wmul
  3482     115D  1283               	bcf	3,5	;RP0=0, select bank0
  3483     115E  1303               	bcf	3,6	;RP1=0, select bank0
  3484     115F  0820               	movf	read_prec_or_width@c,w
  3485     1160  0772               	addwf	?___wmul,w
  3486     1161  00A1               	movwf	read_prec_or_width@n
  3487     1162  3000               	movlw	0
  3488     1163  1803               	skipnc
  3489     1164  3001               	movlw	1
  3490     1165  0773               	addwf	?___wmul+1,w
  3491     1166  00A2               	movwf	read_prec_or_width@n+1
  3492     1167                     l3158:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3495     1167  0878               	movf	read_prec_or_width@fmt,w
  3496     1168  0084               	movwf	4
  3497     1169  3001               	movlw	1
  3498     116A  1383               	bcf	3,7	;select IRP bank0
  3499     116B  0780               	addwf	0,f
  3500     116C                     l3160:
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3503     116C  0878               	movf	read_prec_or_width@fmt,w
  3504     116D  0084               	movwf	4
  3505     116E  0800               	movf	0,w
  3506     116F  0084               	movwf	4
  3507     1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3508     1175  3ED0               	addlw	208
  3509     1176  00A0               	movwf	read_prec_or_width@c
  3510     1177  300A               	movlw	10
  3511     1178  0220               	subwf	read_prec_or_width@c,w
  3512     1179  1C03               	skipc
  3513     117A  297C               	goto	u4611
  3514     117B  297D               	goto	u4610
  3515     117C                     u4611:
  3516     117C  2950               	goto	l3156
  3517     117D                     u4610:
  3518     117D                     l3162:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3521     117D  0822               	movf	read_prec_or_width@n+1,w
  3522     117E  00F9               	movwf	?_read_prec_or_width+1
  3523     117F  0821               	movf	read_prec_or_width@n,w
  3524     1180  00F8               	movwf	?_read_prec_or_width
  3525     1181                     l821:
  3526     1181  0008               	return
  3527     1182                     __end_of_read_prec_or_width:
  3528                           
  3529                           	psect	text15
  3530     1D7F                     __ptext15:	
  3531 ;; *************** function ___wmul *****************
  3532 ;; Defined at:
  3533 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  multiplier      2    2[COMMON] unsigned int 
  3536 ;;  multiplicand    2    4[COMMON] unsigned int 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  product         2    6[COMMON] unsigned int 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  2    2[COMMON] unsigned int 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         4       0       0       0       0
  3549 ;;      Locals:         2       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         6       0       0       0       0
  3552 ;;Total ram usage:        6 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_read_prec_or_width
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562     1D7F                     ___wmul:	
  3563                           ;psect for function ___wmul
  3564                           
  3565     1D7F                     l2466:	
  3566                           ;incstack = 0
  3567                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3568                           
  3569     1D7F  01F6               	clrf	___wmul@product
  3570     1D80  01F7               	clrf	___wmul@product+1
  3571     1D81                     l2468:
  3572     1D81  1C72               	btfss	___wmul@multiplier,0
  3573     1D82  2D84               	goto	u3081
  3574     1D83  2D85               	goto	u3080
  3575     1D84                     u3081:
  3576     1D84  2D8B               	goto	l267
  3577     1D85                     u3080:
  3578     1D85                     l2470:
  3579     1D85  0874               	movf	___wmul@multiplicand,w
  3580     1D86  07F6               	addwf	___wmul@product,f
  3581     1D87  1803               	skipnc
  3582     1D88  0AF7               	incf	___wmul@product+1,f
  3583     1D89  0875               	movf	___wmul@multiplicand+1,w
  3584     1D8A  07F7               	addwf	___wmul@product+1,f
  3585     1D8B                     l267:
  3586     1D8B  3001               	movlw	1
  3587     1D8C                     u3095:
  3588     1D8C  1003               	clrc
  3589     1D8D  0DF4               	rlf	___wmul@multiplicand,f
  3590     1D8E  0DF5               	rlf	___wmul@multiplicand+1,f
  3591     1D8F  3EFF               	addlw	-1
  3592     1D90  1D03               	skipz
  3593     1D91  2D8C               	goto	u3095
  3594     1D92                     l2472:
  3595     1D92  3001               	movlw	1
  3596     1D93                     u3105:
  3597     1D93  1003               	clrc
  3598     1D94  0CF3               	rrf	___wmul@multiplier+1,f
  3599     1D95  0CF2               	rrf	___wmul@multiplier,f
  3600     1D96  3EFF               	addlw	-1
  3601     1D97  1D03               	skipz
  3602     1D98  2D93               	goto	u3105
  3603     1D99                     l2474:
  3604     1D99  0872               	movf	___wmul@multiplier,w
  3605     1D9A  0473               	iorwf	___wmul@multiplier+1,w
  3606     1D9B  1D03               	btfss	3,2
  3607     1D9C  2D9E               	goto	u3111
  3608     1D9D  2D9F               	goto	u3110
  3609     1D9E                     u3111:
  3610     1D9E  2D81               	goto	l2468
  3611     1D9F                     u3110:
  3612     1D9F                     l2476:
  3613     1D9F  0877               	movf	___wmul@product+1,w
  3614     1DA0  00F3               	movwf	?___wmul+1
  3615     1DA1  0876               	movf	___wmul@product,w
  3616     1DA2  00F2               	movwf	?___wmul
  3617     1DA3                     l269:
  3618     1DA3  0008               	return
  3619     1DA4                     __end_of___wmul:
  3620                           
  3621                           	psect	text16
  3622     15E6                     __ptext16:	
  3623 ;; *************** function _efgtoa *****************
  3624 ;; Defined at:
  3625 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  3628 ;;		 -> sprintf@f(11), 
  3629 ;;  f               4   46[BANK0 ] PTR struct _IO_FILE
  3630 ;;  c               1   50[BANK0 ] unsigned char 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  u               4   40[BANK1 ] struct flui
  3633 ;;  g               4   34[BANK1 ] struct flui
  3634 ;;  l               4   29[BANK1 ] struct flui
  3635 ;;  h               4   25[BANK1 ] struct flui
  3636 ;;  ou              4   19[BANK1 ] struct flui
  3637 ;;  n               2   38[BANK1 ] int 
  3638 ;;  i               2   23[BANK1 ] int 
  3639 ;;  w               2   17[BANK1 ] int 
  3640 ;;  e               2   15[BANK1 ] int 
  3641 ;;  m               2   13[BANK1 ] int 
  3642 ;;  d               2   11[BANK1 ] int 
  3643 ;;  t               2    4[BANK1 ] int 
  3644 ;;  p               2    2[BANK1 ] int 
  3645 ;;  ne              2    0[BANK1 ] int 
  3646 ;;  sign            1   33[BANK1 ] unsigned char 
  3647 ;;  nmode           1   10[BANK1 ] unsigned char 
  3648 ;;  mode            1    9[BANK1 ] unsigned char 
  3649 ;;  pp              1    8[BANK1 ] unsigned char 
  3650 ;;  esign           1    0        unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3660 ;;      Params:         0       7       0       0       0
  3661 ;;      Locals:         0       0      44       0       0
  3662 ;;      Temps:          0       4       0       0       0
  3663 ;;      Totals:         0      11      44       0       0
  3664 ;;Total ram usage:       55 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 5
  3667 ;; This function calls:
  3668 ;;		___fladd
  3669 ;;		___fldiv
  3670 ;;		___fleq
  3671 ;;		___flge
  3672 ;;		___flmul
  3673 ;;		___flneg
  3674 ;;		___flsub
  3675 ;;		___fltol
  3676 ;;		___fpclassifyf
  3677 ;;		_floorf
  3678 ;;		_labs
  3679 ;;		_memcpy
  3680 ;;		_pad
  3681 ;;		_strcpy
  3682 ;; This function is called by:
  3683 ;;		_vfpfcnvrt
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687     15E6                     _efgtoa:	
  3688                           ;psect for function _efgtoa
  3689                           
  3690     15E6                     l3784:	
  3691                           ;incstack = 0
  3692 ;; hardware stack exceeded
  3693                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3694                           
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3697     15E6  1683               	bsf	3,5	;RP0=1, select bank1
  3698     15E7  1303               	bcf	3,6	;RP1=0, select bank1
  3699     15E8  01C1               	clrf	efgtoa@sign^(0+128)
  3700     15E9                     l3786:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3703     15E9  1283               	bcf	3,5	;RP0=0, select bank0
  3704     15EA  1303               	bcf	3,6	;RP1=0, select bank0
  3705     15EB  0851               	movf	efgtoa@f+3,w
  3706     15EC  1683               	bsf	3,5	;RP0=1, select bank1
  3707     15ED  1303               	bcf	3,6	;RP1=0, select bank1
  3708     15EE  00C5               	movwf	(efgtoa@g+3)^(0+128)
  3709     15EF  1283               	bcf	3,5	;RP0=0, select bank0
  3710     15F0  1303               	bcf	3,6	;RP1=0, select bank0
  3711     15F1  0850               	movf	efgtoa@f+2,w
  3712     15F2  1683               	bsf	3,5	;RP0=1, select bank1
  3713     15F3  1303               	bcf	3,6	;RP1=0, select bank1
  3714     15F4  00C4               	movwf	(efgtoa@g+2)^(0+128)
  3715     15F5  1283               	bcf	3,5	;RP0=0, select bank0
  3716     15F6  1303               	bcf	3,6	;RP1=0, select bank0
  3717     15F7  084F               	movf	efgtoa@f+1,w
  3718     15F8  1683               	bsf	3,5	;RP0=1, select bank1
  3719     15F9  1303               	bcf	3,6	;RP1=0, select bank1
  3720     15FA  00C3               	movwf	(efgtoa@g+1)^(0+128)
  3721     15FB  1283               	bcf	3,5	;RP0=0, select bank0
  3722     15FC  1303               	bcf	3,6	;RP1=0, select bank0
  3723     15FD  084E               	movf	efgtoa@f,w
  3724     15FE  1683               	bsf	3,5	;RP0=1, select bank1
  3725     15FF  1303               	bcf	3,6	;RP1=0, select bank1
  3726     1600  00C2               	movwf	efgtoa@g^(0+128)
  3727     1601                     l3788:
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3730     1601  0845               	movf	(efgtoa@g+3)^(0+128),w
  3731     1602  1283               	bcf	3,5	;RP0=0, select bank0
  3732     1603  1303               	bcf	3,6	;RP1=0, select bank0
  3733     1604  00C3               	movwf	___flge@ff1+3
  3734     1605  1683               	bsf	3,5	;RP0=1, select bank1
  3735     1606  1303               	bcf	3,6	;RP1=0, select bank1
  3736     1607  0844               	movf	(efgtoa@g+2)^(0+128),w
  3737     1608  1283               	bcf	3,5	;RP0=0, select bank0
  3738     1609  1303               	bcf	3,6	;RP1=0, select bank0
  3739     160A  00C2               	movwf	___flge@ff1+2
  3740     160B  1683               	bsf	3,5	;RP0=1, select bank1
  3741     160C  1303               	bcf	3,6	;RP1=0, select bank1
  3742     160D  0843               	movf	(efgtoa@g+1)^(0+128),w
  3743     160E  1283               	bcf	3,5	;RP0=0, select bank0
  3744     160F  1303               	bcf	3,6	;RP1=0, select bank0
  3745     1610  00C1               	movwf	___flge@ff1+1
  3746     1611  1683               	bsf	3,5	;RP0=1, select bank1
  3747     1612  1303               	bcf	3,6	;RP1=0, select bank1
  3748     1613  0842               	movf	efgtoa@g^(0+128),w
  3749     1614  1283               	bcf	3,5	;RP0=0, select bank0
  3750     1615  1303               	bcf	3,6	;RP1=0, select bank0
  3751     1616  00C0               	movwf	___flge@ff1
  3752     1617  3000               	movlw	0
  3753     1618  00C7               	movwf	___flge@ff2+3
  3754     1619  3000               	movlw	0
  3755     161A  00C6               	movwf	___flge@ff2+2
  3756     161B  3000               	movlw	0
  3757     161C  00C5               	movwf	___flge@ff2+1
  3758     161D  3000               	movlw	0
  3759     161E  00C4               	movwf	___flge@ff2
  3760     161F  160A  118A  243F  160A  118A  	fcall	___flge
  3761     1624  1803               	btfsc	3,0
  3762     1625  2E27               	goto	u5661
  3763     1626  2E28               	goto	u5660
  3764     1627                     u5661:
  3765     1627  2E43               	goto	l3794
  3766     1628                     u5660:
  3767     1628                     l3790:
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3770     1628  3001               	movlw	1
  3771     1629  1683               	bsf	3,5	;RP0=1, select bank1
  3772     162A  1303               	bcf	3,6	;RP1=0, select bank1
  3773     162B  00C1               	movwf	efgtoa@sign^(0+128)
  3774     162C                     l3792:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3777     162C  0845               	movf	(efgtoa@g+3)^(0+128),w
  3778     162D  00F5               	movwf	___flneg@f1+3
  3779     162E  0844               	movf	(efgtoa@g+2)^(0+128),w
  3780     162F  00F4               	movwf	___flneg@f1+2
  3781     1630  0843               	movf	(efgtoa@g+1)^(0+128),w
  3782     1631  00F3               	movwf	___flneg@f1+1
  3783     1632  0842               	movf	efgtoa@g^(0+128),w
  3784     1633  00F2               	movwf	___flneg@f1
  3785     1634  160A  118A  2001  160A  118A  	fcall	___flneg
  3786     1639  0875               	movf	?___flneg+3,w
  3787     163A  1683               	bsf	3,5	;RP0=1, select bank1
  3788     163B  1303               	bcf	3,6	;RP1=0, select bank1
  3789     163C  00C5               	movwf	(efgtoa@g+3)^(0+128)
  3790     163D  0874               	movf	?___flneg+2,w
  3791     163E  00C4               	movwf	(efgtoa@g+2)^(0+128)
  3792     163F  0873               	movf	?___flneg+1,w
  3793     1640  00C3               	movwf	(efgtoa@g+1)^(0+128)
  3794     1641  0872               	movf	?___flneg,w
  3795     1642  00C2               	movwf	efgtoa@g^(0+128)
  3796     1643                     l3794:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3799     1643  1683               	bsf	3,5	;RP0=1, select bank1
  3800     1644  1303               	bcf	3,6	;RP1=0, select bank1
  3801     1645  01C6               	clrf	efgtoa@n^(0+128)
  3802     1646  01C7               	clrf	(efgtoa@n+1)^(0+128)
  3803     1647                     l3796:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3806     1647  0867               	movf	(_width+1)^(0+128),w
  3807     1648  00B2               	movwf	(efgtoa@w+1)^(0+128)
  3808     1649  0866               	movf	_width^(0+128),w
  3809     164A  00B1               	movwf	efgtoa@w^(0+128)
  3810     164B                     l3798:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3813     164B  0841               	movf	efgtoa@sign^(0+128),w
  3814     164C  1903               	btfsc	3,2
  3815     164D  2E4F               	goto	u5671
  3816     164E  2E50               	goto	u5670
  3817     164F                     u5671:
  3818     164F  2E60               	goto	l3806
  3819     1650                     u5670:
  3820     1650                     l3800:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3823     1650  0841               	movf	efgtoa@sign^(0+128),w
  3824     1651  1D03               	btfss	3,2
  3825     1652  2E54               	goto	u5681
  3826     1653  2E55               	goto	u5680
  3827     1654                     u5681:
  3828     1654  2E5A               	goto	l3804
  3829     1655                     u5680:
  3830     1655                     l3802:
  3831     1655  302B               	movlw	43
  3832     1656  00A6               	movwf	_efgtoa$994^(0+128)
  3833     1657  3000               	movlw	0
  3834     1658  00A7               	movwf	(_efgtoa$994^(0+128)+1)
  3835     1659  2E5E               	goto	l769
  3836     165A                     l3804:
  3837     165A  302D               	movlw	45
  3838     165B  00A6               	movwf	_efgtoa$994^(0+128)
  3839     165C  3000               	movlw	0
  3840     165D  00A7               	movwf	(_efgtoa$994^(0+128)+1)
  3841     165E                     l769:
  3842     165E  0826               	movf	_efgtoa$994^(0+128),w
  3843     165F  00C1               	movwf	efgtoa@sign^(0+128)
  3844     1660                     l3806:
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3847     1660  0845               	movf	(efgtoa@g+3)^(0+128),w
  3848     1661  00F5               	movwf	___fpclassifyf@x+3
  3849     1662  0844               	movf	(efgtoa@g+2)^(0+128),w
  3850     1663  00F4               	movwf	___fpclassifyf@x+2
  3851     1664  0843               	movf	(efgtoa@g+1)^(0+128),w
  3852     1665  00F3               	movwf	___fpclassifyf@x+1
  3853     1666  0842               	movf	efgtoa@g^(0+128),w
  3854     1667  00F2               	movwf	___fpclassifyf@x
  3855     1668  120A  158A  2011  160A  118A  	fcall	___fpclassifyf
  3856     166D  0372               	decf	?___fpclassifyf,w
  3857     166E  0473               	iorwf	?___fpclassifyf+1,w
  3858     166F  1D03               	btfss	3,2
  3859     1670  2E72               	goto	u5691
  3860     1671  2E73               	goto	u5690
  3861     1672                     u5691:
  3862     1672  2EB8               	goto	l3820
  3863     1673                     u5690:
  3864     1673                     l3808:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3867     1673  1683               	bsf	3,5	;RP0=1, select bank1
  3868     1674  1303               	bcf	3,6	;RP1=0, select bank1
  3869     1675  0841               	movf	efgtoa@sign^(0+128),w
  3870     1676  1903               	btfsc	3,2
  3871     1677  2E79               	goto	u5701
  3872     1678  2E7A               	goto	u5700
  3873     1679                     u5701:
  3874     1679  2E8A               	goto	l3812
  3875     167A                     u5700:
  3876     167A                     l3810:
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3879     167A  0841               	movf	efgtoa@sign^(0+128),w
  3880     167B  1283               	bcf	3,5	;RP0=0, select bank2
  3881     167C  1703               	bsf	3,6	;RP1=1, select bank2
  3882     167D  0090               	movwf	_dbuf^(0+256)
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3885     167E  30FF               	movlw	255
  3886     167F  1683               	bsf	3,5	;RP0=1, select bank1
  3887     1680  1303               	bcf	3,6	;RP1=0, select bank1
  3888     1681  07B1               	addwf	efgtoa@w^(0+128),f
  3889     1682  1803               	skipnc
  3890     1683  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3891     1684  30FF               	movlw	255
  3892     1685  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3895     1686  3001               	movlw	1
  3896     1687  00C6               	movwf	efgtoa@n^(0+128)
  3897     1688  3000               	movlw	0
  3898     1689  00C7               	movwf	(efgtoa@n^(0+128)+1)
  3899     168A                     l3812:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3902     168A  0846               	movf	efgtoa@n^(0+128),w
  3903     168B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3904     168C  00F2               	movwf	strcpy@dest
  3905     168D  3038               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3906     168E  00F3               	movwf	strcpy@src
  3907     168F  160A  158A  24E0  160A  118A  	fcall	_strcpy
  3908     1694                     l3814:
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3911     1694  30FD               	movlw	253
  3912     1695  1683               	bsf	3,5	;RP0=1, select bank1
  3913     1696  1303               	bcf	3,6	;RP1=0, select bank1
  3914     1697  07B1               	addwf	efgtoa@w^(0+128),f
  3915     1698  1803               	skipnc
  3916     1699  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3917     169A  30FF               	movlw	255
  3918     169B  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3919     169C                     l3816:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3922     169C  1283               	bcf	3,5	;RP0=0, select bank0
  3923     169D  1303               	bcf	3,6	;RP1=0, select bank0
  3924     169E  084C               	movf	efgtoa@fp,w
  3925     169F  00AE               	movwf	pad@fp
  3926     16A0  084D               	movf	efgtoa@fp+1,w
  3927     16A1  00AF               	movwf	pad@fp+1
  3928     16A2  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3929     16A3  00B0               	movwf	pad@buf
  3930     16A4  1683               	bsf	3,5	;RP0=1, select bank1
  3931     16A5  1303               	bcf	3,6	;RP1=0, select bank1
  3932     16A6  0832               	movf	(efgtoa@w+1)^(0+128),w
  3933     16A7  1283               	bcf	3,5	;RP0=0, select bank0
  3934     16A8  1303               	bcf	3,6	;RP1=0, select bank0
  3935     16A9  00B2               	movwf	pad@p+1
  3936     16AA  1683               	bsf	3,5	;RP0=1, select bank1
  3937     16AB  1303               	bcf	3,6	;RP1=0, select bank1
  3938     16AC  0831               	movf	efgtoa@w^(0+128),w
  3939     16AD  1283               	bcf	3,5	;RP0=0, select bank0
  3940     16AE  1303               	bcf	3,6	;RP1=0, select bank0
  3941     16AF  00B1               	movwf	pad@p
  3942     16B0  160A  158A  2621  160A  118A  	fcall	_pad
  3943     16B5  120A  118A  2F3A   	goto	l772
  3944     16B8                     l3820:
  3945                           
  3946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3947     16B8  1683               	bsf	3,5	;RP0=1, select bank1
  3948     16B9  1303               	bcf	3,6	;RP1=0, select bank1
  3949     16BA  0845               	movf	(efgtoa@g+3)^(0+128),w
  3950     16BB  00F5               	movwf	___fpclassifyf@x+3
  3951     16BC  0844               	movf	(efgtoa@g+2)^(0+128),w
  3952     16BD  00F4               	movwf	___fpclassifyf@x+2
  3953     16BE  0843               	movf	(efgtoa@g+1)^(0+128),w
  3954     16BF  00F3               	movwf	___fpclassifyf@x+1
  3955     16C0  0842               	movf	efgtoa@g^(0+128),w
  3956     16C1  00F2               	movwf	___fpclassifyf@x
  3957     16C2  120A  158A  2011  160A  118A  	fcall	___fpclassifyf
  3958     16C7  0872               	movf	?___fpclassifyf,w
  3959     16C8  0473               	iorwf	?___fpclassifyf+1,w
  3960     16C9  1D03               	btfss	3,2
  3961     16CA  2ECC               	goto	u5711
  3962     16CB  2ECF               	goto	u5710
  3963     16CC                     u5711:
  3964     16CC  120A  118A  2832   	goto	l3834
  3965     16CF                     u5710:
  3966     16CF                     l3822:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3969     16CF  1683               	bsf	3,5	;RP0=1, select bank1
  3970     16D0  1303               	bcf	3,6	;RP1=0, select bank1
  3971     16D1  0841               	movf	efgtoa@sign^(0+128),w
  3972     16D2  1903               	btfsc	3,2
  3973     16D3  2ED5               	goto	u5721
  3974     16D4  2ED6               	goto	u5720
  3975     16D5                     u5721:
  3976     16D5  2EE6               	goto	l3826
  3977     16D6                     u5720:
  3978     16D6                     l3824:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3981     16D6  0841               	movf	efgtoa@sign^(0+128),w
  3982     16D7  1283               	bcf	3,5	;RP0=0, select bank2
  3983     16D8  1703               	bsf	3,6	;RP1=1, select bank2
  3984     16D9  0090               	movwf	_dbuf^(0+256)
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3987     16DA  30FF               	movlw	255
  3988     16DB  1683               	bsf	3,5	;RP0=1, select bank1
  3989     16DC  1303               	bcf	3,6	;RP1=0, select bank1
  3990     16DD  07B1               	addwf	efgtoa@w^(0+128),f
  3991     16DE  1803               	skipnc
  3992     16DF  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  3993     16E0  30FF               	movlw	255
  3994     16E1  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  3995                           
  3996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3997     16E2  3001               	movlw	1
  3998     16E3  00C6               	movwf	efgtoa@n^(0+128)
  3999     16E4  3000               	movlw	0
  4000     16E5  00C7               	movwf	(efgtoa@n^(0+128)+1)
  4001     16E6                     l3826:
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4004     16E6  0846               	movf	efgtoa@n^(0+128),w
  4005     16E7  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4006     16E8  00F2               	movwf	strcpy@dest
  4007     16E9  303C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  4008     16EA  00F3               	movwf	strcpy@src
  4009     16EB  160A  158A  24E0  160A  118A  	fcall	_strcpy
  4010     16F0  2E94               	goto	l3814
  4011                           
  4012                           	psect	text17
  4013     1CE0                     __ptext17:	
  4014 ;; *************** function _strcpy *****************
  4015 ;; Defined at:
  4016 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  dest            1    2[COMMON] PTR unsigned char 
  4019 ;;		 -> dbuf(80), 
  4020 ;;  src             1    3[COMMON] PTR const unsigned char 
  4021 ;;		 -> STR_10(4), STR_7(4), 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  d               1    4[COMMON] PTR unsigned char 
  4024 ;;		 -> dbuf(80), 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    2[COMMON] PTR unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         2       0       0       0       0
  4035 ;;      Locals:         1       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         3       0       0       0       0
  4038 ;;Total ram usage:        3 bytes
  4039 ;; Hardware stack levels used: 2
  4040 ;; Hardware stack levels required when called: 1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_efgtoa
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048     1CE0                     _strcpy:	
  4049                           ;psect for function _strcpy
  4050                           
  4051     1CE0                     l2884:	
  4052                           ;incstack = 0
  4053 ;; using string table level
  4054                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4055                           
  4056     1CE0  0872               	movf	strcpy@dest,w
  4057     1CE1  00F4               	movwf	strcpy@d
  4058     1CE2                     l2886:
  4059     1CE2  3001               	movlw	1
  4060     1CE3  07F3               	addwf	strcpy@src,f
  4061     1CE4  30FF               	movlw	-1
  4062     1CE5  0773               	addwf	strcpy@src,w
  4063     1CE6  0084               	movwf	4
  4064     1CE7  160A  158A  200A  160A  158A  	fcall	stringdir
  4065     1CEC  00FF               	movwf	btemp+1
  4066     1CED  0874               	movf	strcpy@d,w
  4067     1CEE  0AF4               	incf	strcpy@d,f
  4068     1CEF  0084               	movwf	4
  4069     1CF0  087F               	movf	btemp+1,w
  4070     1CF1  1783               	bsf	3,7	;select IRP bank2
  4071     1CF2  0080               	movwf	0
  4072     1CF3  0800               	movf	0,w
  4073     1CF4  1D03               	btfss	3,2
  4074     1CF5  2CF7               	goto	u4101
  4075     1CF6  2CF8               	goto	u4100
  4076     1CF7                     u4101:
  4077     1CF7  2CE2               	goto	l2886
  4078     1CF8                     u4100:
  4079     1CF8                     l914:
  4080     1CF8  0008               	return
  4081     1CF9                     __end_of_strcpy:
  4082                           
  4083                           	psect	text18
  4084     1E21                     __ptext18:	
  4085 ;; *************** function _pad *****************
  4086 ;; Defined at:
  4087 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  4090 ;;		 -> sprintf@f(11), 
  4091 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  4092 ;;		 -> dbuf(80), 
  4093 ;;  p               2   17[BANK0 ] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  i               2   19[BANK0 ] int 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       5       0       0       0
  4106 ;;      Locals:         0       2       0       0       0
  4107 ;;      Temps:          1       0       0       0       0
  4108 ;;      Totals:         1       7       0       0       0
  4109 ;;Total ram usage:        8 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; Hardware stack levels required when called: 4
  4112 ;; This function calls:
  4113 ;;		_fputc
  4114 ;;		_fputs
  4115 ;; This function is called by:
  4116 ;;		_efgtoa
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120     1E21                     _pad:	
  4121                           ;psect for function _pad
  4122                           
  4123     1E21                     l3748:	
  4124                           ;incstack = 0
  4125 ;; hardware stack exceeded
  4126                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4127                           
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4130     1E21  1283               	bcf	3,5	;RP0=0, select bank0
  4131     1E22  1303               	bcf	3,6	;RP1=0, select bank0
  4132     1E23  1FB2               	btfss	pad@p+1,7
  4133     1E24  2E26               	goto	u5561
  4134     1E25  2E27               	goto	u5560
  4135     1E26                     u5561:
  4136     1E26  2E29               	goto	l757
  4137     1E27                     u5560:
  4138     1E27                     l3750:
  4139                           
  4140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4141     1E27  01B1               	clrf	pad@p
  4142     1E28  01B2               	clrf	pad@p+1
  4143     1E29                     l757:	
  4144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  4145                           
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4148     1E29  01B3               	clrf	pad@i
  4149     1E2A  01B4               	clrf	pad@i+1
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4152     1E2B  2E43               	goto	l3756
  4153     1E2C                     l3752:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4156     1E2C  3020               	movlw	32
  4157     1E2D  00F2               	movwf	fputc@c
  4158     1E2E  3000               	movlw	0
  4159     1E2F  00F3               	movwf	fputc@c+1
  4160     1E30  1283               	bcf	3,5	;RP0=0, select bank0
  4161     1E31  1303               	bcf	3,6	;RP1=0, select bank0
  4162     1E32  082E               	movf	pad@fp,w
  4163     1E33  00F4               	movwf	fputc@fp
  4164     1E34  082F               	movf	pad@fp+1,w
  4165     1E35  00F5               	movwf	fputc@fp+1
  4166     1E36  160A  118A  239F  160A  158A  	fcall	_fputc
  4167     1E3B                     l3754:
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4170     1E3B  3001               	movlw	1
  4171     1E3C  1283               	bcf	3,5	;RP0=0, select bank0
  4172     1E3D  1303               	bcf	3,6	;RP1=0, select bank0
  4173     1E3E  07B3               	addwf	pad@i,f
  4174     1E3F  1803               	skipnc
  4175     1E40  0AB4               	incf	pad@i+1,f
  4176     1E41  3000               	movlw	0
  4177     1E42  07B4               	addwf	pad@i+1,f
  4178     1E43                     l3756:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4181     1E43  0834               	movf	pad@i+1,w
  4182     1E44  3A80               	xorlw	128
  4183     1E45  00F9               	movwf	??_pad
  4184     1E46  0832               	movf	pad@p+1,w
  4185     1E47  3A80               	xorlw	128
  4186     1E48  0279               	subwf	??_pad,w
  4187     1E49  1D03               	skipz
  4188     1E4A  2E4D               	goto	u5575
  4189     1E4B  0831               	movf	pad@p,w
  4190     1E4C  0233               	subwf	pad@i,w
  4191     1E4D                     u5575:
  4192     1E4D  1C03               	skipc
  4193     1E4E  2E50               	goto	u5571
  4194     1E4F  2E51               	goto	u5570
  4195     1E50                     u5571:
  4196     1E50  2E2C               	goto	l3752
  4197     1E51                     u5570:
  4198     1E51                     l3758:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4201     1E51  1283               	bcf	3,5	;RP0=0, select bank0
  4202     1E52  1303               	bcf	3,6	;RP1=0, select bank0
  4203     1E53  0830               	movf	pad@buf,w
  4204     1E54  00F6               	movwf	fputs@s
  4205     1E55  082E               	movf	pad@fp,w
  4206     1E56  00F7               	movwf	fputs@fp
  4207     1E57  082F               	movf	pad@fp+1,w
  4208     1E58  00F8               	movwf	fputs@fp+1
  4209     1E59  160A  158A  25F6  160A  158A  	fcall	_fputs
  4210     1E5E                     l761:
  4211     1E5E  0008               	return
  4212     1E5F                     __end_of_pad:
  4213                           
  4214                           	psect	text19
  4215     1DF6                     __ptext19:	
  4216 ;; *************** function _fputs *****************
  4217 ;; Defined at:
  4218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  s               1    6[COMMON] PTR const unsigned char 
  4221 ;;		 -> dbuf(80), 
  4222 ;;  fp              2    7[COMMON] PTR struct _IO_FILE
  4223 ;;		 -> sprintf@f(11), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  i               2   12[BANK0 ] int 
  4226 ;;  c               1   11[BANK0 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2    6[COMMON] int 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         3       0       0       0       0
  4237 ;;      Locals:         0       3       0       0       0
  4238 ;;      Temps:          0       2       0       0       0
  4239 ;;      Totals:         3       5       0       0       0
  4240 ;;Total ram usage:        8 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 3
  4243 ;; This function calls:
  4244 ;;		_fputc
  4245 ;; This function is called by:
  4246 ;;		_pad
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250     1DF6                     _fputs:	
  4251                           ;psect for function _fputs
  4252                           
  4253     1DF6                     l3562:	
  4254                           ;incstack = 0
  4255 ;; hardware stack exceeded
  4256                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4257                           
  4258     1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  4259     1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  4260     1DF8  01AC               	clrf	fputs@i
  4261     1DF9  01AD               	clrf	fputs@i+1
  4262     1DFA  2E13               	goto	l3568
  4263     1DFB                     l3564:
  4264     1DFB  082B               	movf	fputs@c,w
  4265     1DFC  00A9               	movwf	??_fputs
  4266     1DFD  01AA               	clrf	??_fputs+1
  4267     1DFE  0829               	movf	??_fputs,w
  4268     1DFF  00F2               	movwf	fputc@c
  4269     1E00  082A               	movf	??_fputs+1,w
  4270     1E01  00F3               	movwf	fputc@c+1
  4271     1E02  0877               	movf	fputs@fp,w
  4272     1E03  00F4               	movwf	fputc@fp
  4273     1E04  0878               	movf	fputs@fp+1,w
  4274     1E05  00F5               	movwf	fputc@fp+1
  4275     1E06  160A  118A  239F  160A  158A  	fcall	_fputc
  4276     1E0B                     l3566:
  4277     1E0B  3001               	movlw	1
  4278     1E0C  1283               	bcf	3,5	;RP0=0, select bank0
  4279     1E0D  1303               	bcf	3,6	;RP1=0, select bank0
  4280     1E0E  07AC               	addwf	fputs@i,f
  4281     1E0F  1803               	skipnc
  4282     1E10  0AAD               	incf	fputs@i+1,f
  4283     1E11  3000               	movlw	0
  4284     1E12  07AD               	addwf	fputs@i+1,f
  4285     1E13                     l3568:
  4286     1E13  082C               	movf	fputs@i,w
  4287     1E14  0776               	addwf	fputs@s,w
  4288     1E15  00A9               	movwf	??_fputs
  4289     1E16  0829               	movf	??_fputs,w
  4290     1E17  0084               	movwf	4
  4291     1E18  1783               	bsf	3,7	;select IRP bank2
  4292     1E19  0800               	movf	0,w
  4293     1E1A  00AB               	movwf	fputs@c
  4294     1E1B  082B               	movf	fputs@c,w
  4295     1E1C  1D03               	btfss	3,2
  4296     1E1D  2E1F               	goto	u5081
  4297     1E1E  2E20               	goto	u5080
  4298     1E1F                     u5081:
  4299     1E1F  2DFB               	goto	l3564
  4300     1E20                     u5080:
  4301     1E20                     l905:
  4302     1E20  0008               	return
  4303     1E21                     __end_of_fputs:
  4304                           
  4305                           	psect	text20
  4306     139F                     __ptext20:	
  4307 ;; *************** function _fputc *****************
  4308 ;; Defined at:
  4309 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  c               2    2[COMMON] int 
  4312 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  4313 ;;		 -> sprintf@f(11), 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2    2[COMMON] int 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         4       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0
  4327 ;;      Temps:          0       9       0       0       0
  4328 ;;      Totals:         4       9       0       0       0
  4329 ;;Total ram usage:       13 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 2
  4332 ;; This function calls:
  4333 ;;		_putch
  4334 ;; This function is called by:
  4335 ;;		_pad
  4336 ;;		_vfpfcnvrt
  4337 ;;		_fputs
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341     139F                     _fputc:	
  4342                           ;psect for function _fputc
  4343                           
  4344     139F                     l2232:	
  4345                           ;incstack = 0
  4346                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4347                           
  4348     139F  0874               	movf	fputc@fp,w
  4349     13A0  0475               	iorwf	fputc@fp+1,w
  4350     13A1  1903               	btfsc	3,2
  4351     13A2  2BA4               	goto	u2531
  4352     13A3  2BA5               	goto	u2530
  4353     13A4                     u2531:
  4354     13A4  2BAB               	goto	l2236
  4355     13A5                     u2530:
  4356     13A5                     l2234:
  4357     13A5  0874               	movf	fputc@fp,w
  4358     13A6  0475               	iorwf	fputc@fp+1,w
  4359     13A7  1D03               	btfss	3,2
  4360     13A8  2BAA               	goto	u2541
  4361     13A9  2BAB               	goto	u2540
  4362     13AA                     u2541:
  4363     13AA  2BB2               	goto	l2238
  4364     13AB                     u2540:
  4365     13AB                     l2236:
  4366     13AB  0872               	movf	fputc@c,w
  4367     13AC  120A  118A  27FE  160A  118A  	fcall	_putch
  4368     13B1  2C3E               	goto	l897
  4369     13B2                     l2238:
  4370     13B2  0874               	movf	fputc@fp,w
  4371     13B3  3E09               	addlw	9
  4372     13B4  1283               	bcf	3,5	;RP0=0, select bank0
  4373     13B5  1303               	bcf	3,6	;RP1=0, select bank0
  4374     13B6  00A0               	movwf	??_fputc
  4375     13B7  0875               	movf	fputc@fp+1,w
  4376     13B8  1803               	skipnc
  4377     13B9  3E01               	addlw	1
  4378     13BA  3E00               	addlw	0
  4379     13BB  00A1               	movwf	??_fputc+1
  4380     13BC  0820               	movf	??_fputc,w
  4381     13BD  0084               	movwf	4
  4382     13BE  1783               	bsf	3,7
  4383     13BF  1C21               	btfss	??_fputc+1,0
  4384     13C0  1383               	bcf	3,7
  4385     13C1  0800               	movf	0,w
  4386     13C2  00A2               	movwf	??_fputc+2
  4387     13C3  0A84               	incf	4,f
  4388     13C4  0800               	movf	0,w
  4389     13C5  00A3               	movwf	??_fputc+3
  4390     13C6  0822               	movf	??_fputc+2,w
  4391     13C7  0423               	iorwf	??_fputc+3,w
  4392     13C8  1903               	btfsc	3,2
  4393     13C9  2BCB               	goto	u2551
  4394     13CA  2BCC               	goto	u2550
  4395     13CB                     u2551:
  4396     13CB  2BFE               	goto	l2242
  4397     13CC                     u2550:
  4398     13CC                     l2240:
  4399     13CC  0874               	movf	fputc@fp,w
  4400     13CD  3E09               	addlw	9
  4401     13CE  00A0               	movwf	??_fputc
  4402     13CF  0875               	movf	fputc@fp+1,w
  4403     13D0  1803               	skipnc
  4404     13D1  3E01               	addlw	1
  4405     13D2  3E00               	addlw	0
  4406     13D3  00A1               	movwf	??_fputc+1
  4407     13D4  0820               	movf	??_fputc,w
  4408     13D5  0084               	movwf	4
  4409     13D6  1783               	bsf	3,7
  4410     13D7  1C21               	btfss	??_fputc+1,0
  4411     13D8  1383               	bcf	3,7
  4412     13D9  0800               	movf	0,w
  4413     13DA  00A2               	movwf	??_fputc+2
  4414     13DB  0A84               	incf	4,f
  4415     13DC  0800               	movf	0,w
  4416     13DD  00A3               	movwf	??_fputc+3
  4417     13DE  0874               	movf	fputc@fp,w
  4418     13DF  3E02               	addlw	2
  4419     13E0  00A4               	movwf	??_fputc+4
  4420     13E1  0875               	movf	fputc@fp+1,w
  4421     13E2  1803               	skipnc
  4422     13E3  3E01               	addlw	1
  4423     13E4  3E00               	addlw	0
  4424     13E5  00A5               	movwf	??_fputc+5
  4425     13E6  0824               	movf	??_fputc+4,w
  4426     13E7  0084               	movwf	4
  4427     13E8  1783               	bsf	3,7
  4428     13E9  1C25               	btfss	??_fputc+5,0
  4429     13EA  1383               	bcf	3,7
  4430     13EB  0800               	movf	0,w
  4431     13EC  00A6               	movwf	??_fputc+6
  4432     13ED  0A84               	incf	4,f
  4433     13EE  0800               	movf	0,w
  4434     13EF  00A7               	movwf	??_fputc+7
  4435     13F0  0827               	movf	??_fputc+7,w
  4436     13F1  3A80               	xorlw	128
  4437     13F2  00A8               	movwf	??_fputc+8
  4438     13F3  0823               	movf	??_fputc+3,w
  4439     13F4  3A80               	xorlw	128
  4440     13F5  0228               	subwf	??_fputc+8,w
  4441     13F6  1D03               	skipz
  4442     13F7  2BFA               	goto	u2565
  4443     13F8  0822               	movf	??_fputc+2,w
  4444     13F9  0226               	subwf	??_fputc+6,w
  4445     13FA                     u2565:
  4446     13FA  1803               	skipnc
  4447     13FB  2BFD               	goto	u2561
  4448     13FC  2BFE               	goto	u2560
  4449     13FD                     u2561:
  4450     13FD  2C3E               	goto	l897
  4451     13FE                     u2560:
  4452     13FE                     l2242:
  4453     13FE  0874               	movf	fputc@fp,w
  4454     13FF  0084               	movwf	4
  4455     1400  1783               	bsf	3,7
  4456     1401  1C75               	btfss	fputc@fp+1,0
  4457     1402  1383               	bcf	3,7
  4458     1403  0800               	movf	0,w
  4459     1404  1283               	bcf	3,5	;RP0=0, select bank0
  4460     1405  1303               	bcf	3,6	;RP1=0, select bank0
  4461     1406  00A0               	movwf	??_fputc
  4462     1407  0A84               	incf	4,f
  4463     1408  0800               	movf	0,w
  4464     1409  00A1               	movwf	??_fputc+1
  4465     140A  0874               	movf	fputc@fp,w
  4466     140B  3E02               	addlw	2
  4467     140C  00A2               	movwf	??_fputc+2
  4468     140D  0875               	movf	fputc@fp+1,w
  4469     140E  1803               	skipnc
  4470     140F  3E01               	addlw	1
  4471     1410  3E00               	addlw	0
  4472     1411  00A3               	movwf	??_fputc+3
  4473     1412  0822               	movf	??_fputc+2,w
  4474     1413  0084               	movwf	4
  4475     1414  1783               	bsf	3,7
  4476     1415  1C23               	btfss	??_fputc+3,0
  4477     1416  1383               	bcf	3,7
  4478     1417  0800               	movf	0,w
  4479     1418  0720               	addwf	??_fputc,w
  4480     1419  00A5               	movwf	??_fputc+5
  4481     141A  0821               	movf	??_fputc+1,w
  4482     141B  00A4               	movwf	??_fputc+4
  4483     141C  1803               	skipnc
  4484     141D  0AA4               	incf	??_fputc+4,f
  4485     141E  1F80               	btfss	0,7
  4486     141F  2C21               	goto	u2570
  4487     1420  03A4               	decf	??_fputc+4,f
  4488     1421                     u2570:
  4489     1421  1283               	bcf	3,5	;RP0=0, select bank0
  4490     1422  1303               	bcf	3,6	;RP1=0, select bank0
  4491     1423  0824               	movf	??_fputc+4,w
  4492     1424  00A6               	movwf	??_fputc+6
  4493     1425  0825               	movf	??_fputc+5,w
  4494     1426  0084               	movwf	4
  4495     1427  1783               	bsf	3,7
  4496     1428  1C26               	btfss	??_fputc+6,0
  4497     1429  1383               	bcf	3,7
  4498     142A  0872               	movf	fputc@c,w
  4499     142B  0080               	movwf	0
  4500     142C  0874               	movf	fputc@fp,w
  4501     142D  3E02               	addlw	2
  4502     142E  00A0               	movwf	??_fputc
  4503     142F  0875               	movf	fputc@fp+1,w
  4504     1430  1803               	skipnc
  4505     1431  3E01               	addlw	1
  4506     1432  3E00               	addlw	0
  4507     1433  00A1               	movwf	??_fputc+1
  4508     1434  0820               	movf	??_fputc,w
  4509     1435  0084               	movwf	4
  4510     1436  1783               	bsf	3,7
  4511     1437  1C21               	btfss	??_fputc+1,0
  4512     1438  1383               	bcf	3,7
  4513     1439  3001               	movlw	1
  4514     143A  0780               	addwf	0,f
  4515     143B  0A84               	incf	4,f
  4516     143C  1803               	skipnc
  4517     143D  0A80               	incf	0,f
  4518     143E                     l897:
  4519     143E  0008               	return
  4520     143F                     __end_of_fputc:
  4521                           
  4522                           	psect	text21
  4523     07FE                     __ptext21:	
  4524 ;; *************** function _putch *****************
  4525 ;; Defined at:
  4526 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  c               1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  c               1    0[COMMON] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4540 ;;      Params:         0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_fputc
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554     07FE                     _putch:	
  4555                           ;psect for function _putch
  4556                           
  4557     07FE                     l908:	
  4558                           ;incstack = 0
  4559                           ; Regs used in _putch: [wreg]
  4560                           
  4561     07FE  0008               	return
  4562     07FF                     __end_of_putch:
  4563                           
  4564                           	psect	text22
  4565     1D18                     __ptext22:	
  4566 ;; *************** function _memcpy *****************
  4567 ;; Defined at:
  4568 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  d1              1    2[COMMON] PTR void 
  4571 ;;		 -> dbuf(80), 
  4572 ;;  s1              1    3[COMMON] PTR const void 
  4573 ;;		 -> dbuf(80), 
  4574 ;;  n               2    4[COMMON] unsigned int 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  s               1    8[COMMON] PTR const unsigned char 
  4577 ;;		 -> dbuf(80), 
  4578 ;;  d               1    7[COMMON] PTR unsigned char 
  4579 ;;		 -> dbuf(80), 
  4580 ;;  tmp             1    6[COMMON] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    2[COMMON] PTR void 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         4       0       0       0       0
  4591 ;;      Locals:         3       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0
  4593 ;;      Totals:         7       0       0       0       0
  4594 ;;Total ram usage:        7 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_efgtoa
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604     1D18                     _memcpy:	
  4605                           ;psect for function _memcpy
  4606                           
  4607     1D18                     l2926:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  4610                           
  4611     1D18  0873               	movf	memcpy@s1,w
  4612     1D19  00F8               	movwf	memcpy@s
  4613     1D1A  0872               	movf	memcpy@d1,w
  4614     1D1B  00F7               	movwf	memcpy@d
  4615     1D1C  2D2A               	goto	l882
  4616     1D1D                     l2928:
  4617     1D1D  0878               	movf	memcpy@s,w
  4618     1D1E  0084               	movwf	4
  4619     1D1F  1783               	bsf	3,7	;select IRP bank2
  4620     1D20  0800               	movf	0,w
  4621     1D21  00F6               	movwf	memcpy@tmp
  4622     1D22                     l2930:
  4623     1D22  3001               	movlw	1
  4624     1D23  07F8               	addwf	memcpy@s,f
  4625     1D24                     l2932:
  4626     1D24  0877               	movf	memcpy@d,w
  4627     1D25  0084               	movwf	4
  4628     1D26  0876               	movf	memcpy@tmp,w
  4629     1D27  0080               	movwf	0
  4630     1D28  3001               	movlw	1
  4631     1D29  07F7               	addwf	memcpy@d,f
  4632     1D2A                     l882:
  4633     1D2A  3001               	movlw	1
  4634     1D2B  02F4               	subwf	memcpy@n,f
  4635     1D2C  3000               	movlw	0
  4636     1D2D  1C03               	skipc
  4637     1D2E  03F5               	decf	memcpy@n+1,f
  4638     1D2F  02F5               	subwf	memcpy@n+1,f
  4639     1D30  0A74               	incf	memcpy@n,w
  4640     1D31  1D03               	skipz
  4641     1D32  2D37               	goto	u4241
  4642     1D33  0A75               	incf	memcpy@n+1,w
  4643     1D34  1D03               	btfss	3,2
  4644     1D35  2D37               	goto	u4241
  4645     1D36  2D38               	goto	u4240
  4646     1D37                     u4241:
  4647     1D37  2D1D               	goto	l2928
  4648     1D38                     u4240:
  4649     1D38                     l885:
  4650     1D38  0008               	return
  4651     1D39                     __end_of_memcpy:
  4652                           
  4653                           	psect	text23
  4654     1CCB                     __ptext23:	
  4655 ;; *************** function _labs *****************
  4656 ;; Defined at:
  4657 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  a               4    2[COMMON] long 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  4    2[COMMON] long 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4671 ;;      Params:         4       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0
  4674 ;;      Totals:         4       0       0       0       0
  4675 ;;Total ram usage:        4 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_efgtoa
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685     1CCB                     _labs:	
  4686                           ;psect for function _labs
  4687                           
  4688     1CCB                     l2888:	
  4689                           ;incstack = 0
  4690                           ; Regs used in _labs: [wreg+status,2+status,0]
  4691                           
  4692     1CCB  1BF5               	btfsc	labs@a+3,7
  4693     1CCC  2CCE               	goto	u4111
  4694     1CCD  2CCF               	goto	u4110
  4695     1CCE                     u4111:
  4696     1CCE  2CD0               	goto	l2892
  4697     1CCF                     u4110:
  4698     1CCF                     l2890:
  4699     1CCF  2CDF               	goto	l879
  4700     1CD0                     l2892:
  4701     1CD0  0972               	comf	labs@a,w
  4702     1CD1  00F2               	movwf	?_labs
  4703     1CD2  0973               	comf	labs@a+1,w
  4704     1CD3  00F3               	movwf	?_labs+1
  4705     1CD4  0974               	comf	labs@a+2,w
  4706     1CD5  00F4               	movwf	?_labs+2
  4707     1CD6  0975               	comf	labs@a+3,w
  4708     1CD7  00F5               	movwf	?_labs+3
  4709     1CD8  0AF2               	incf	?_labs,f
  4710     1CD9  1903               	skipnz
  4711     1CDA  0AF3               	incf	?_labs+1,f
  4712     1CDB  1903               	skipnz
  4713     1CDC  0AF4               	incf	?_labs+2,f
  4714     1CDD  1903               	skipnz
  4715     1CDE  0AF5               	incf	?_labs+3,f
  4716     1CDF                     l879:
  4717     1CDF  0008               	return
  4718     1CE0                     __end_of_labs:
  4719                           
  4720                           	psect	text24
  4721     16F1                     __ptext24:	
  4722 ;; *************** function _floorf *****************
  4723 ;; Defined at:
  4724 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  x               4   18[BANK0 ] float 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  u               4   34[BANK0 ] struct .
  4729 ;;  m               4   28[BANK0 ] unsigned long 
  4730 ;;  e               2   32[BANK0 ] int 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  4   18[BANK0 ] float 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, btemp+1
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4740 ;;      Params:         0       4       0       0       0
  4741 ;;      Locals:         0      10       0       0       0
  4742 ;;      Temps:          0       6       0       0       0
  4743 ;;      Totals:         0      20       0       0       0
  4744 ;;Total ram usage:       20 bytes
  4745 ;; Hardware stack levels used: 1
  4746 ;; Hardware stack levels required when called: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_efgtoa
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     16F1                     _floorf:	
  4755                           ;psect for function _floorf
  4756                           
  4757     16F1                     l2896:	
  4758                           ;incstack = 0
  4759                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  4760                           
  4761     16F1  1683               	bsf	3,5	;RP0=1, select bank3
  4762     16F2  1703               	bsf	3,6	;RP1=1, select bank3
  4763     16F3  0813               	movf	(floorf@F521+3)^(0+384),w
  4764     16F4  1283               	bcf	3,5	;RP0=0, select bank0
  4765     16F5  1303               	bcf	3,6	;RP1=0, select bank0
  4766     16F6  00C5               	movwf	floorf@u+3
  4767     16F7  1683               	bsf	3,5	;RP0=1, select bank3
  4768     16F8  1703               	bsf	3,6	;RP1=1, select bank3
  4769     16F9  0812               	movf	(floorf@F521+2)^(0+384),w
  4770     16FA  1283               	bcf	3,5	;RP0=0, select bank0
  4771     16FB  1303               	bcf	3,6	;RP1=0, select bank0
  4772     16FC  00C4               	movwf	floorf@u+2
  4773     16FD  1683               	bsf	3,5	;RP0=1, select bank3
  4774     16FE  1703               	bsf	3,6	;RP1=1, select bank3
  4775     16FF  0811               	movf	(floorf@F521+1)^(0+384),w
  4776     1700  1283               	bcf	3,5	;RP0=0, select bank0
  4777     1701  1303               	bcf	3,6	;RP1=0, select bank0
  4778     1702  00C3               	movwf	floorf@u+1
  4779     1703  1683               	bsf	3,5	;RP0=1, select bank3
  4780     1704  1703               	bsf	3,6	;RP1=1, select bank3
  4781     1705  0810               	movf	floorf@F521^(0+384),w
  4782     1706  1283               	bcf	3,5	;RP0=0, select bank0
  4783     1707  1303               	bcf	3,6	;RP1=0, select bank0
  4784     1708  00C2               	movwf	floorf@u
  4785     1709  0835               	movf	floorf@x+3,w
  4786     170A  00C5               	movwf	floorf@u+3
  4787     170B  0834               	movf	floorf@x+2,w
  4788     170C  00C4               	movwf	floorf@u+2
  4789     170D  0833               	movf	floorf@x+1,w
  4790     170E  00C3               	movwf	floorf@u+1
  4791     170F  0832               	movf	floorf@x,w
  4792     1710  00C2               	movwf	floorf@u
  4793     1711                     l2898:
  4794     1711  0842               	movf	floorf@u,w
  4795     1712  00B6               	movwf	??_floorf
  4796     1713  0843               	movf	floorf@u+1,w
  4797     1714  00B7               	movwf	??_floorf+1
  4798     1715  0844               	movf	floorf@u+2,w
  4799     1716  00B8               	movwf	??_floorf+2
  4800     1717  0845               	movf	floorf@u+3,w
  4801     1718  00B9               	movwf	??_floorf+3
  4802     1719  3017               	movlw	23
  4803     171A                     u4125:
  4804     171A  1003               	clrc
  4805     171B  0CB9               	rrf	??_floorf+3,f
  4806     171C  0CB8               	rrf	??_floorf+2,f
  4807     171D  0CB7               	rrf	??_floorf+1,f
  4808     171E  0CB6               	rrf	??_floorf,f
  4809     171F                     u4120:
  4810     171F  3EFF               	addlw	-1
  4811     1720  1D03               	skipz
  4812     1721  2F1A               	goto	u4125
  4813     1722  30FF               	movlw	255
  4814     1723  0536               	andwf	??_floorf,w
  4815     1724  00BA               	movwf	??_floorf+4
  4816     1725  3000               	movlw	0
  4817     1726  0537               	andwf	??_floorf+1,w
  4818     1727  00BB               	movwf	??_floorf+5
  4819     1728  083A               	movf	??_floorf+4,w
  4820     1729  3E81               	addlw	129
  4821     172A  00C0               	movwf	floorf@e
  4822     172B  083B               	movf	??_floorf+5,w
  4823     172C  1803               	skipnc
  4824     172D  3E01               	addlw	1
  4825     172E  3EFF               	addlw	255
  4826     172F  00C1               	movwf	floorf@e+1
  4827     1730                     l2900:
  4828     1730  0841               	movf	floorf@e+1,w
  4829     1731  3A80               	xorlw	128
  4830     1732  00FF               	movwf	btemp+1
  4831     1733  3080               	movlw	128
  4832     1734  027F               	subwf	btemp+1,w
  4833     1735  1D03               	skipz
  4834     1736  2F39               	goto	u4135
  4835     1737  3017               	movlw	23
  4836     1738  0240               	subwf	floorf@e,w
  4837     1739                     u4135:
  4838     1739  1C03               	skipc
  4839     173A  2F3C               	goto	u4131
  4840     173B  2F3D               	goto	u4130
  4841     173C                     u4131:
  4842     173C  2F3E               	goto	l864
  4843     173D                     u4130:
  4844     173D                     l2902:
  4845     173D  2FFF               	goto	l865
  4846     173E                     l864:
  4847     173E  1283               	bcf	3,5	;RP0=0, select bank0
  4848     173F  1303               	bcf	3,6	;RP1=0, select bank0
  4849     1740  1BC1               	btfsc	floorf@e+1,7
  4850     1741  2F43               	goto	u4141
  4851     1742  2F44               	goto	u4140
  4852     1743                     u4141:
  4853     1743  2FB4               	goto	l2916
  4854     1744                     u4140:
  4855     1744                     l2904:
  4856     1744  0A40               	incf	floorf@e,w
  4857     1745  00FF               	movwf	btemp+1
  4858     1746  30FF               	movlw	255
  4859     1747  00B6               	movwf	??_floorf
  4860     1748  30FF               	movlw	255
  4861     1749  00B7               	movwf	??_floorf+1
  4862     174A  307F               	movlw	127
  4863     174B  00B8               	movwf	??_floorf+2
  4864     174C  3000               	movlw	0
  4865     174D  00B9               	movwf	??_floorf+3
  4866     174E  2F54               	goto	u4150
  4867     174F                     u4155:
  4868     174F  0D39               	rlf	??_floorf+3,w
  4869     1750  0CB9               	rrf	??_floorf+3,f
  4870     1751  0CB8               	rrf	??_floorf+2,f
  4871     1752  0CB7               	rrf	??_floorf+1,f
  4872     1753  0CB6               	rrf	??_floorf,f
  4873     1754                     u4150:
  4874     1754  0BFF               	decfsz	btemp+1,f
  4875     1755  2F4F               	goto	u4155
  4876     1756  0839               	movf	??_floorf+3,w
  4877     1757  00BF               	movwf	floorf@m+3
  4878     1758  0838               	movf	??_floorf+2,w
  4879     1759  00BE               	movwf	floorf@m+2
  4880     175A  0837               	movf	??_floorf+1,w
  4881     175B  00BD               	movwf	floorf@m+1
  4882     175C  0836               	movf	??_floorf,w
  4883     175D  00BC               	movwf	floorf@m
  4884     175E                     l2906:
  4885     175E  083C               	movf	floorf@m,w
  4886     175F  0542               	andwf	floorf@u,w
  4887     1760  00B6               	movwf	??_floorf
  4888     1761  083D               	movf	floorf@m+1,w
  4889     1762  0543               	andwf	floorf@u+1,w
  4890     1763  00B7               	movwf	??_floorf+1
  4891     1764  083E               	movf	floorf@m+2,w
  4892     1765  0544               	andwf	floorf@u+2,w
  4893     1766  00B8               	movwf	??_floorf+2
  4894     1767  083F               	movf	floorf@m+3,w
  4895     1768  0545               	andwf	floorf@u+3,w
  4896     1769  00B9               	movwf	??_floorf+3
  4897     176A  0839               	movf	??_floorf+3,w
  4898     176B  0438               	iorwf	??_floorf+2,w
  4899     176C  0437               	iorwf	??_floorf+1,w
  4900     176D  0436               	iorwf	??_floorf,w
  4901     176E  1D03               	skipz
  4902     176F  2F71               	goto	u4161
  4903     1770  2F72               	goto	u4160
  4904     1771                     u4161:
  4905     1771  2F73               	goto	l2910
  4906     1772                     u4160:
  4907     1772  2F3D               	goto	l2902
  4908     1773                     l2910:
  4909     1773  0842               	movf	floorf@u,w
  4910     1774  00B6               	movwf	??_floorf
  4911     1775  0843               	movf	floorf@u+1,w
  4912     1776  00B7               	movwf	??_floorf+1
  4913     1777  0844               	movf	floorf@u+2,w
  4914     1778  00B8               	movwf	??_floorf+2
  4915     1779  0845               	movf	floorf@u+3,w
  4916     177A  00B9               	movwf	??_floorf+3
  4917     177B  301F               	movlw	31
  4918     177C                     u4175:
  4919     177C  1003               	clrc
  4920     177D  0CB9               	rrf	??_floorf+3,f
  4921     177E  0CB8               	rrf	??_floorf+2,f
  4922     177F  0CB7               	rrf	??_floorf+1,f
  4923     1780  0CB6               	rrf	??_floorf,f
  4924     1781                     u4170:
  4925     1781  3EFF               	addlw	-1
  4926     1782  1D03               	skipz
  4927     1783  2F7C               	goto	u4175
  4928     1784  0839               	movf	??_floorf+3,w
  4929     1785  0438               	iorwf	??_floorf+2,w
  4930     1786  0437               	iorwf	??_floorf+1,w
  4931     1787  0436               	iorwf	??_floorf,w
  4932     1788  1903               	skipnz
  4933     1789  2F8B               	goto	u4181
  4934     178A  2F8C               	goto	u4180
  4935     178B                     u4181:
  4936     178B  2FA3               	goto	l2914
  4937     178C                     u4180:
  4938     178C                     l2912:
  4939     178C  083C               	movf	floorf@m,w
  4940     178D  07C2               	addwf	floorf@u,f
  4941     178E  083D               	movf	floorf@m+1,w
  4942     178F  1103               	clrz
  4943     1790  1803               	skipnc
  4944     1791  3E01               	addlw	1
  4945     1792  1903               	skipnz
  4946     1793  2F95               	goto	u4191
  4947     1794  07C3               	addwf	floorf@u+1,f
  4948     1795                     u4191:
  4949     1795  083E               	movf	floorf@m+2,w
  4950     1796  1103               	clrz
  4951     1797  1803               	skipnc
  4952     1798  3E01               	addlw	1
  4953     1799  1903               	skipnz
  4954     179A  2F9C               	goto	u4192
  4955     179B  07C4               	addwf	floorf@u+2,f
  4956     179C                     u4192:
  4957     179C  083F               	movf	floorf@m+3,w
  4958     179D  1103               	clrz
  4959     179E  1803               	skipnc
  4960     179F  3E01               	addlw	1
  4961     17A0  1903               	skipnz
  4962     17A1  2FA3               	goto	u4193
  4963     17A2  07C5               	addwf	floorf@u+3,f
  4964     17A3                     u4193:
  4965     17A3                     l2914:
  4966     17A3  093C               	comf	floorf@m,w
  4967     17A4  00B6               	movwf	??_floorf
  4968     17A5  093D               	comf	floorf@m+1,w
  4969     17A6  00B7               	movwf	??_floorf+1
  4970     17A7  093E               	comf	floorf@m+2,w
  4971     17A8  00B8               	movwf	??_floorf+2
  4972     17A9  093F               	comf	floorf@m+3,w
  4973     17AA  00B9               	movwf	??_floorf+3
  4974     17AB  0836               	movf	??_floorf,w
  4975     17AC  05C2               	andwf	floorf@u,f
  4976     17AD  0837               	movf	??_floorf+1,w
  4977     17AE  05C3               	andwf	floorf@u+1,f
  4978     17AF  0838               	movf	??_floorf+2,w
  4979     17B0  05C4               	andwf	floorf@u+2,f
  4980     17B1  0839               	movf	??_floorf+3,w
  4981     17B2  05C5               	andwf	floorf@u+3,f
  4982     17B3  2FF7               	goto	l869
  4983     17B4                     l2916:
  4984     17B4  0842               	movf	floorf@u,w
  4985     17B5  00B6               	movwf	??_floorf
  4986     17B6  0843               	movf	floorf@u+1,w
  4987     17B7  00B7               	movwf	??_floorf+1
  4988     17B8  0844               	movf	floorf@u+2,w
  4989     17B9  00B8               	movwf	??_floorf+2
  4990     17BA  0845               	movf	floorf@u+3,w
  4991     17BB  00B9               	movwf	??_floorf+3
  4992     17BC  301F               	movlw	31
  4993     17BD                     u4205:
  4994     17BD  1003               	clrc
  4995     17BE  0CB9               	rrf	??_floorf+3,f
  4996     17BF  0CB8               	rrf	??_floorf+2,f
  4997     17C0  0CB7               	rrf	??_floorf+1,f
  4998     17C1  0CB6               	rrf	??_floorf,f
  4999     17C2                     u4200:
  5000     17C2  3EFF               	addlw	-1
  5001     17C3  1D03               	skipz
  5002     17C4  2FBD               	goto	u4205
  5003     17C5  0839               	movf	??_floorf+3,w
  5004     17C6  0438               	iorwf	??_floorf+2,w
  5005     17C7  0437               	iorwf	??_floorf+1,w
  5006     17C8  0436               	iorwf	??_floorf,w
  5007     17C9  1D03               	skipz
  5008     17CA  2FCC               	goto	u4211
  5009     17CB  2FCD               	goto	u4210
  5010     17CC                     u4211:
  5011     17CC  2FD6               	goto	l2920
  5012     17CD                     u4210:
  5013     17CD                     l2918:
  5014     17CD  3000               	movlw	0
  5015     17CE  00C5               	movwf	floorf@u+3
  5016     17CF  3000               	movlw	0
  5017     17D0  00C4               	movwf	floorf@u+2
  5018     17D1  3000               	movlw	0
  5019     17D2  00C3               	movwf	floorf@u+1
  5020     17D3  3000               	movlw	0
  5021     17D4  00C2               	movwf	floorf@u
  5022     17D5  2FF7               	goto	l869
  5023     17D6                     l2920:
  5024     17D6  0842               	movf	floorf@u,w
  5025     17D7  00B6               	movwf	??_floorf
  5026     17D8  0843               	movf	floorf@u+1,w
  5027     17D9  00B7               	movwf	??_floorf+1
  5028     17DA  0844               	movf	floorf@u+2,w
  5029     17DB  00B8               	movwf	??_floorf+2
  5030     17DC  0845               	movf	floorf@u+3,w
  5031     17DD  00B9               	movwf	??_floorf+3
  5032     17DE  3001               	movlw	1
  5033     17DF                     u4225:
  5034     17DF  1003               	clrc
  5035     17E0  0DB6               	rlf	??_floorf,f
  5036     17E1  0DB7               	rlf	??_floorf+1,f
  5037     17E2  0DB8               	rlf	??_floorf+2,f
  5038     17E3  0DB9               	rlf	??_floorf+3,f
  5039     17E4                     u4220:
  5040     17E4  3EFF               	addlw	-1
  5041     17E5  1D03               	skipz
  5042     17E6  2FDF               	goto	u4225
  5043     17E7  0839               	movf	??_floorf+3,w
  5044     17E8  0438               	iorwf	??_floorf+2,w
  5045     17E9  0437               	iorwf	??_floorf+1,w
  5046     17EA  0436               	iorwf	??_floorf,w
  5047     17EB  1903               	skipnz
  5048     17EC  2FEE               	goto	u4231
  5049     17ED  2FEF               	goto	u4230
  5050     17EE                     u4231:
  5051     17EE  2FF7               	goto	l869
  5052     17EF                     u4230:
  5053     17EF                     l2922:
  5054     17EF  30BF               	movlw	191
  5055     17F0  00C5               	movwf	floorf@u+3
  5056     17F1  3080               	movlw	128
  5057     17F2  00C4               	movwf	floorf@u+2
  5058     17F3  3000               	movlw	0
  5059     17F4  00C3               	movwf	floorf@u+1
  5060     17F5  3000               	movlw	0
  5061     17F6  00C2               	movwf	floorf@u
  5062     17F7                     l869:
  5063     17F7  0845               	movf	floorf@u+3,w
  5064     17F8  00B5               	movwf	?_floorf+3
  5065     17F9  0844               	movf	floorf@u+2,w
  5066     17FA  00B4               	movwf	?_floorf+2
  5067     17FB  0843               	movf	floorf@u+1,w
  5068     17FC  00B3               	movwf	?_floorf+1
  5069     17FD  0842               	movf	floorf@u,w
  5070     17FE  00B2               	movwf	?_floorf
  5071     17FF                     l865:
  5072     17FF  0008               	return
  5073     1800                     __end_of_floorf:
  5074                           
  5075                           	psect	text25
  5076     0811                     __ptext25:	
  5077 ;; *************** function ___fpclassifyf *****************
  5078 ;; Defined at:
  5079 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  x               4    2[COMMON] float 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  u               4    8[BANK0 ] struct .
  5084 ;;  e               2    6[BANK0 ] int 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2    2[COMMON] int 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5094 ;;      Params:         4       0       0       0       0
  5095 ;;      Locals:         0       6       0       0       0
  5096 ;;      Temps:          0       6       0       0       0
  5097 ;;      Totals:         4      12       0       0       0
  5098 ;;Total ram usage:       16 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; Hardware stack levels required when called: 1
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_efgtoa
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108     0811                     ___fpclassifyf:	
  5109                           ;psect for function ___fpclassifyf
  5110                           
  5111     0811                     l3760:	
  5112                           ;incstack = 0
  5113                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  5114                           
  5115     0811  1683               	bsf	3,5	;RP0=1, select bank3
  5116     0812  1703               	bsf	3,6	;RP1=1, select bank3
  5117     0813  0817               	movf	(___fpclassifyf@F465+3)^(0+384),w
  5118     0814  1283               	bcf	3,5	;RP0=0, select bank0
  5119     0815  1303               	bcf	3,6	;RP1=0, select bank0
  5120     0816  00AB               	movwf	___fpclassifyf@u+3
  5121     0817  1683               	bsf	3,5	;RP0=1, select bank3
  5122     0818  1703               	bsf	3,6	;RP1=1, select bank3
  5123     0819  0816               	movf	(___fpclassifyf@F465+2)^(0+384),w
  5124     081A  1283               	bcf	3,5	;RP0=0, select bank0
  5125     081B  1303               	bcf	3,6	;RP1=0, select bank0
  5126     081C  00AA               	movwf	___fpclassifyf@u+2
  5127     081D  1683               	bsf	3,5	;RP0=1, select bank3
  5128     081E  1703               	bsf	3,6	;RP1=1, select bank3
  5129     081F  0815               	movf	(___fpclassifyf@F465+1)^(0+384),w
  5130     0820  1283               	bcf	3,5	;RP0=0, select bank0
  5131     0821  1303               	bcf	3,6	;RP1=0, select bank0
  5132     0822  00A9               	movwf	___fpclassifyf@u+1
  5133     0823  1683               	bsf	3,5	;RP0=1, select bank3
  5134     0824  1703               	bsf	3,6	;RP1=1, select bank3
  5135     0825  0814               	movf	___fpclassifyf@F465^(0+384),w
  5136     0826  1283               	bcf	3,5	;RP0=0, select bank0
  5137     0827  1303               	bcf	3,6	;RP1=0, select bank0
  5138     0828  00A8               	movwf	___fpclassifyf@u
  5139     0829  0875               	movf	___fpclassifyf@x+3,w
  5140     082A  00AB               	movwf	___fpclassifyf@u+3
  5141     082B  0874               	movf	___fpclassifyf@x+2,w
  5142     082C  00AA               	movwf	___fpclassifyf@u+2
  5143     082D  0873               	movf	___fpclassifyf@x+1,w
  5144     082E  00A9               	movwf	___fpclassifyf@u+1
  5145     082F  0872               	movf	___fpclassifyf@x,w
  5146     0830  00A8               	movwf	___fpclassifyf@u
  5147     0831                     l3762:
  5148     0831  0828               	movf	___fpclassifyf@u,w
  5149     0832  00A0               	movwf	??___fpclassifyf
  5150     0833  0829               	movf	___fpclassifyf@u+1,w
  5151     0834  00A1               	movwf	??___fpclassifyf+1
  5152     0835  082A               	movf	___fpclassifyf@u+2,w
  5153     0836  00A2               	movwf	??___fpclassifyf+2
  5154     0837  082B               	movf	___fpclassifyf@u+3,w
  5155     0838  00A3               	movwf	??___fpclassifyf+3
  5156     0839  3017               	movlw	23
  5157     083A                     u5585:
  5158     083A  1003               	clrc
  5159     083B  0CA3               	rrf	??___fpclassifyf+3,f
  5160     083C  0CA2               	rrf	??___fpclassifyf+2,f
  5161     083D  0CA1               	rrf	??___fpclassifyf+1,f
  5162     083E  0CA0               	rrf	??___fpclassifyf,f
  5163     083F                     u5580:
  5164     083F  3EFF               	addlw	-1
  5165     0840  1D03               	skipz
  5166     0841  283A               	goto	u5585
  5167     0842  30FF               	movlw	255
  5168     0843  0520               	andwf	??___fpclassifyf,w
  5169     0844  00A6               	movwf	___fpclassifyf@e
  5170     0845  3000               	movlw	0
  5171     0846  0521               	andwf	??___fpclassifyf+1,w
  5172     0847  00A7               	movwf	___fpclassifyf@e+1
  5173     0848                     l3764:
  5174     0848  0826               	movf	___fpclassifyf@e,w
  5175     0849  0427               	iorwf	___fpclassifyf@e+1,w
  5176     084A  1D03               	btfss	3,2
  5177     084B  284D               	goto	u5591
  5178     084C  284E               	goto	u5590
  5179     084D                     u5591:
  5180     084D  2871               	goto	l3774
  5181     084E                     u5590:
  5182     084E                     l3766:
  5183     084E  0828               	movf	___fpclassifyf@u,w
  5184     084F  00A0               	movwf	??___fpclassifyf
  5185     0850  0829               	movf	___fpclassifyf@u+1,w
  5186     0851  00A1               	movwf	??___fpclassifyf+1
  5187     0852  082A               	movf	___fpclassifyf@u+2,w
  5188     0853  00A2               	movwf	??___fpclassifyf+2
  5189     0854  082B               	movf	___fpclassifyf@u+3,w
  5190     0855  00A3               	movwf	??___fpclassifyf+3
  5191     0856  3001               	movlw	1
  5192     0857                     u5605:
  5193     0857  1003               	clrc
  5194     0858  0DA0               	rlf	??___fpclassifyf,f
  5195     0859  0DA1               	rlf	??___fpclassifyf+1,f
  5196     085A  0DA2               	rlf	??___fpclassifyf+2,f
  5197     085B  0DA3               	rlf	??___fpclassifyf+3,f
  5198     085C                     u5600:
  5199     085C  3EFF               	addlw	-1
  5200     085D  1D03               	skipz
  5201     085E  2857               	goto	u5605
  5202     085F  0823               	movf	??___fpclassifyf+3,w
  5203     0860  0422               	iorwf	??___fpclassifyf+2,w
  5204     0861  0421               	iorwf	??___fpclassifyf+1,w
  5205     0862  0420               	iorwf	??___fpclassifyf,w
  5206     0863  1D03               	skipz
  5207     0864  2866               	goto	u5611
  5208     0865  2867               	goto	u5610
  5209     0866                     u5611:
  5210     0866  286C               	goto	l3770
  5211     0867                     u5610:
  5212     0867                     l3768:
  5213     0867  3002               	movlw	2
  5214     0868  00F2               	movwf	?___fpclassifyf
  5215     0869  3000               	movlw	0
  5216     086A  00F3               	movwf	?___fpclassifyf+1
  5217     086B  289D               	goto	l858
  5218     086C                     l3770:
  5219     086C  3003               	movlw	3
  5220     086D  00F2               	movwf	?___fpclassifyf
  5221     086E  3000               	movlw	0
  5222     086F  00F3               	movwf	?___fpclassifyf+1
  5223     0870  289D               	goto	l858
  5224     0871                     l3774:
  5225     0871  0A26               	incf	___fpclassifyf@e,w
  5226     0872  0427               	iorwf	___fpclassifyf@e+1,w
  5227     0873  1D03               	btfss	3,2
  5228     0874  2876               	goto	u5621
  5229     0875  2877               	goto	u5620
  5230     0876                     u5621:
  5231     0876  2899               	goto	l3780
  5232     0877                     u5620:
  5233     0877                     l3776:
  5234     0877  0828               	movf	___fpclassifyf@u,w
  5235     0878  00A0               	movwf	??___fpclassifyf
  5236     0879  0829               	movf	___fpclassifyf@u+1,w
  5237     087A  00A1               	movwf	??___fpclassifyf+1
  5238     087B  082A               	movf	___fpclassifyf@u+2,w
  5239     087C  00A2               	movwf	??___fpclassifyf+2
  5240     087D  082B               	movf	___fpclassifyf@u+3,w
  5241     087E  00A3               	movwf	??___fpclassifyf+3
  5242     087F  3009               	movlw	9
  5243     0880                     u5635:
  5244     0880  1003               	clrc
  5245     0881  0DA0               	rlf	??___fpclassifyf,f
  5246     0882  0DA1               	rlf	??___fpclassifyf+1,f
  5247     0883  0DA2               	rlf	??___fpclassifyf+2,f
  5248     0884  0DA3               	rlf	??___fpclassifyf+3,f
  5249     0885                     u5630:
  5250     0885  3EFF               	addlw	-1
  5251     0886  1D03               	skipz
  5252     0887  2880               	goto	u5635
  5253     0888  0823               	movf	??___fpclassifyf+3,w
  5254     0889  0422               	iorwf	??___fpclassifyf+2,w
  5255     088A  0421               	iorwf	??___fpclassifyf+1,w
  5256     088B  0420               	iorwf	??___fpclassifyf,w
  5257     088C  1903               	skipnz
  5258     088D  288F               	goto	u5641
  5259     088E  2891               	goto	u5640
  5260     088F                     u5641:
  5261     088F  3001               	movlw	1
  5262     0890  2892               	goto	u5650
  5263     0891                     u5640:
  5264     0891  3000               	movlw	0
  5265     0892                     u5650:
  5266     0892  00A4               	movwf	??___fpclassifyf+4
  5267     0893  01A5               	clrf	??___fpclassifyf+5
  5268     0894  0824               	movf	??___fpclassifyf+4,w
  5269     0895  00F2               	movwf	?___fpclassifyf
  5270     0896  0825               	movf	??___fpclassifyf+5,w
  5271     0897  00F3               	movwf	?___fpclassifyf+1
  5272     0898  289D               	goto	l858
  5273     0899                     l3780:
  5274     0899  3004               	movlw	4
  5275     089A  00F2               	movwf	?___fpclassifyf
  5276     089B  3000               	movlw	0
  5277     089C  00F3               	movwf	?___fpclassifyf+1
  5278     089D                     l858:
  5279     089D  0008               	return
  5280     089E                     __end_of___fpclassifyf:
  5281                           
  5282                           	psect	text26
  5283     1329                     __ptext26:	
  5284 ;; *************** function ___fltol *****************
  5285 ;; Defined at:
  5286 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  f1              4    2[COMMON] int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  exp1            1    1[BANK0 ] unsigned char 
  5291 ;;  sign1           1    0[BANK0 ] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  4    2[COMMON] long 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         4       0       0       0       0
  5302 ;;      Locals:         0       2       0       0       0
  5303 ;;      Temps:          4       0       0       0       0
  5304 ;;      Totals:         8       2       0       0       0
  5305 ;;Total ram usage:       10 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_efgtoa
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315     1329                     ___fltol:	
  5316                           ;psect for function ___fltol
  5317                           
  5318     1329                     l3570:	
  5319                           ;incstack = 0
  5320                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5321                           
  5322     1329  1003               	clrc
  5323     132A  0D74               	rlf	___fltol@f1+2,w
  5324     132B  0D75               	rlf	___fltol@f1+3,w
  5325     132C  1283               	bcf	3,5	;RP0=0, select bank0
  5326     132D  1303               	bcf	3,6	;RP1=0, select bank0
  5327     132E  00A1               	movwf	___fltol@exp1
  5328     132F  0821               	movf	___fltol@exp1,w
  5329     1330  1D03               	btfss	3,2
  5330     1331  2B33               	goto	u5091
  5331     1332  2B34               	goto	u5090
  5332     1333                     u5091:
  5333     1333  2B3D               	goto	l3576
  5334     1334                     u5090:
  5335     1334                     l3572:
  5336     1334  3000               	movlw	0
  5337     1335  00F5               	movwf	?___fltol+3
  5338     1336  3000               	movlw	0
  5339     1337  00F4               	movwf	?___fltol+2
  5340     1338  3000               	movlw	0
  5341     1339  00F3               	movwf	?___fltol+1
  5342     133A  3000               	movlw	0
  5343     133B  00F2               	movwf	?___fltol
  5344     133C  2B9E               	goto	l461
  5345     133D                     l3576:
  5346     133D  0872               	movf	___fltol@f1,w
  5347     133E  00F6               	movwf	??___fltol
  5348     133F  0873               	movf	___fltol@f1+1,w
  5349     1340  00F7               	movwf	??___fltol+1
  5350     1341  0874               	movf	___fltol@f1+2,w
  5351     1342  00F8               	movwf	??___fltol+2
  5352     1343  0875               	movf	___fltol@f1+3,w
  5353     1344  00F9               	movwf	??___fltol+3
  5354     1345  301F               	movlw	31
  5355     1346                     u5105:
  5356     1346  1003               	clrc
  5357     1347  0CF9               	rrf	??___fltol+3,f
  5358     1348  0CF8               	rrf	??___fltol+2,f
  5359     1349  0CF7               	rrf	??___fltol+1,f
  5360     134A  0CF6               	rrf	??___fltol,f
  5361     134B                     u5100:
  5362     134B  3EFF               	addlw	-1
  5363     134C  1D03               	skipz
  5364     134D  2B46               	goto	u5105
  5365     134E  0876               	movf	??___fltol,w
  5366     134F  00A0               	movwf	___fltol@sign1
  5367     1350                     l3578:
  5368     1350  17F4               	bsf	___fltol@f1+2,7
  5369     1351                     l3580:
  5370     1351  30FF               	movlw	255
  5371     1352  05F2               	andwf	___fltol@f1,f
  5372     1353  30FF               	movlw	255
  5373     1354  05F3               	andwf	___fltol@f1+1,f
  5374     1355  30FF               	movlw	255
  5375     1356  05F4               	andwf	___fltol@f1+2,f
  5376     1357  3000               	movlw	0
  5377     1358  05F5               	andwf	___fltol@f1+3,f
  5378     1359                     l3582:
  5379     1359  3096               	movlw	150
  5380     135A  02A1               	subwf	___fltol@exp1,f
  5381     135B                     l3584:
  5382     135B  1FA1               	btfss	___fltol@exp1,7
  5383     135C  2B5E               	goto	u5111
  5384     135D  2B5F               	goto	u5110
  5385     135E                     u5111:
  5386     135E  2B77               	goto	l3594
  5387     135F                     u5110:
  5388     135F                     l3586:
  5389     135F  0821               	movf	___fltol@exp1,w
  5390     1360  3A80               	xorlw	128
  5391     1361  3E97               	addlw	151
  5392     1362  1803               	skipnc
  5393     1363  2B65               	goto	u5121
  5394     1364  2B66               	goto	u5120
  5395     1365                     u5121:
  5396     1365  2B67               	goto	l3592
  5397     1366                     u5120:
  5398     1366  2B34               	goto	l3572
  5399     1367                     l3592:
  5400     1367  3001               	movlw	1
  5401     1368                     u5135:
  5402     1368  1003               	clrc
  5403     1369  0CF5               	rrf	___fltol@f1+3,f
  5404     136A  0CF4               	rrf	___fltol@f1+2,f
  5405     136B  0CF3               	rrf	___fltol@f1+1,f
  5406     136C  0CF2               	rrf	___fltol@f1,f
  5407     136D  3EFF               	addlw	-1
  5408     136E  1D03               	skipz
  5409     136F  2B68               	goto	u5135
  5410     1370  3001               	movlw	1
  5411     1371  07A1               	addwf	___fltol@exp1,f
  5412     1372  1D03               	btfss	3,2
  5413     1373  2B75               	goto	u5141
  5414     1374  2B76               	goto	u5140
  5415     1375                     u5141:
  5416     1375  2B67               	goto	l3592
  5417     1376                     u5140:
  5418     1376  2B8E               	goto	l3602
  5419     1377                     l3594:
  5420     1377  3020               	movlw	32
  5421     1378  0221               	subwf	___fltol@exp1,w
  5422     1379  1C03               	skipc
  5423     137A  2B7C               	goto	u5151
  5424     137B  2B7D               	goto	u5150
  5425     137C                     u5151:
  5426     137C  2B89               	goto	l468
  5427     137D                     u5150:
  5428     137D  2B34               	goto	l3572
  5429     137E                     l3600:
  5430     137E  3001               	movlw	1
  5431     137F  00F6               	movwf	??___fltol
  5432     1380                     u5165:
  5433     1380  1003               	clrc
  5434     1381  0DF2               	rlf	___fltol@f1,f
  5435     1382  0DF3               	rlf	___fltol@f1+1,f
  5436     1383  0DF4               	rlf	___fltol@f1+2,f
  5437     1384  0DF5               	rlf	___fltol@f1+3,f
  5438     1385  0BF6               	decfsz	??___fltol,f
  5439     1386  2B80               	goto	u5165
  5440     1387  3001               	movlw	1
  5441     1388  02A1               	subwf	___fltol@exp1,f
  5442     1389                     l468:
  5443     1389  0821               	movf	___fltol@exp1,w
  5444     138A  1D03               	btfss	3,2
  5445     138B  2B8D               	goto	u5171
  5446     138C  2B8E               	goto	u5170
  5447     138D                     u5171:
  5448     138D  2B7E               	goto	l3600
  5449     138E                     u5170:
  5450     138E                     l3602:
  5451     138E  0820               	movf	___fltol@sign1,w
  5452     138F  1903               	btfsc	3,2
  5453     1390  2B92               	goto	u5181
  5454     1391  2B93               	goto	u5180
  5455     1392                     u5181:
  5456     1392  2B9E               	goto	l471
  5457     1393                     u5180:
  5458     1393                     l3604:
  5459     1393  09F2               	comf	___fltol@f1,f
  5460     1394  09F3               	comf	___fltol@f1+1,f
  5461     1395  09F4               	comf	___fltol@f1+2,f
  5462     1396  09F5               	comf	___fltol@f1+3,f
  5463     1397  0AF2               	incf	___fltol@f1,f
  5464     1398  1903               	skipnz
  5465     1399  0AF3               	incf	___fltol@f1+1,f
  5466     139A  1903               	skipnz
  5467     139B  0AF4               	incf	___fltol@f1+2,f
  5468     139C  1903               	skipnz
  5469     139D  0AF5               	incf	___fltol@f1+3,f
  5470     139E                     l471:
  5471     139E                     l461:
  5472     139E  0008               	return
  5473     139F                     __end_of___fltol:
  5474                           
  5475                           	psect	text27
  5476     1D5B                     __ptext27:	
  5477 ;; *************** function ___flsub *****************
  5478 ;; Defined at:
  5479 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  a               4   32[BANK0 ] long 
  5482 ;;  b               4   36[BANK0 ] long 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  4   32[BANK0 ] long 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5494 ;;      Params:         0       8       0       0       0
  5495 ;;      Locals:         0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0
  5497 ;;      Totals:         0       8       0       0       0
  5498 ;;Total ram usage:        8 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		___fladd
  5503 ;; This function is called by:
  5504 ;;		_efgtoa
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508     1D5B                     ___flsub:	
  5509                           ;psect for function ___flsub
  5510                           
  5511     1D5B                     l2556:	
  5512                           ;incstack = 0
  5513                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5514                           
  5515     1D5B  3080               	movlw	128
  5516     1D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5517     1D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5518     1D5E  06C3               	xorwf	___flsub@a+3,f
  5519     1D5F                     l2558:
  5520     1D5F  0847               	movf	___flsub@b+3,w
  5521     1D60  00F5               	movwf	___fladd@b+3
  5522     1D61  0846               	movf	___flsub@b+2,w
  5523     1D62  00F4               	movwf	___fladd@b+2
  5524     1D63  0845               	movf	___flsub@b+1,w
  5525     1D64  00F3               	movwf	___fladd@b+1
  5526     1D65  0844               	movf	___flsub@b,w
  5527     1D66  00F2               	movwf	___fladd@b
  5528     1D67  0843               	movf	___flsub@a+3,w
  5529     1D68  00F9               	movwf	___fladd@a+3
  5530     1D69  0842               	movf	___flsub@a+2,w
  5531     1D6A  00F8               	movwf	___fladd@a+2
  5532     1D6B  0841               	movf	___flsub@a+1,w
  5533     1D6C  00F7               	movwf	___fladd@a+1
  5534     1D6D  0840               	movf	___flsub@a,w
  5535     1D6E  00F6               	movwf	___fladd@a
  5536     1D6F  120A  158A  226E  160A  158A  	fcall	___fladd
  5537     1D74  0875               	movf	?___fladd+3,w
  5538     1D75  1283               	bcf	3,5	;RP0=0, select bank0
  5539     1D76  1303               	bcf	3,6	;RP1=0, select bank0
  5540     1D77  00C3               	movwf	?___flsub+3
  5541     1D78  0874               	movf	?___fladd+2,w
  5542     1D79  00C2               	movwf	?___flsub+2
  5543     1D7A  0873               	movf	?___fladd+1,w
  5544     1D7B  00C1               	movwf	?___flsub+1
  5545     1D7C  0872               	movf	?___fladd,w
  5546     1D7D  00C0               	movwf	?___flsub
  5547     1D7E                     l614:
  5548     1D7E  0008               	return
  5549     1D7F                     __end_of___flsub:
  5550                           
  5551                           	psect	text28
  5552     0A6E                     __ptext28:	
  5553 ;; *************** function ___fladd *****************
  5554 ;; Defined at:
  5555 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  b               4    2[COMMON] long 
  5558 ;;  a               4    6[COMMON] long 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  grs             1   11[BANK0 ] unsigned char 
  5561 ;;  bexp            1   10[BANK0 ] unsigned char 
  5562 ;;  aexp            1    9[BANK0 ] unsigned char 
  5563 ;;  signs           1    8[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4    2[COMMON] unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, btemp+1
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         8       0       0       0       0
  5574 ;;      Locals:         0       4       0       0       0
  5575 ;;      Temps:          0       8       0       0       0
  5576 ;;      Totals:         8      12       0       0       0
  5577 ;;Total ram usage:       20 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 1
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		___flsub
  5584 ;;		_efgtoa
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588     0A6E                     ___fladd:	
  5589                           ;psect for function ___fladd
  5590                           
  5591     0A6E                     l2246:	
  5592                           ;incstack = 0
  5593                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5594                           
  5595     0A6E  0875               	movf	___fladd@b+3,w
  5596     0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  5597     0A70  1303               	bcf	3,6	;RP1=0, select bank0
  5598     0A71  00A8               	movwf	___fladd@signs
  5599     0A72                     l2248:
  5600     0A72  3080               	movlw	128
  5601     0A73  05A8               	andwf	___fladd@signs,f
  5602     0A74                     l2250:
  5603     0A74  0875               	movf	___fladd@b+3,w
  5604     0A75  00A0               	movwf	??___fladd
  5605     0A76  0720               	addwf	??___fladd,w
  5606     0A77  00AA               	movwf	___fladd@bexp
  5607     0A78                     l2252:
  5608     0A78  1FF4               	btfss	___fladd@b+2,7
  5609     0A79  2A7B               	goto	u2581
  5610     0A7A  2A7C               	goto	u2580
  5611     0A7B                     u2581:
  5612     0A7B  2A7D               	goto	l2256
  5613     0A7C                     u2580:
  5614     0A7C                     l2254:
  5615     0A7C  142A               	bsf	___fladd@bexp,0
  5616     0A7D                     l2256:
  5617     0A7D  082A               	movf	___fladd@bexp,w
  5618     0A7E  1903               	btfsc	3,2
  5619     0A7F  2A81               	goto	u2591
  5620     0A80  2A82               	goto	u2590
  5621     0A81                     u2591:
  5622     0A81  2A92               	goto	l2266
  5623     0A82                     u2590:
  5624     0A82                     l2258:
  5625     0A82  0A2A               	incf	___fladd@bexp,w
  5626     0A83  1D03               	btfss	3,2
  5627     0A84  2A86               	goto	u2601
  5628     0A85  2A87               	goto	u2600
  5629     0A86                     u2601:
  5630     0A86  2A8F               	goto	l2262
  5631     0A87                     u2600:
  5632     0A87                     l2260:
  5633     0A87  3000               	movlw	0
  5634     0A88  00F5               	movwf	___fladd@b+3
  5635     0A89  3000               	movlw	0
  5636     0A8A  00F4               	movwf	___fladd@b+2
  5637     0A8B  3000               	movlw	0
  5638     0A8C  00F3               	movwf	___fladd@b+1
  5639     0A8D  3000               	movlw	0
  5640     0A8E  00F2               	movwf	___fladd@b
  5641     0A8F                     l2262:
  5642     0A8F  17F4               	bsf	___fladd@b+2,7
  5643     0A90                     l2264:
  5644     0A90  01F5               	clrf	___fladd@b+3
  5645     0A91  2A9A               	goto	l563
  5646     0A92                     l2266:
  5647     0A92  3000               	movlw	0
  5648     0A93  00F5               	movwf	___fladd@b+3
  5649     0A94  3000               	movlw	0
  5650     0A95  00F4               	movwf	___fladd@b+2
  5651     0A96  3000               	movlw	0
  5652     0A97  00F3               	movwf	___fladd@b+1
  5653     0A98  3000               	movlw	0
  5654     0A99  00F2               	movwf	___fladd@b
  5655     0A9A                     l563:
  5656     0A9A  0879               	movf	___fladd@a+3,w
  5657     0A9B  00A9               	movwf	___fladd@aexp
  5658     0A9C                     l2268:
  5659     0A9C  3080               	movlw	128
  5660     0A9D  05A9               	andwf	___fladd@aexp,f
  5661     0A9E                     l2270:
  5662     0A9E  0829               	movf	___fladd@aexp,w
  5663     0A9F  0628               	xorwf	___fladd@signs,w
  5664     0AA0  1903               	skipnz
  5665     0AA1  2AA3               	goto	u2611
  5666     0AA2  2AA4               	goto	u2610
  5667     0AA3                     u2611:
  5668     0AA3  2AA5               	goto	l2274
  5669     0AA4                     u2610:
  5670     0AA4                     l2272:
  5671     0AA4  1728               	bsf	___fladd@signs,6
  5672     0AA5                     l2274:
  5673     0AA5  0879               	movf	___fladd@a+3,w
  5674     0AA6  00A0               	movwf	??___fladd
  5675     0AA7  0720               	addwf	??___fladd,w
  5676     0AA8  00A9               	movwf	___fladd@aexp
  5677     0AA9                     l2276:
  5678     0AA9  1FF8               	btfss	___fladd@a+2,7
  5679     0AAA  2AAC               	goto	u2621
  5680     0AAB  2AAD               	goto	u2620
  5681     0AAC                     u2621:
  5682     0AAC  2AAE               	goto	l2280
  5683     0AAD                     u2620:
  5684     0AAD                     l2278:
  5685     0AAD  1429               	bsf	___fladd@aexp,0
  5686     0AAE                     l2280:
  5687     0AAE  0829               	movf	___fladd@aexp,w
  5688     0AAF  1903               	btfsc	3,2
  5689     0AB0  2AB2               	goto	u2631
  5690     0AB1  2AB3               	goto	u2630
  5691     0AB2                     u2631:
  5692     0AB2  2AC3               	goto	l2290
  5693     0AB3                     u2630:
  5694     0AB3                     l2282:
  5695     0AB3  0A29               	incf	___fladd@aexp,w
  5696     0AB4  1D03               	btfss	3,2
  5697     0AB5  2AB7               	goto	u2641
  5698     0AB6  2AB8               	goto	u2640
  5699     0AB7                     u2641:
  5700     0AB7  2AC0               	goto	l2286
  5701     0AB8                     u2640:
  5702     0AB8                     l2284:
  5703     0AB8  3000               	movlw	0
  5704     0AB9  00F9               	movwf	___fladd@a+3
  5705     0ABA  3000               	movlw	0
  5706     0ABB  00F8               	movwf	___fladd@a+2
  5707     0ABC  3000               	movlw	0
  5708     0ABD  00F7               	movwf	___fladd@a+1
  5709     0ABE  3000               	movlw	0
  5710     0ABF  00F6               	movwf	___fladd@a
  5711     0AC0                     l2286:
  5712     0AC0  17F8               	bsf	___fladd@a+2,7
  5713     0AC1                     l2288:
  5714     0AC1  01F9               	clrf	___fladd@a+3
  5715     0AC2  2ACB               	goto	l568
  5716     0AC3                     l2290:
  5717     0AC3  3000               	movlw	0
  5718     0AC4  00F9               	movwf	___fladd@a+3
  5719     0AC5  3000               	movlw	0
  5720     0AC6  00F8               	movwf	___fladd@a+2
  5721     0AC7  3000               	movlw	0
  5722     0AC8  00F7               	movwf	___fladd@a+1
  5723     0AC9  3000               	movlw	0
  5724     0ACA  00F6               	movwf	___fladd@a
  5725     0ACB                     l568:
  5726     0ACB  082A               	movf	___fladd@bexp,w
  5727     0ACC  0229               	subwf	___fladd@aexp,w
  5728     0ACD  1803               	skipnc
  5729     0ACE  2AD0               	goto	u2651
  5730     0ACF  2AD1               	goto	u2650
  5731     0AD0                     u2651:
  5732     0AD0  2AF5               	goto	l2326
  5733     0AD1                     u2650:
  5734     0AD1                     l2292:
  5735     0AD1  1F28               	btfss	___fladd@signs,6
  5736     0AD2  2AD4               	goto	u2661
  5737     0AD3  2AD5               	goto	u2660
  5738     0AD4                     u2661:
  5739     0AD4  2AD7               	goto	l2296
  5740     0AD5                     u2660:
  5741     0AD5                     l2294:
  5742     0AD5  3080               	movlw	128
  5743     0AD6  06A8               	xorwf	___fladd@signs,f
  5744     0AD7                     l2296:
  5745     0AD7  082A               	movf	___fladd@bexp,w
  5746     0AD8  00AB               	movwf	___fladd@grs
  5747     0AD9                     l2298:
  5748     0AD9  0829               	movf	___fladd@aexp,w
  5749     0ADA  00AA               	movwf	___fladd@bexp
  5750     0ADB                     l2300:
  5751     0ADB  082B               	movf	___fladd@grs,w
  5752     0ADC  00A9               	movwf	___fladd@aexp
  5753     0ADD                     l2302:
  5754     0ADD  0872               	movf	___fladd@b,w
  5755     0ADE  00AB               	movwf	___fladd@grs
  5756     0ADF                     l2304:
  5757     0ADF  0876               	movf	___fladd@a,w
  5758     0AE0  00F2               	movwf	___fladd@b
  5759     0AE1                     l2306:
  5760     0AE1  082B               	movf	___fladd@grs,w
  5761     0AE2  00F6               	movwf	___fladd@a
  5762     0AE3                     l2308:
  5763     0AE3  0873               	movf	___fladd@b+1,w
  5764     0AE4  00AB               	movwf	___fladd@grs
  5765     0AE5                     l2310:
  5766     0AE5  0877               	movf	___fladd@a+1,w
  5767     0AE6  00F3               	movwf	___fladd@b+1
  5768     0AE7                     l2312:
  5769     0AE7  082B               	movf	___fladd@grs,w
  5770     0AE8  00F7               	movwf	___fladd@a+1
  5771     0AE9                     l2314:
  5772     0AE9  0874               	movf	___fladd@b+2,w
  5773     0AEA  00AB               	movwf	___fladd@grs
  5774     0AEB                     l2316:
  5775     0AEB  0878               	movf	___fladd@a+2,w
  5776     0AEC  00F4               	movwf	___fladd@b+2
  5777     0AED                     l2318:
  5778     0AED  082B               	movf	___fladd@grs,w
  5779     0AEE  00F8               	movwf	___fladd@a+2
  5780     0AEF                     l2320:
  5781     0AEF  0875               	movf	___fladd@b+3,w
  5782     0AF0  00AB               	movwf	___fladd@grs
  5783     0AF1                     l2322:
  5784     0AF1  0879               	movf	___fladd@a+3,w
  5785     0AF2  00F5               	movwf	___fladd@b+3
  5786     0AF3                     l2324:
  5787     0AF3  082B               	movf	___fladd@grs,w
  5788     0AF4  00F9               	movwf	___fladd@a+3
  5789     0AF5                     l2326:
  5790     0AF5  01AB               	clrf	___fladd@grs
  5791     0AF6                     l2328:
  5792     0AF6  0829               	movf	___fladd@aexp,w
  5793     0AF7  00A0               	movwf	??___fladd
  5794     0AF8  01A1               	clrf	??___fladd+1
  5795     0AF9  0821               	movf	??___fladd+1,w
  5796     0AFA  00A3               	movwf	??___fladd+3
  5797     0AFB  082A               	movf	___fladd@bexp,w
  5798     0AFC  0220               	subwf	??___fladd,w
  5799     0AFD  00A2               	movwf	??___fladd+2
  5800     0AFE  1C03               	skipc
  5801     0AFF  03A3               	decf	??___fladd+3,f
  5802     0B00  0823               	movf	??___fladd+3,w
  5803     0B01  3A80               	xorlw	128
  5804     0B02  00FF               	movwf	btemp+1
  5805     0B03  3080               	movlw	128
  5806     0B04  027F               	subwf	btemp+1,w
  5807     0B05  1D03               	skipz
  5808     0B06  2B09               	goto	u2675
  5809     0B07  301A               	movlw	26
  5810     0B08  0222               	subwf	??___fladd+2,w
  5811     0B09                     u2675:
  5812     0B09  1C03               	skipc
  5813     0B0A  2B0C               	goto	u2671
  5814     0B0B  2B0D               	goto	u2670
  5815     0B0C                     u2671:
  5816     0B0C  2B42               	goto	l2344
  5817     0B0D                     u2670:
  5818     0B0D                     l2330:
  5819     0B0D  0875               	movf	___fladd@b+3,w
  5820     0B0E  0474               	iorwf	___fladd@b+2,w
  5821     0B0F  0473               	iorwf	___fladd@b+1,w
  5822     0B10  0472               	iorwf	___fladd@b,w
  5823     0B11  1D03               	skipz
  5824     0B12  2B14               	goto	u2681
  5825     0B13  2B16               	goto	u2680
  5826     0B14                     u2681:
  5827     0B14  3001               	movlw	1
  5828     0B15  2B17               	goto	u2690
  5829     0B16                     u2680:
  5830     0B16  3000               	movlw	0
  5831     0B17                     u2690:
  5832     0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5833     0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5834     0B19  00AB               	movwf	___fladd@grs
  5835     0B1A  3000               	movlw	0
  5836     0B1B  00F5               	movwf	___fladd@b+3
  5837     0B1C  3000               	movlw	0
  5838     0B1D  00F4               	movwf	___fladd@b+2
  5839     0B1E  3000               	movlw	0
  5840     0B1F  00F3               	movwf	___fladd@b+1
  5841     0B20  3000               	movlw	0
  5842     0B21  00F2               	movwf	___fladd@b
  5843     0B22  0829               	movf	___fladd@aexp,w
  5844     0B23  00AA               	movwf	___fladd@bexp
  5845     0B24  2B4A               	goto	l572
  5846     0B25                     l574:
  5847     0B25  1C2B               	btfss	___fladd@grs,0
  5848     0B26  2B28               	goto	u2701
  5849     0B27  2B29               	goto	u2700
  5850     0B28                     u2701:
  5851     0B28  2B30               	goto	l2334
  5852     0B29                     u2700:
  5853     0B29                     l2332:
  5854     0B29  082B               	movf	___fladd@grs,w
  5855     0B2A  00A0               	movwf	??___fladd
  5856     0B2B  1003               	clrc
  5857     0B2C  0C20               	rrf	??___fladd,w
  5858     0B2D  3801               	iorlw	1
  5859     0B2E  00AB               	movwf	___fladd@grs
  5860     0B2F  2B32               	goto	l2336
  5861     0B30                     l2334:
  5862     0B30  1003               	clrc
  5863     0B31  0CAB               	rrf	___fladd@grs,f
  5864     0B32                     l2336:
  5865     0B32  1C72               	btfss	___fladd@b,0
  5866     0B33  2B35               	goto	u2711
  5867     0B34  2B36               	goto	u2710
  5868     0B35                     u2711:
  5869     0B35  2B37               	goto	l2340
  5870     0B36                     u2710:
  5871     0B36                     l2338:
  5872     0B36  17AB               	bsf	___fladd@grs,7
  5873     0B37                     l2340:
  5874     0B37  3001               	movlw	1
  5875     0B38  00A0               	movwf	??___fladd
  5876     0B39                     u2725:
  5877     0B39  0D75               	rlf	___fladd@b+3,w
  5878     0B3A  0CF5               	rrf	___fladd@b+3,f
  5879     0B3B  0CF4               	rrf	___fladd@b+2,f
  5880     0B3C  0CF3               	rrf	___fladd@b+1,f
  5881     0B3D  0CF2               	rrf	___fladd@b,f
  5882     0B3E  0BA0               	decfsz	??___fladd& (0+127),f
  5883     0B3F  2B39               	goto	u2725
  5884     0B40                     l2342:
  5885     0B40  3001               	movlw	1
  5886     0B41  07AA               	addwf	___fladd@bexp,f
  5887     0B42                     l2344:
  5888     0B42  1283               	bcf	3,5	;RP0=0, select bank0
  5889     0B43  1303               	bcf	3,6	;RP1=0, select bank0
  5890     0B44  0829               	movf	___fladd@aexp,w
  5891     0B45  022A               	subwf	___fladd@bexp,w
  5892     0B46  1C03               	skipc
  5893     0B47  2B49               	goto	u2731
  5894     0B48  2B4A               	goto	u2730
  5895     0B49                     u2731:
  5896     0B49  2B25               	goto	l574
  5897     0B4A                     u2730:
  5898     0B4A                     l572:
  5899     0B4A  1B28               	btfsc	___fladd@signs,6
  5900     0B4B  2B4D               	goto	u2741
  5901     0B4C  2B4E               	goto	u2740
  5902     0B4D                     u2741:
  5903     0B4D  2B95               	goto	l2370
  5904     0B4E                     u2740:
  5905     0B4E                     l2346:
  5906     0B4E  082A               	movf	___fladd@bexp,w
  5907     0B4F  1D03               	btfss	3,2
  5908     0B50  2B52               	goto	u2751
  5909     0B51  2B53               	goto	u2750
  5910     0B52                     u2751:
  5911     0B52  2B5C               	goto	l2352
  5912     0B53                     u2750:
  5913     0B53                     l2348:
  5914     0B53  3000               	movlw	0
  5915     0B54  00F5               	movwf	?___fladd+3
  5916     0B55  3000               	movlw	0
  5917     0B56  00F4               	movwf	?___fladd+2
  5918     0B57  3000               	movlw	0
  5919     0B58  00F3               	movwf	?___fladd+1
  5920     0B59  3000               	movlw	0
  5921     0B5A  00F2               	movwf	?___fladd
  5922     0B5B  2CBD               	goto	l581
  5923     0B5C                     l2352:
  5924     0B5C  0876               	movf	___fladd@a,w
  5925     0B5D  07F2               	addwf	___fladd@b,f
  5926     0B5E  0877               	movf	___fladd@a+1,w
  5927     0B5F  1103               	clrz
  5928     0B60  1803               	skipnc
  5929     0B61  3E01               	addlw	1
  5930     0B62  1903               	skipnz
  5931     0B63  2B65               	goto	u2761
  5932     0B64  07F3               	addwf	___fladd@b+1,f
  5933     0B65                     u2761:
  5934     0B65  0878               	movf	___fladd@a+2,w
  5935     0B66  1103               	clrz
  5936     0B67  1803               	skipnc
  5937     0B68  3E01               	addlw	1
  5938     0B69  1903               	skipnz
  5939     0B6A  2B6C               	goto	u2762
  5940     0B6B  07F4               	addwf	___fladd@b+2,f
  5941     0B6C                     u2762:
  5942     0B6C  0879               	movf	___fladd@a+3,w
  5943     0B6D  1103               	clrz
  5944     0B6E  1803               	skipnc
  5945     0B6F  3E01               	addlw	1
  5946     0B70  1903               	skipnz
  5947     0B71  2B73               	goto	u2763
  5948     0B72  07F5               	addwf	___fladd@b+3,f
  5949     0B73                     u2763:
  5950     0B73                     l2354:
  5951     0B73  1C75               	btfss	___fladd@b+3,0
  5952     0B74  2B76               	goto	u2771
  5953     0B75  2B77               	goto	u2770
  5954     0B76                     u2771:
  5955     0B76  2C49               	goto	l2406
  5956     0B77                     u2770:
  5957     0B77                     l2356:
  5958     0B77  1C2B               	btfss	___fladd@grs,0
  5959     0B78  2B7A               	goto	u2781
  5960     0B79  2B7B               	goto	u2780
  5961     0B7A                     u2781:
  5962     0B7A  2B82               	goto	l2360
  5963     0B7B                     u2780:
  5964     0B7B                     l2358:
  5965     0B7B  082B               	movf	___fladd@grs,w
  5966     0B7C  00A0               	movwf	??___fladd
  5967     0B7D  1003               	clrc
  5968     0B7E  0C20               	rrf	??___fladd,w
  5969     0B7F  3801               	iorlw	1
  5970     0B80  00AB               	movwf	___fladd@grs
  5971     0B81  2B84               	goto	l2362
  5972     0B82                     l2360:
  5973     0B82  1003               	clrc
  5974     0B83  0CAB               	rrf	___fladd@grs,f
  5975     0B84                     l2362:
  5976     0B84  1C72               	btfss	___fladd@b,0
  5977     0B85  2B87               	goto	u2791
  5978     0B86  2B88               	goto	u2790
  5979     0B87                     u2791:
  5980     0B87  2B89               	goto	l2366
  5981     0B88                     u2790:
  5982     0B88                     l2364:
  5983     0B88  17AB               	bsf	___fladd@grs,7
  5984     0B89                     l2366:
  5985     0B89  3001               	movlw	1
  5986     0B8A  00A0               	movwf	??___fladd
  5987     0B8B                     u2805:
  5988     0B8B  0D75               	rlf	___fladd@b+3,w
  5989     0B8C  0CF5               	rrf	___fladd@b+3,f
  5990     0B8D  0CF4               	rrf	___fladd@b+2,f
  5991     0B8E  0CF3               	rrf	___fladd@b+1,f
  5992     0B8F  0CF2               	rrf	___fladd@b,f
  5993     0B90  0BA0               	decfsz	??___fladd& (0+127),f
  5994     0B91  2B8B               	goto	u2805
  5995     0B92                     l2368:
  5996     0B92  3001               	movlw	1
  5997     0B93  07AA               	addwf	___fladd@bexp,f
  5998     0B94  2C49               	goto	l2406
  5999     0B95                     l2370:
  6000     0B95  0875               	movf	___fladd@b+3,w
  6001     0B96  3A80               	xorlw	128
  6002     0B97  00FF               	movwf	btemp+1
  6003     0B98  0879               	movf	___fladd@a+3,w
  6004     0B99  3A80               	xorlw	128
  6005     0B9A  027F               	subwf	btemp+1,w
  6006     0B9B  1D03               	skipz
  6007     0B9C  2BA7               	goto	u2813
  6008     0B9D  0878               	movf	___fladd@a+2,w
  6009     0B9E  0274               	subwf	___fladd@b+2,w
  6010     0B9F  1D03               	skipz
  6011     0BA0  2BA7               	goto	u2813
  6012     0BA1  0877               	movf	___fladd@a+1,w
  6013     0BA2  0273               	subwf	___fladd@b+1,w
  6014     0BA3  1D03               	skipz
  6015     0BA4  2BA7               	goto	u2813
  6016     0BA5  0876               	movf	___fladd@a,w
  6017     0BA6  0272               	subwf	___fladd@b,w
  6018     0BA7                     u2813:
  6019     0BA7  1803               	skipnc
  6020     0BA8  2BAA               	goto	u2811
  6021     0BA9  2BAB               	goto	u2810
  6022     0BAA                     u2811:
  6023     0BAA  2C02               	goto	l2382
  6024     0BAB                     u2810:
  6025     0BAB                     l2372:
  6026     0BAB  30FF               	movlw	255
  6027     0BAC  00A0               	movwf	??___fladd
  6028     0BAD  30FF               	movlw	255
  6029     0BAE  00A1               	movwf	??___fladd+1
  6030     0BAF  30FF               	movlw	255
  6031     0BB0  00A2               	movwf	??___fladd+2
  6032     0BB1  30FF               	movlw	255
  6033     0BB2  00A3               	movwf	??___fladd+3
  6034     0BB3  0876               	movf	___fladd@a,w
  6035     0BB4  00A4               	movwf	??___fladd+4
  6036     0BB5  0877               	movf	___fladd@a+1,w
  6037     0BB6  00A5               	movwf	??___fladd+5
  6038     0BB7  0878               	movf	___fladd@a+2,w
  6039     0BB8  00A6               	movwf	??___fladd+6
  6040     0BB9  0879               	movf	___fladd@a+3,w
  6041     0BBA  00A7               	movwf	??___fladd+7
  6042     0BBB  0872               	movf	___fladd@b,w
  6043     0BBC  02A4               	subwf	??___fladd+4,f
  6044     0BBD  0873               	movf	___fladd@b+1,w
  6045     0BBE  1C03               	skipc
  6046     0BBF  0F73               	incfsz	___fladd@b+1,w
  6047     0BC0  2BC2               	goto	u2821
  6048     0BC1  2BC3               	goto	u2822
  6049     0BC2                     u2821:
  6050     0BC2  02A5               	subwf	??___fladd+5,f
  6051     0BC3                     u2822:
  6052     0BC3  0874               	movf	___fladd@b+2,w
  6053     0BC4  1C03               	skipc
  6054     0BC5  0F74               	incfsz	___fladd@b+2,w
  6055     0BC6  2BC8               	goto	u2823
  6056     0BC7  2BC9               	goto	u2824
  6057     0BC8                     u2823:
  6058     0BC8  02A6               	subwf	??___fladd+6,f
  6059     0BC9                     u2824:
  6060     0BC9  0875               	movf	___fladd@b+3,w
  6061     0BCA  1C03               	skipc
  6062     0BCB  0F75               	incfsz	___fladd@b+3,w
  6063     0BCC  2BCE               	goto	u2825
  6064     0BCD  2BCF               	goto	u2826
  6065     0BCE                     u2825:
  6066     0BCE  02A7               	subwf	??___fladd+7,f
  6067     0BCF                     u2826:
  6068     0BCF  0824               	movf	??___fladd+4,w
  6069     0BD0  07A0               	addwf	??___fladd,f
  6070     0BD1  0825               	movf	??___fladd+5,w
  6071     0BD2  1803               	skipnc
  6072     0BD3  0F25               	incfsz	??___fladd+5,w
  6073     0BD4  2BD6               	goto	u2830
  6074     0BD5  2BD7               	goto	u2831
  6075     0BD6                     u2830:
  6076     0BD6  07A1               	addwf	??___fladd+1,f
  6077     0BD7                     u2831:
  6078     0BD7  0826               	movf	??___fladd+6,w
  6079     0BD8  1803               	skipnc
  6080     0BD9  0F26               	incfsz	??___fladd+6,w
  6081     0BDA  2BDC               	goto	u2832
  6082     0BDB  2BDD               	goto	u2833
  6083     0BDC                     u2832:
  6084     0BDC  07A2               	addwf	??___fladd+2,f
  6085     0BDD                     u2833:
  6086     0BDD  0827               	movf	??___fladd+7,w
  6087     0BDE  1803               	skipnc
  6088     0BDF  0A27               	incf	??___fladd+7,w
  6089     0BE0  07A3               	addwf	??___fladd+3,f
  6090     0BE1  0823               	movf	??___fladd+3,w
  6091     0BE2  00F5               	movwf	___fladd@b+3
  6092     0BE3  0822               	movf	??___fladd+2,w
  6093     0BE4  00F4               	movwf	___fladd@b+2
  6094     0BE5  0821               	movf	??___fladd+1,w
  6095     0BE6  00F3               	movwf	___fladd@b+1
  6096     0BE7  0820               	movf	??___fladd,w
  6097     0BE8  00F2               	movwf	___fladd@b
  6098     0BE9                     l2374:
  6099     0BE9  3080               	movlw	128
  6100     0BEA  06A8               	xorwf	___fladd@signs,f
  6101     0BEB                     l2376:
  6102     0BEB  032B               	decf	___fladd@grs,w
  6103     0BEC  3AFF               	xorlw	255
  6104     0BED  00AB               	movwf	___fladd@grs
  6105     0BEE                     l2378:
  6106     0BEE  082B               	movf	___fladd@grs,w
  6107     0BEF  1D03               	btfss	3,2
  6108     0BF0  2BF2               	goto	u2841
  6109     0BF1  2BF3               	goto	u2840
  6110     0BF2                     u2841:
  6111     0BF2  2C10               	goto	l589
  6112     0BF3                     u2840:
  6113     0BF3                     l2380:
  6114     0BF3  3001               	movlw	1
  6115     0BF4  07F2               	addwf	___fladd@b,f
  6116     0BF5  3000               	movlw	0
  6117     0BF6  1803               	skipnc
  6118     0BF7  3001               	movlw	1
  6119     0BF8  07F3               	addwf	___fladd@b+1,f
  6120     0BF9  3000               	movlw	0
  6121     0BFA  1803               	skipnc
  6122     0BFB  3001               	movlw	1
  6123     0BFC  07F4               	addwf	___fladd@b+2,f
  6124     0BFD  3000               	movlw	0
  6125     0BFE  1803               	skipnc
  6126     0BFF  3001               	movlw	1
  6127     0C00  07F5               	addwf	___fladd@b+3,f
  6128     0C01  2C10               	goto	l589
  6129     0C02                     l2382:
  6130     0C02  0876               	movf	___fladd@a,w
  6131     0C03  02F2               	subwf	___fladd@b,f
  6132     0C04  0877               	movf	___fladd@a+1,w
  6133     0C05  1C03               	skipc
  6134     0C06  0F77               	incfsz	___fladd@a+1,w
  6135     0C07  02F3               	subwf	___fladd@b+1,f
  6136     0C08  0878               	movf	___fladd@a+2,w
  6137     0C09  1C03               	skipc
  6138     0C0A  0F78               	incfsz	___fladd@a+2,w
  6139     0C0B  02F4               	subwf	___fladd@b+2,f
  6140     0C0C  0879               	movf	___fladd@a+3,w
  6141     0C0D  1C03               	skipc
  6142     0C0E  0F79               	incfsz	___fladd@a+3,w
  6143     0C0F  02F5               	subwf	___fladd@b+3,f
  6144     0C10                     l589:
  6145     0C10  0875               	movf	___fladd@b+3,w
  6146     0C11  0474               	iorwf	___fladd@b+2,w
  6147     0C12  0473               	iorwf	___fladd@b+1,w
  6148     0C13  0472               	iorwf	___fladd@b,w
  6149     0C14  1D03               	skipz
  6150     0C15  2C17               	goto	u2851
  6151     0C16  2C18               	goto	u2850
  6152     0C17                     u2851:
  6153     0C17  2C45               	goto	l2404
  6154     0C18                     u2850:
  6155     0C18                     l2384:
  6156     0C18  082B               	movf	___fladd@grs,w
  6157     0C19  1D03               	btfss	3,2
  6158     0C1A  2C1C               	goto	u2861
  6159     0C1B  2C1D               	goto	u2860
  6160     0C1C                     u2861:
  6161     0C1C  2C45               	goto	l2404
  6162     0C1D                     u2860:
  6163     0C1D                     l2386:
  6164     0C1D  3000               	movlw	0
  6165     0C1E  00F5               	movwf	?___fladd+3
  6166     0C1F  3000               	movlw	0
  6167     0C20  00F4               	movwf	?___fladd+2
  6168     0C21  3000               	movlw	0
  6169     0C22  00F3               	movwf	?___fladd+1
  6170     0C23  3000               	movlw	0
  6171     0C24  00F2               	movwf	?___fladd
  6172     0C25  2CBD               	goto	l581
  6173     0C26                     l2390:
  6174     0C26  3001               	movlw	1
  6175     0C27  00A0               	movwf	??___fladd
  6176     0C28                     u2875:
  6177     0C28  1003               	clrc
  6178     0C29  0DF2               	rlf	___fladd@b,f
  6179     0C2A  0DF3               	rlf	___fladd@b+1,f
  6180     0C2B  0DF4               	rlf	___fladd@b+2,f
  6181     0C2C  0DF5               	rlf	___fladd@b+3,f
  6182     0C2D  0BA0               	decfsz	??___fladd,f
  6183     0C2E  2C28               	goto	u2875
  6184     0C2F                     l2392:
  6185     0C2F  1FAB               	btfss	___fladd@grs,7
  6186     0C30  2C32               	goto	u2881
  6187     0C31  2C33               	goto	u2880
  6188     0C32                     u2881:
  6189     0C32  2C34               	goto	l593
  6190     0C33                     u2880:
  6191     0C33                     l2394:
  6192     0C33  1472               	bsf	___fladd@b,0
  6193     0C34                     l593:
  6194     0C34  1C2B               	btfss	___fladd@grs,0
  6195     0C35  2C37               	goto	u2891
  6196     0C36  2C38               	goto	u2890
  6197     0C37                     u2891:
  6198     0C37  2C3C               	goto	l2398
  6199     0C38                     u2890:
  6200     0C38                     l2396:
  6201     0C38  1403               	setc
  6202     0C39  0D2B               	rlf	___fladd@grs,w
  6203     0C3A  00AB               	movwf	___fladd@grs
  6204     0C3B  2C3E               	goto	l2400
  6205     0C3C                     l2398:
  6206     0C3C  1003               	clrc
  6207     0C3D  0DAB               	rlf	___fladd@grs,f
  6208     0C3E                     l2400:
  6209     0C3E  082A               	movf	___fladd@bexp,w
  6210     0C3F  1903               	btfsc	3,2
  6211     0C40  2C42               	goto	u2901
  6212     0C41  2C43               	goto	u2900
  6213     0C42                     u2901:
  6214     0C42  2C45               	goto	l2404
  6215     0C43                     u2900:
  6216     0C43                     l2402:
  6217     0C43  3001               	movlw	1
  6218     0C44  02AA               	subwf	___fladd@bexp,f
  6219     0C45                     l2404:
  6220     0C45  1FF4               	btfss	___fladd@b+2,7
  6221     0C46  2C48               	goto	u2911
  6222     0C47  2C49               	goto	u2910
  6223     0C48                     u2911:
  6224     0C48  2C26               	goto	l2390
  6225     0C49                     u2910:
  6226     0C49                     l2406:
  6227     0C49  01A9               	clrf	___fladd@aexp
  6228     0C4A                     l2408:
  6229     0C4A  1FAB               	btfss	___fladd@grs,7
  6230     0C4B  2C4D               	goto	u2921
  6231     0C4C  2C4E               	goto	u2920
  6232     0C4D                     u2921:
  6233     0C4D  2C5C               	goto	l2416
  6234     0C4E                     u2920:
  6235     0C4E                     l2410:
  6236     0C4E  082B               	movf	___fladd@grs,w
  6237     0C4F  397F               	andlw	127
  6238     0C50  1903               	btfsc	3,2
  6239     0C51  2C53               	goto	u2931
  6240     0C52  2C54               	goto	u2930
  6241     0C53                     u2931:
  6242     0C53  2C57               	goto	l599
  6243     0C54                     u2930:
  6244     0C54                     l2412:
  6245     0C54  3001               	movlw	1
  6246     0C55  00A9               	movwf	___fladd@aexp
  6247     0C56  2C5C               	goto	l2416
  6248     0C57                     l599:
  6249     0C57  1C72               	btfss	___fladd@b,0
  6250     0C58  2C5A               	goto	u2941
  6251     0C59  2C5B               	goto	u2940
  6252     0C5A                     u2941:
  6253     0C5A  2C5C               	goto	l2416
  6254     0C5B                     u2940:
  6255     0C5B  2C54               	goto	l2412
  6256     0C5C                     l2416:
  6257     0C5C  0829               	movf	___fladd@aexp,w
  6258     0C5D  1903               	btfsc	3,2
  6259     0C5E  2C60               	goto	u2951
  6260     0C5F  2C61               	goto	u2950
  6261     0C60                     u2951:
  6262     0C60  2C93               	goto	l602
  6263     0C61                     u2950:
  6264     0C61                     l2418:
  6265     0C61  3001               	movlw	1
  6266     0C62  07F2               	addwf	___fladd@b,f
  6267     0C63  3000               	movlw	0
  6268     0C64  1803               	skipnc
  6269     0C65  3001               	movlw	1
  6270     0C66  07F3               	addwf	___fladd@b+1,f
  6271     0C67  3000               	movlw	0
  6272     0C68  1803               	skipnc
  6273     0C69  3001               	movlw	1
  6274     0C6A  07F4               	addwf	___fladd@b+2,f
  6275     0C6B  3000               	movlw	0
  6276     0C6C  1803               	skipnc
  6277     0C6D  3001               	movlw	1
  6278     0C6E  07F5               	addwf	___fladd@b+3,f
  6279     0C6F                     l2420:
  6280     0C6F  1C75               	btfss	___fladd@b+3,0
  6281     0C70  2C72               	goto	u2961
  6282     0C71  2C73               	goto	u2960
  6283     0C72                     u2961:
  6284     0C72  2C93               	goto	l602
  6285     0C73                     u2960:
  6286     0C73                     l2422:
  6287     0C73  0872               	movf	___fladd@b,w
  6288     0C74  00A0               	movwf	??___fladd
  6289     0C75  0873               	movf	___fladd@b+1,w
  6290     0C76  00A1               	movwf	??___fladd+1
  6291     0C77  0874               	movf	___fladd@b+2,w
  6292     0C78  00A2               	movwf	??___fladd+2
  6293     0C79  0875               	movf	___fladd@b+3,w
  6294     0C7A  00A3               	movwf	??___fladd+3
  6295     0C7B  3001               	movlw	1
  6296     0C7C  00A4               	movwf	??___fladd+4
  6297     0C7D                     u2975:
  6298     0C7D  0D23               	rlf	??___fladd+3,w
  6299     0C7E  0CA3               	rrf	??___fladd+3,f
  6300     0C7F  0CA2               	rrf	??___fladd+2,f
  6301     0C80  0CA1               	rrf	??___fladd+1,f
  6302     0C81  0CA0               	rrf	??___fladd,f
  6303     0C82                     u2970:
  6304     0C82  0BA4               	decfsz	??___fladd+4,f
  6305     0C83  2C7D               	goto	u2975
  6306     0C84  0823               	movf	??___fladd+3,w
  6307     0C85  00F5               	movwf	___fladd@b+3
  6308     0C86  0822               	movf	??___fladd+2,w
  6309     0C87  00F4               	movwf	___fladd@b+2
  6310     0C88  0821               	movf	??___fladd+1,w
  6311     0C89  00F3               	movwf	___fladd@b+1
  6312     0C8A  0820               	movf	??___fladd,w
  6313     0C8B  00F2               	movwf	___fladd@b
  6314     0C8C  0A2A               	incf	___fladd@bexp,w
  6315     0C8D  1903               	btfsc	3,2
  6316     0C8E  2C90               	goto	u2981
  6317     0C8F  2C91               	goto	u2980
  6318     0C90                     u2981:
  6319     0C90  2C93               	goto	l602
  6320     0C91                     u2980:
  6321     0C91                     l2424:
  6322     0C91  3001               	movlw	1
  6323     0C92  07AA               	addwf	___fladd@bexp,f
  6324     0C93                     l602:
  6325     0C93  0A2A               	incf	___fladd@bexp,w
  6326     0C94  1903               	btfsc	3,2
  6327     0C95  2C97               	goto	u2991
  6328     0C96  2C98               	goto	u2990
  6329     0C97                     u2991:
  6330     0C97  2C9D               	goto	l2428
  6331     0C98                     u2990:
  6332     0C98                     l2426:
  6333     0C98  082A               	movf	___fladd@bexp,w
  6334     0C99  1D03               	btfss	3,2
  6335     0C9A  2C9C               	goto	u3001
  6336     0C9B  2C9D               	goto	u3000
  6337     0C9C                     u3001:
  6338     0C9C  2CAB               	goto	l2434
  6339     0C9D                     u3000:
  6340     0C9D                     l2428:
  6341     0C9D  3000               	movlw	0
  6342     0C9E  00F5               	movwf	___fladd@b+3
  6343     0C9F  3000               	movlw	0
  6344     0CA0  00F4               	movwf	___fladd@b+2
  6345     0CA1  3000               	movlw	0
  6346     0CA2  00F3               	movwf	___fladd@b+1
  6347     0CA3  3000               	movlw	0
  6348     0CA4  00F2               	movwf	___fladd@b
  6349     0CA5                     l2430:
  6350     0CA5  082A               	movf	___fladd@bexp,w
  6351     0CA6  1D03               	btfss	3,2
  6352     0CA7  2CA9               	goto	u3011
  6353     0CA8  2CAA               	goto	u3010
  6354     0CA9                     u3011:
  6355     0CA9  2CAB               	goto	l2434
  6356     0CAA                     u3010:
  6357     0CAA                     l2432:
  6358     0CAA  01A8               	clrf	___fladd@signs
  6359     0CAB                     l2434:
  6360     0CAB  1C2A               	btfss	___fladd@bexp,0
  6361     0CAC  2CAE               	goto	u3021
  6362     0CAD  2CAF               	goto	u3020
  6363     0CAE                     u3021:
  6364     0CAE  2CB1               	goto	l2438
  6365     0CAF                     u3020:
  6366     0CAF                     l2436:
  6367     0CAF  17F4               	bsf	___fladd@b+2,7
  6368     0CB0  2CB3               	goto	l610
  6369     0CB1                     l2438:
  6370     0CB1  307F               	movlw	127
  6371     0CB2  05F4               	andwf	___fladd@b+2,f
  6372     0CB3                     l610:
  6373     0CB3  082A               	movf	___fladd@bexp,w
  6374     0CB4  00A0               	movwf	??___fladd
  6375     0CB5  1003               	clrc
  6376     0CB6  0C20               	rrf	??___fladd,w
  6377     0CB7  00F5               	movwf	___fladd@b+3
  6378     0CB8                     l2440:
  6379     0CB8  1FA8               	btfss	___fladd@signs,7
  6380     0CB9  2CBB               	goto	u3031
  6381     0CBA  2CBC               	goto	u3030
  6382     0CBB                     u3031:
  6383     0CBB  2CBD               	goto	l611
  6384     0CBC                     u3030:
  6385     0CBC                     l2442:
  6386     0CBC  17F5               	bsf	___fladd@b+3,7
  6387     0CBD                     l611:
  6388     0CBD                     l581:
  6389     0CBD  0008               	return
  6390     0CBE                     __end_of___fladd:
  6391                           
  6392                           	psect	text29
  6393     1001                     __ptext29:	
  6394 ;; *************** function ___flneg *****************
  6395 ;; Defined at:
  6396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  f1              4    2[COMMON] unsigned char 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  4    2[COMMON] unsigned char 
  6403 ;; Registers used:
  6404 ;;		wreg
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6410 ;;      Params:         4       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0
  6413 ;;      Totals:         4       0       0       0       0
  6414 ;;Total ram usage:        4 bytes
  6415 ;; Hardware stack levels used: 1
  6416 ;; Hardware stack levels required when called: 1
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_efgtoa
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424     1001                     ___flneg:	
  6425                           ;psect for function ___flneg
  6426                           
  6427     1001                     l2512:	
  6428                           ;incstack = 0
  6429                           ; Regs used in ___flneg: [wreg]
  6430                           
  6431     1001  0875               	movf	___flneg@f1+3,w
  6432     1002  0474               	iorwf	___flneg@f1+2,w
  6433     1003  0473               	iorwf	___flneg@f1+1,w
  6434     1004  0472               	iorwf	___flneg@f1,w
  6435     1005  1903               	skipnz
  6436     1006  2808               	goto	u3221
  6437     1007  2809               	goto	u3220
  6438     1008                     u3221:
  6439     1008  280B               	goto	l2516
  6440     1009                     u3220:
  6441     1009                     l2514:
  6442     1009  3080               	movlw	128
  6443     100A  06F5               	xorwf	___flneg@f1+3,f
  6444     100B                     l2516:
  6445     100B                     l457:
  6446     100B  0008               	return
  6447     100C                     __end_of___flneg:
  6448                           
  6449                           	psect	text30
  6450     0CBE                     __ptext30:	
  6451 ;; *************** function ___flmul *****************
  6452 ;; Defined at:
  6453 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  b               4    6[BANK0 ] unsigned char 
  6456 ;;  a               4   10[BANK0 ] unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  prod            4   26[BANK0 ] struct .
  6459 ;;  grs             4   21[BANK0 ] unsigned long 
  6460 ;;  temp            2   30[BANK0 ] struct .
  6461 ;;  bexp            1   25[BANK0 ] unsigned char 
  6462 ;;  aexp            1   20[BANK0 ] unsigned char 
  6463 ;;  sign            1   19[BANK0 ] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  4    6[BANK0 ] unsigned char 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6473 ;;      Params:         0       8       0       0       0
  6474 ;;      Locals:         0      13       0       0       0
  6475 ;;      Temps:          0       5       0       0       0
  6476 ;;      Totals:         0      26       0       0       0
  6477 ;;Total ram usage:       26 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 2
  6480 ;; This function calls:
  6481 ;;		__Umul8_16
  6482 ;; This function is called by:
  6483 ;;		_trigger_1
  6484 ;;		_trigger_2
  6485 ;;		_trigger_3
  6486 ;;		_efgtoa
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490     0CBE                     ___flmul:	
  6491                           ;psect for function ___flmul
  6492                           
  6493     0CBE                     l3606:	
  6494                           ;incstack = 0
  6495                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6496                           
  6497     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  6498     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  6499     0CC0  0829               	movf	___flmul@b+3,w
  6500     0CC1  00B3               	movwf	___flmul@sign
  6501     0CC2                     l3608:
  6502     0CC2  3080               	movlw	128
  6503     0CC3  05B3               	andwf	___flmul@sign,f
  6504     0CC4                     l3610:
  6505     0CC4  0829               	movf	___flmul@b+3,w
  6506     0CC5  00AE               	movwf	??___flmul
  6507     0CC6  072E               	addwf	??___flmul,w
  6508     0CC7  00B9               	movwf	___flmul@bexp
  6509     0CC8                     l3612:
  6510     0CC8  1FA8               	btfss	___flmul@b+2,7
  6511     0CC9  2CCB               	goto	u5191
  6512     0CCA  2CCC               	goto	u5190
  6513     0CCB                     u5191:
  6514     0CCB  2CCD               	goto	l3616
  6515     0CCC                     u5190:
  6516     0CCC                     l3614:
  6517     0CCC  1439               	bsf	___flmul@bexp,0
  6518     0CCD                     l3616:
  6519     0CCD  0839               	movf	___flmul@bexp,w
  6520     0CCE  1903               	btfsc	3,2
  6521     0CCF  2CD1               	goto	u5201
  6522     0CD0  2CD2               	goto	u5200
  6523     0CD1                     u5201:
  6524     0CD1  2CE1               	goto	l3624
  6525     0CD2                     u5200:
  6526     0CD2                     l3618:
  6527     0CD2  0A39               	incf	___flmul@bexp,w
  6528     0CD3  1D03               	btfss	3,2
  6529     0CD4  2CD6               	goto	u5211
  6530     0CD5  2CD7               	goto	u5210
  6531     0CD6                     u5211:
  6532     0CD6  2CDF               	goto	l3622
  6533     0CD7                     u5210:
  6534     0CD7                     l3620:
  6535     0CD7  3000               	movlw	0
  6536     0CD8  00A9               	movwf	___flmul@b+3
  6537     0CD9  3000               	movlw	0
  6538     0CDA  00A8               	movwf	___flmul@b+2
  6539     0CDB  3000               	movlw	0
  6540     0CDC  00A7               	movwf	___flmul@b+1
  6541     0CDD  3000               	movlw	0
  6542     0CDE  00A6               	movwf	___flmul@b
  6543     0CDF                     l3622:
  6544     0CDF  17A8               	bsf	___flmul@b+2,7
  6545     0CE0  2CE9               	goto	l3626
  6546     0CE1                     l3624:
  6547     0CE1  3000               	movlw	0
  6548     0CE2  00A9               	movwf	___flmul@b+3
  6549     0CE3  3000               	movlw	0
  6550     0CE4  00A8               	movwf	___flmul@b+2
  6551     0CE5  3000               	movlw	0
  6552     0CE6  00A7               	movwf	___flmul@b+1
  6553     0CE7  3000               	movlw	0
  6554     0CE8  00A6               	movwf	___flmul@b
  6555     0CE9                     l3626:
  6556     0CE9  082D               	movf	___flmul@a+3,w
  6557     0CEA  3980               	andlw	128
  6558     0CEB  06B3               	xorwf	___flmul@sign,f
  6559     0CEC                     l3628:
  6560     0CEC  082D               	movf	___flmul@a+3,w
  6561     0CED  00AE               	movwf	??___flmul
  6562     0CEE  072E               	addwf	??___flmul,w
  6563     0CEF  00B4               	movwf	___flmul@aexp
  6564     0CF0                     l3630:
  6565     0CF0  1FAC               	btfss	___flmul@a+2,7
  6566     0CF1  2CF3               	goto	u5221
  6567     0CF2  2CF4               	goto	u5220
  6568     0CF3                     u5221:
  6569     0CF3  2CF5               	goto	l3634
  6570     0CF4                     u5220:
  6571     0CF4                     l3632:
  6572     0CF4  1434               	bsf	___flmul@aexp,0
  6573     0CF5                     l3634:
  6574     0CF5  0834               	movf	___flmul@aexp,w
  6575     0CF6  1903               	btfsc	3,2
  6576     0CF7  2CF9               	goto	u5231
  6577     0CF8  2CFA               	goto	u5230
  6578     0CF9                     u5231:
  6579     0CF9  2D09               	goto	l3642
  6580     0CFA                     u5230:
  6581     0CFA                     l3636:
  6582     0CFA  0A34               	incf	___flmul@aexp,w
  6583     0CFB  1D03               	btfss	3,2
  6584     0CFC  2CFE               	goto	u5241
  6585     0CFD  2CFF               	goto	u5240
  6586     0CFE                     u5241:
  6587     0CFE  2D07               	goto	l3640
  6588     0CFF                     u5240:
  6589     0CFF                     l3638:
  6590     0CFF  3000               	movlw	0
  6591     0D00  00AD               	movwf	___flmul@a+3
  6592     0D01  3000               	movlw	0
  6593     0D02  00AC               	movwf	___flmul@a+2
  6594     0D03  3000               	movlw	0
  6595     0D04  00AB               	movwf	___flmul@a+1
  6596     0D05  3000               	movlw	0
  6597     0D06  00AA               	movwf	___flmul@a
  6598     0D07                     l3640:
  6599     0D07  17AC               	bsf	___flmul@a+2,7
  6600     0D08  2D11               	goto	l3644
  6601     0D09                     l3642:
  6602     0D09  3000               	movlw	0
  6603     0D0A  00AD               	movwf	___flmul@a+3
  6604     0D0B  3000               	movlw	0
  6605     0D0C  00AC               	movwf	___flmul@a+2
  6606     0D0D  3000               	movlw	0
  6607     0D0E  00AB               	movwf	___flmul@a+1
  6608     0D0F  3000               	movlw	0
  6609     0D10  00AA               	movwf	___flmul@a
  6610     0D11                     l3644:
  6611     0D11  0834               	movf	___flmul@aexp,w
  6612     0D12  1903               	btfsc	3,2
  6613     0D13  2D15               	goto	u5251
  6614     0D14  2D16               	goto	u5250
  6615     0D15                     u5251:
  6616     0D15  2D1B               	goto	l3648
  6617     0D16                     u5250:
  6618     0D16                     l3646:
  6619     0D16  0839               	movf	___flmul@bexp,w
  6620     0D17  1D03               	btfss	3,2
  6621     0D18  2D1A               	goto	u5261
  6622     0D19  2D1B               	goto	u5260
  6623     0D1A                     u5261:
  6624     0D1A  2D24               	goto	l3652
  6625     0D1B                     u5260:
  6626     0D1B                     l3648:
  6627     0D1B  3000               	movlw	0
  6628     0D1C  00A9               	movwf	?___flmul+3
  6629     0D1D  3000               	movlw	0
  6630     0D1E  00A8               	movwf	?___flmul+2
  6631     0D1F  3000               	movlw	0
  6632     0D20  00A7               	movwf	?___flmul+1
  6633     0D21  3000               	movlw	0
  6634     0D22  00A6               	movwf	?___flmul
  6635     0D23  2FFF               	goto	l664
  6636     0D24                     l3652:
  6637     0D24  0826               	movf	___flmul@b,w
  6638     0D25  00F2               	movwf	__Umul8_16@multiplicand
  6639     0D26  082C               	movf	___flmul@a+2,w
  6640     0D27  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6641     0D2C  0873               	movf	?__Umul8_16+1,w
  6642     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  6643     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  6644     0D2F  00BF               	movwf	___flmul@temp+1
  6645     0D30  0872               	movf	?__Umul8_16,w
  6646     0D31  00BE               	movwf	___flmul@temp
  6647     0D32                     l3654:
  6648     0D32  083E               	movf	___flmul@temp,w
  6649     0D33  00AE               	movwf	??___flmul
  6650     0D34  01AF               	clrf	??___flmul+1
  6651     0D35  01B0               	clrf	??___flmul+2
  6652     0D36  01B1               	clrf	??___flmul+3
  6653     0D37  0831               	movf	??___flmul+3,w
  6654     0D38  00B8               	movwf	___flmul@grs+3
  6655     0D39  0830               	movf	??___flmul+2,w
  6656     0D3A  00B7               	movwf	___flmul@grs+2
  6657     0D3B  082F               	movf	??___flmul+1,w
  6658     0D3C  00B6               	movwf	___flmul@grs+1
  6659     0D3D  082E               	movf	??___flmul,w
  6660     0D3E  00B5               	movwf	___flmul@grs
  6661     0D3F                     l3656:
  6662     0D3F  083F               	movf	___flmul@temp+1,w
  6663     0D40  00AE               	movwf	??___flmul
  6664     0D41  01AF               	clrf	??___flmul+1
  6665     0D42  01B0               	clrf	??___flmul+2
  6666     0D43  01B1               	clrf	??___flmul+3
  6667     0D44  0831               	movf	??___flmul+3,w
  6668     0D45  00BD               	movwf	___flmul@prod+3
  6669     0D46  0830               	movf	??___flmul+2,w
  6670     0D47  00BC               	movwf	___flmul@prod+2
  6671     0D48  082F               	movf	??___flmul+1,w
  6672     0D49  00BB               	movwf	___flmul@prod+1
  6673     0D4A  082E               	movf	??___flmul,w
  6674     0D4B  00BA               	movwf	___flmul@prod
  6675     0D4C  0827               	movf	___flmul@b+1,w
  6676     0D4D  00F2               	movwf	__Umul8_16@multiplicand
  6677     0D4E  082B               	movf	___flmul@a+1,w
  6678     0D4F  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6679     0D54  0873               	movf	?__Umul8_16+1,w
  6680     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  6681     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  6682     0D57  00BF               	movwf	___flmul@temp+1
  6683     0D58  0872               	movf	?__Umul8_16,w
  6684     0D59  00BE               	movwf	___flmul@temp
  6685     0D5A                     l3658:
  6686     0D5A  083E               	movf	___flmul@temp,w
  6687     0D5B  00AE               	movwf	??___flmul
  6688     0D5C  01AF               	clrf	??___flmul+1
  6689     0D5D  01B0               	clrf	??___flmul+2
  6690     0D5E  01B1               	clrf	??___flmul+3
  6691     0D5F  082E               	movf	??___flmul,w
  6692     0D60  07B5               	addwf	___flmul@grs,f
  6693     0D61  082F               	movf	??___flmul+1,w
  6694     0D62  1103               	clrz
  6695     0D63  1803               	skipnc
  6696     0D64  3E01               	addlw	1
  6697     0D65  1903               	skipnz
  6698     0D66  2D68               	goto	u5271
  6699     0D67  07B6               	addwf	___flmul@grs+1,f
  6700     0D68                     u5271:
  6701     0D68  0830               	movf	??___flmul+2,w
  6702     0D69  1103               	clrz
  6703     0D6A  1803               	skipnc
  6704     0D6B  3E01               	addlw	1
  6705     0D6C  1903               	skipnz
  6706     0D6D  2D6F               	goto	u5272
  6707     0D6E  07B7               	addwf	___flmul@grs+2,f
  6708     0D6F                     u5272:
  6709     0D6F  0831               	movf	??___flmul+3,w
  6710     0D70  1103               	clrz
  6711     0D71  1803               	skipnc
  6712     0D72  3E01               	addlw	1
  6713     0D73  1903               	skipnz
  6714     0D74  2D76               	goto	u5273
  6715     0D75  07B8               	addwf	___flmul@grs+3,f
  6716     0D76                     u5273:
  6717     0D76                     l3660:
  6718     0D76  083F               	movf	___flmul@temp+1,w
  6719     0D77  00AE               	movwf	??___flmul
  6720     0D78  01AF               	clrf	??___flmul+1
  6721     0D79  01B0               	clrf	??___flmul+2
  6722     0D7A  01B1               	clrf	??___flmul+3
  6723     0D7B  082E               	movf	??___flmul,w
  6724     0D7C  07BA               	addwf	___flmul@prod,f
  6725     0D7D  082F               	movf	??___flmul+1,w
  6726     0D7E  1103               	clrz
  6727     0D7F  1803               	skipnc
  6728     0D80  3E01               	addlw	1
  6729     0D81  1903               	skipnz
  6730     0D82  2D84               	goto	u5281
  6731     0D83  07BB               	addwf	___flmul@prod+1,f
  6732     0D84                     u5281:
  6733     0D84  0830               	movf	??___flmul+2,w
  6734     0D85  1103               	clrz
  6735     0D86  1803               	skipnc
  6736     0D87  3E01               	addlw	1
  6737     0D88  1903               	skipnz
  6738     0D89  2D8B               	goto	u5282
  6739     0D8A  07BC               	addwf	___flmul@prod+2,f
  6740     0D8B                     u5282:
  6741     0D8B  0831               	movf	??___flmul+3,w
  6742     0D8C  1103               	clrz
  6743     0D8D  1803               	skipnc
  6744     0D8E  3E01               	addlw	1
  6745     0D8F  1903               	skipnz
  6746     0D90  2D92               	goto	u5283
  6747     0D91  07BD               	addwf	___flmul@prod+3,f
  6748     0D92                     u5283:
  6749     0D92  0828               	movf	___flmul@b+2,w
  6750     0D93  00F2               	movwf	__Umul8_16@multiplicand
  6751     0D94  082A               	movf	___flmul@a,w
  6752     0D95  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6753     0D9A  0873               	movf	?__Umul8_16+1,w
  6754     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  6755     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  6756     0D9D  00BF               	movwf	___flmul@temp+1
  6757     0D9E  0872               	movf	?__Umul8_16,w
  6758     0D9F  00BE               	movwf	___flmul@temp
  6759     0DA0                     l3662:
  6760     0DA0  083E               	movf	___flmul@temp,w
  6761     0DA1  00AE               	movwf	??___flmul
  6762     0DA2  01AF               	clrf	??___flmul+1
  6763     0DA3  01B0               	clrf	??___flmul+2
  6764     0DA4  01B1               	clrf	??___flmul+3
  6765     0DA5  082E               	movf	??___flmul,w
  6766     0DA6  07B5               	addwf	___flmul@grs,f
  6767     0DA7  082F               	movf	??___flmul+1,w
  6768     0DA8  1103               	clrz
  6769     0DA9  1803               	skipnc
  6770     0DAA  3E01               	addlw	1
  6771     0DAB  1903               	skipnz
  6772     0DAC  2DAE               	goto	u5291
  6773     0DAD  07B6               	addwf	___flmul@grs+1,f
  6774     0DAE                     u5291:
  6775     0DAE  0830               	movf	??___flmul+2,w
  6776     0DAF  1103               	clrz
  6777     0DB0  1803               	skipnc
  6778     0DB1  3E01               	addlw	1
  6779     0DB2  1903               	skipnz
  6780     0DB3  2DB5               	goto	u5292
  6781     0DB4  07B7               	addwf	___flmul@grs+2,f
  6782     0DB5                     u5292:
  6783     0DB5  0831               	movf	??___flmul+3,w
  6784     0DB6  1103               	clrz
  6785     0DB7  1803               	skipnc
  6786     0DB8  3E01               	addlw	1
  6787     0DB9  1903               	skipnz
  6788     0DBA  2DBC               	goto	u5293
  6789     0DBB  07B8               	addwf	___flmul@grs+3,f
  6790     0DBC                     u5293:
  6791     0DBC                     l3664:
  6792     0DBC  083F               	movf	___flmul@temp+1,w
  6793     0DBD  00AE               	movwf	??___flmul
  6794     0DBE  01AF               	clrf	??___flmul+1
  6795     0DBF  01B0               	clrf	??___flmul+2
  6796     0DC0  01B1               	clrf	??___flmul+3
  6797     0DC1  082E               	movf	??___flmul,w
  6798     0DC2  07BA               	addwf	___flmul@prod,f
  6799     0DC3  082F               	movf	??___flmul+1,w
  6800     0DC4  1103               	clrz
  6801     0DC5  1803               	skipnc
  6802     0DC6  3E01               	addlw	1
  6803     0DC7  1903               	skipnz
  6804     0DC8  2DCA               	goto	u5301
  6805     0DC9  07BB               	addwf	___flmul@prod+1,f
  6806     0DCA                     u5301:
  6807     0DCA  0830               	movf	??___flmul+2,w
  6808     0DCB  1103               	clrz
  6809     0DCC  1803               	skipnc
  6810     0DCD  3E01               	addlw	1
  6811     0DCE  1903               	skipnz
  6812     0DCF  2DD1               	goto	u5302
  6813     0DD0  07BC               	addwf	___flmul@prod+2,f
  6814     0DD1                     u5302:
  6815     0DD1  0831               	movf	??___flmul+3,w
  6816     0DD2  1103               	clrz
  6817     0DD3  1803               	skipnc
  6818     0DD4  3E01               	addlw	1
  6819     0DD5  1903               	skipnz
  6820     0DD6  2DD8               	goto	u5303
  6821     0DD7  07BD               	addwf	___flmul@prod+3,f
  6822     0DD8                     u5303:
  6823     0DD8                     l3666:
  6824     0DD8  3008               	movlw	8
  6825     0DD9  00AE               	movwf	??___flmul
  6826     0DDA                     u5315:
  6827     0DDA  1003               	clrc
  6828     0DDB  0DB5               	rlf	___flmul@grs,f
  6829     0DDC  0DB6               	rlf	___flmul@grs+1,f
  6830     0DDD  0DB7               	rlf	___flmul@grs+2,f
  6831     0DDE  0DB8               	rlf	___flmul@grs+3,f
  6832     0DDF  0BAE               	decfsz	??___flmul,f
  6833     0DE0  2DDA               	goto	u5315
  6834     0DE1                     l3668:
  6835     0DE1  0827               	movf	___flmul@b+1,w
  6836     0DE2  00F2               	movwf	__Umul8_16@multiplicand
  6837     0DE3  082A               	movf	___flmul@a,w
  6838     0DE4  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6839     0DE9  0873               	movf	?__Umul8_16+1,w
  6840     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  6841     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  6842     0DEC  00BF               	movwf	___flmul@temp+1
  6843     0DED  0872               	movf	?__Umul8_16,w
  6844     0DEE  00BE               	movwf	___flmul@temp
  6845     0DEF                     l3670:
  6846     0DEF  083E               	movf	___flmul@temp,w
  6847     0DF0  00AE               	movwf	??___flmul
  6848     0DF1  083F               	movf	___flmul@temp+1,w
  6849     0DF2  00AF               	movwf	??___flmul+1
  6850     0DF3  01B0               	clrf	??___flmul+2
  6851     0DF4  01B1               	clrf	??___flmul+3
  6852     0DF5  082E               	movf	??___flmul,w
  6853     0DF6  07B5               	addwf	___flmul@grs,f
  6854     0DF7  082F               	movf	??___flmul+1,w
  6855     0DF8  1103               	clrz
  6856     0DF9  1803               	skipnc
  6857     0DFA  3E01               	addlw	1
  6858     0DFB  1903               	skipnz
  6859     0DFC  2DFE               	goto	u5321
  6860     0DFD  07B6               	addwf	___flmul@grs+1,f
  6861     0DFE                     u5321:
  6862     0DFE  0830               	movf	??___flmul+2,w
  6863     0DFF  1103               	clrz
  6864     0E00  1803               	skipnc
  6865     0E01  3E01               	addlw	1
  6866     0E02  1903               	skipnz
  6867     0E03  2E05               	goto	u5322
  6868     0E04  07B7               	addwf	___flmul@grs+2,f
  6869     0E05                     u5322:
  6870     0E05  0831               	movf	??___flmul+3,w
  6871     0E06  1103               	clrz
  6872     0E07  1803               	skipnc
  6873     0E08  3E01               	addlw	1
  6874     0E09  1903               	skipnz
  6875     0E0A  2E0C               	goto	u5323
  6876     0E0B  07B8               	addwf	___flmul@grs+3,f
  6877     0E0C                     u5323:
  6878     0E0C                     l3672:
  6879     0E0C  0826               	movf	___flmul@b,w
  6880     0E0D  00F2               	movwf	__Umul8_16@multiplicand
  6881     0E0E  082B               	movf	___flmul@a+1,w
  6882     0E0F  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6883     0E14  0873               	movf	?__Umul8_16+1,w
  6884     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  6885     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  6886     0E17  00BF               	movwf	___flmul@temp+1
  6887     0E18  0872               	movf	?__Umul8_16,w
  6888     0E19  00BE               	movwf	___flmul@temp
  6889     0E1A                     l3674:
  6890     0E1A  083E               	movf	___flmul@temp,w
  6891     0E1B  00AE               	movwf	??___flmul
  6892     0E1C  083F               	movf	___flmul@temp+1,w
  6893     0E1D  00AF               	movwf	??___flmul+1
  6894     0E1E  01B0               	clrf	??___flmul+2
  6895     0E1F  01B1               	clrf	??___flmul+3
  6896     0E20  082E               	movf	??___flmul,w
  6897     0E21  07B5               	addwf	___flmul@grs,f
  6898     0E22  082F               	movf	??___flmul+1,w
  6899     0E23  1103               	clrz
  6900     0E24  1803               	skipnc
  6901     0E25  3E01               	addlw	1
  6902     0E26  1903               	skipnz
  6903     0E27  2E29               	goto	u5331
  6904     0E28  07B6               	addwf	___flmul@grs+1,f
  6905     0E29                     u5331:
  6906     0E29  0830               	movf	??___flmul+2,w
  6907     0E2A  1103               	clrz
  6908     0E2B  1803               	skipnc
  6909     0E2C  3E01               	addlw	1
  6910     0E2D  1903               	skipnz
  6911     0E2E  2E30               	goto	u5332
  6912     0E2F  07B7               	addwf	___flmul@grs+2,f
  6913     0E30                     u5332:
  6914     0E30  0831               	movf	??___flmul+3,w
  6915     0E31  1103               	clrz
  6916     0E32  1803               	skipnc
  6917     0E33  3E01               	addlw	1
  6918     0E34  1903               	skipnz
  6919     0E35  2E37               	goto	u5333
  6920     0E36  07B8               	addwf	___flmul@grs+3,f
  6921     0E37                     u5333:
  6922     0E37                     l3676:
  6923     0E37  3008               	movlw	8
  6924     0E38  00AE               	movwf	??___flmul
  6925     0E39                     u5345:
  6926     0E39  1003               	clrc
  6927     0E3A  0DB5               	rlf	___flmul@grs,f
  6928     0E3B  0DB6               	rlf	___flmul@grs+1,f
  6929     0E3C  0DB7               	rlf	___flmul@grs+2,f
  6930     0E3D  0DB8               	rlf	___flmul@grs+3,f
  6931     0E3E  0BAE               	decfsz	??___flmul,f
  6932     0E3F  2E39               	goto	u5345
  6933     0E40  0826               	movf	___flmul@b,w
  6934     0E41  00F2               	movwf	__Umul8_16@multiplicand
  6935     0E42  082A               	movf	___flmul@a,w
  6936     0E43  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6937     0E48  0873               	movf	?__Umul8_16+1,w
  6938     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  6939     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  6940     0E4B  00BF               	movwf	___flmul@temp+1
  6941     0E4C  0872               	movf	?__Umul8_16,w
  6942     0E4D  00BE               	movwf	___flmul@temp
  6943     0E4E                     l3678:
  6944     0E4E  083E               	movf	___flmul@temp,w
  6945     0E4F  00AE               	movwf	??___flmul
  6946     0E50  083F               	movf	___flmul@temp+1,w
  6947     0E51  00AF               	movwf	??___flmul+1
  6948     0E52  01B0               	clrf	??___flmul+2
  6949     0E53  01B1               	clrf	??___flmul+3
  6950     0E54  082E               	movf	??___flmul,w
  6951     0E55  07B5               	addwf	___flmul@grs,f
  6952     0E56  082F               	movf	??___flmul+1,w
  6953     0E57  1103               	clrz
  6954     0E58  1803               	skipnc
  6955     0E59  3E01               	addlw	1
  6956     0E5A  1903               	skipnz
  6957     0E5B  2E5D               	goto	u5351
  6958     0E5C  07B6               	addwf	___flmul@grs+1,f
  6959     0E5D                     u5351:
  6960     0E5D  0830               	movf	??___flmul+2,w
  6961     0E5E  1103               	clrz
  6962     0E5F  1803               	skipnc
  6963     0E60  3E01               	addlw	1
  6964     0E61  1903               	skipnz
  6965     0E62  2E64               	goto	u5352
  6966     0E63  07B7               	addwf	___flmul@grs+2,f
  6967     0E64                     u5352:
  6968     0E64  0831               	movf	??___flmul+3,w
  6969     0E65  1103               	clrz
  6970     0E66  1803               	skipnc
  6971     0E67  3E01               	addlw	1
  6972     0E68  1903               	skipnz
  6973     0E69  2E6B               	goto	u5353
  6974     0E6A  07B8               	addwf	___flmul@grs+3,f
  6975     0E6B                     u5353:
  6976     0E6B                     l3680:
  6977     0E6B  0827               	movf	___flmul@b+1,w
  6978     0E6C  00F2               	movwf	__Umul8_16@multiplicand
  6979     0E6D  082C               	movf	___flmul@a+2,w
  6980     0E6E  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  6981     0E73  0873               	movf	?__Umul8_16+1,w
  6982     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  6983     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  6984     0E76  00BF               	movwf	___flmul@temp+1
  6985     0E77  0872               	movf	?__Umul8_16,w
  6986     0E78  00BE               	movwf	___flmul@temp
  6987     0E79  083E               	movf	___flmul@temp,w
  6988     0E7A  00AE               	movwf	??___flmul
  6989     0E7B  083F               	movf	___flmul@temp+1,w
  6990     0E7C  00AF               	movwf	??___flmul+1
  6991     0E7D  01B0               	clrf	??___flmul+2
  6992     0E7E  01B1               	clrf	??___flmul+3
  6993     0E7F  082E               	movf	??___flmul,w
  6994     0E80  07BA               	addwf	___flmul@prod,f
  6995     0E81  082F               	movf	??___flmul+1,w
  6996     0E82  1103               	clrz
  6997     0E83  1803               	skipnc
  6998     0E84  3E01               	addlw	1
  6999     0E85  1903               	skipnz
  7000     0E86  2E88               	goto	u5361
  7001     0E87  07BB               	addwf	___flmul@prod+1,f
  7002     0E88                     u5361:
  7003     0E88  0830               	movf	??___flmul+2,w
  7004     0E89  1103               	clrz
  7005     0E8A  1803               	skipnc
  7006     0E8B  3E01               	addlw	1
  7007     0E8C  1903               	skipnz
  7008     0E8D  2E8F               	goto	u5362
  7009     0E8E  07BC               	addwf	___flmul@prod+2,f
  7010     0E8F                     u5362:
  7011     0E8F  0831               	movf	??___flmul+3,w
  7012     0E90  1103               	clrz
  7013     0E91  1803               	skipnc
  7014     0E92  3E01               	addlw	1
  7015     0E93  1903               	skipnz
  7016     0E94  2E96               	goto	u5363
  7017     0E95  07BD               	addwf	___flmul@prod+3,f
  7018     0E96                     u5363:
  7019     0E96                     l3682:
  7020     0E96  0828               	movf	___flmul@b+2,w
  7021     0E97  00F2               	movwf	__Umul8_16@multiplicand
  7022     0E98  082B               	movf	___flmul@a+1,w
  7023     0E99  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  7024     0E9E  0873               	movf	?__Umul8_16+1,w
  7025     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  7026     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  7027     0EA1  00BF               	movwf	___flmul@temp+1
  7028     0EA2  0872               	movf	?__Umul8_16,w
  7029     0EA3  00BE               	movwf	___flmul@temp
  7030     0EA4                     l3684:
  7031     0EA4  083E               	movf	___flmul@temp,w
  7032     0EA5  00AE               	movwf	??___flmul
  7033     0EA6  083F               	movf	___flmul@temp+1,w
  7034     0EA7  00AF               	movwf	??___flmul+1
  7035     0EA8  01B0               	clrf	??___flmul+2
  7036     0EA9  01B1               	clrf	??___flmul+3
  7037     0EAA  082E               	movf	??___flmul,w
  7038     0EAB  07BA               	addwf	___flmul@prod,f
  7039     0EAC  082F               	movf	??___flmul+1,w
  7040     0EAD  1103               	clrz
  7041     0EAE  1803               	skipnc
  7042     0EAF  3E01               	addlw	1
  7043     0EB0  1903               	skipnz
  7044     0EB1  2EB3               	goto	u5371
  7045     0EB2  07BB               	addwf	___flmul@prod+1,f
  7046     0EB3                     u5371:
  7047     0EB3  0830               	movf	??___flmul+2,w
  7048     0EB4  1103               	clrz
  7049     0EB5  1803               	skipnc
  7050     0EB6  3E01               	addlw	1
  7051     0EB7  1903               	skipnz
  7052     0EB8  2EBA               	goto	u5372
  7053     0EB9  07BC               	addwf	___flmul@prod+2,f
  7054     0EBA                     u5372:
  7055     0EBA  0831               	movf	??___flmul+3,w
  7056     0EBB  1103               	clrz
  7057     0EBC  1803               	skipnc
  7058     0EBD  3E01               	addlw	1
  7059     0EBE  1903               	skipnz
  7060     0EBF  2EC1               	goto	u5373
  7061     0EC0  07BD               	addwf	___flmul@prod+3,f
  7062     0EC1                     u5373:
  7063     0EC1  0828               	movf	___flmul@b+2,w
  7064     0EC2  00F2               	movwf	__Umul8_16@multiplicand
  7065     0EC3  082C               	movf	___flmul@a+2,w
  7066     0EC4  160A  158A  25A4  120A  158A  	fcall	__Umul8_16
  7067     0EC9  0873               	movf	?__Umul8_16+1,w
  7068     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  7069     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  7070     0ECC  00BF               	movwf	___flmul@temp+1
  7071     0ECD  0872               	movf	?__Umul8_16,w
  7072     0ECE  00BE               	movwf	___flmul@temp
  7073     0ECF                     l3686:
  7074     0ECF  083E               	movf	___flmul@temp,w
  7075     0ED0  00AE               	movwf	??___flmul
  7076     0ED1  083F               	movf	___flmul@temp+1,w
  7077     0ED2  00AF               	movwf	??___flmul+1
  7078     0ED3  01B0               	clrf	??___flmul+2
  7079     0ED4  01B1               	clrf	??___flmul+3
  7080     0ED5  3008               	movlw	8
  7081     0ED6                     u5385:
  7082     0ED6  1003               	clrc
  7083     0ED7  0DAE               	rlf	??___flmul,f
  7084     0ED8  0DAF               	rlf	??___flmul+1,f
  7085     0ED9  0DB0               	rlf	??___flmul+2,f
  7086     0EDA  0DB1               	rlf	??___flmul+3,f
  7087     0EDB                     u5380:
  7088     0EDB  3EFF               	addlw	-1
  7089     0EDC  1D03               	skipz
  7090     0EDD  2ED6               	goto	u5385
  7091     0EDE  082E               	movf	??___flmul,w
  7092     0EDF  07BA               	addwf	___flmul@prod,f
  7093     0EE0  082F               	movf	??___flmul+1,w
  7094     0EE1  1103               	clrz
  7095     0EE2  1803               	skipnc
  7096     0EE3  3E01               	addlw	1
  7097     0EE4  1903               	skipnz
  7098     0EE5  2EE7               	goto	u5391
  7099     0EE6  07BB               	addwf	___flmul@prod+1,f
  7100     0EE7                     u5391:
  7101     0EE7  0830               	movf	??___flmul+2,w
  7102     0EE8  1103               	clrz
  7103     0EE9  1803               	skipnc
  7104     0EEA  3E01               	addlw	1
  7105     0EEB  1903               	skipnz
  7106     0EEC  2EEE               	goto	u5392
  7107     0EED  07BC               	addwf	___flmul@prod+2,f
  7108     0EEE                     u5392:
  7109     0EEE  0831               	movf	??___flmul+3,w
  7110     0EEF  1103               	clrz
  7111     0EF0  1803               	skipnc
  7112     0EF1  3E01               	addlw	1
  7113     0EF2  1903               	skipnz
  7114     0EF3  2EF5               	goto	u5393
  7115     0EF4  07BD               	addwf	___flmul@prod+3,f
  7116     0EF5                     u5393:
  7117     0EF5                     l3688:
  7118     0EF5  0835               	movf	___flmul@grs,w
  7119     0EF6  00AE               	movwf	??___flmul
  7120     0EF7  0836               	movf	___flmul@grs+1,w
  7121     0EF8  00AF               	movwf	??___flmul+1
  7122     0EF9  0837               	movf	___flmul@grs+2,w
  7123     0EFA  00B0               	movwf	??___flmul+2
  7124     0EFB  0838               	movf	___flmul@grs+3,w
  7125     0EFC  00B1               	movwf	??___flmul+3
  7126     0EFD  3018               	movlw	24
  7127     0EFE                     u5405:
  7128     0EFE  1003               	clrc
  7129     0EFF  0CB1               	rrf	??___flmul+3,f
  7130     0F00  0CB0               	rrf	??___flmul+2,f
  7131     0F01  0CAF               	rrf	??___flmul+1,f
  7132     0F02  0CAE               	rrf	??___flmul,f
  7133     0F03                     u5400:
  7134     0F03  3EFF               	addlw	-1
  7135     0F04  1D03               	skipz
  7136     0F05  2EFE               	goto	u5405
  7137     0F06  082E               	movf	??___flmul,w
  7138     0F07  07BA               	addwf	___flmul@prod,f
  7139     0F08  082F               	movf	??___flmul+1,w
  7140     0F09  1103               	clrz
  7141     0F0A  1803               	skipnc
  7142     0F0B  3E01               	addlw	1
  7143     0F0C  1903               	skipnz
  7144     0F0D  2F0F               	goto	u5411
  7145     0F0E  07BB               	addwf	___flmul@prod+1,f
  7146     0F0F                     u5411:
  7147     0F0F  0830               	movf	??___flmul+2,w
  7148     0F10  1103               	clrz
  7149     0F11  1803               	skipnc
  7150     0F12  3E01               	addlw	1
  7151     0F13  1903               	skipnz
  7152     0F14  2F16               	goto	u5412
  7153     0F15  07BC               	addwf	___flmul@prod+2,f
  7154     0F16                     u5412:
  7155     0F16  0831               	movf	??___flmul+3,w
  7156     0F17  1103               	clrz
  7157     0F18  1803               	skipnc
  7158     0F19  3E01               	addlw	1
  7159     0F1A  1903               	skipnz
  7160     0F1B  2F1D               	goto	u5413
  7161     0F1C  07BD               	addwf	___flmul@prod+3,f
  7162     0F1D                     u5413:
  7163     0F1D                     l3690:
  7164     0F1D  3008               	movlw	8
  7165     0F1E  00AE               	movwf	??___flmul
  7166     0F1F                     u5425:
  7167     0F1F  1003               	clrc
  7168     0F20  0DB5               	rlf	___flmul@grs,f
  7169     0F21  0DB6               	rlf	___flmul@grs+1,f
  7170     0F22  0DB7               	rlf	___flmul@grs+2,f
  7171     0F23  0DB8               	rlf	___flmul@grs+3,f
  7172     0F24  0BAE               	decfsz	??___flmul,f
  7173     0F25  2F1F               	goto	u5425
  7174     0F26                     l3692:
  7175     0F26  0839               	movf	___flmul@bexp,w
  7176     0F27  0734               	addwf	___flmul@aexp,w
  7177     0F28  00AE               	movwf	??___flmul
  7178     0F29  01AF               	clrf	??___flmul+1
  7179     0F2A  0DAF               	rlf	??___flmul+1,f
  7180     0F2B  082E               	movf	??___flmul,w
  7181     0F2C  3E82               	addlw	130
  7182     0F2D  00BE               	movwf	___flmul@temp
  7183     0F2E  082F               	movf	??___flmul+1,w
  7184     0F2F  1803               	skipnc
  7185     0F30  3E01               	addlw	1
  7186     0F31  3EFF               	addlw	255
  7187     0F32  00BF               	movwf	___flmul@temp+1
  7188     0F33  2F51               	goto	l3704
  7189     0F34                     l3694:
  7190     0F34  3001               	movlw	1
  7191     0F35  00AE               	movwf	??___flmul
  7192     0F36                     u5435:
  7193     0F36  1003               	clrc
  7194     0F37  0DBA               	rlf	___flmul@prod,f
  7195     0F38  0DBB               	rlf	___flmul@prod+1,f
  7196     0F39  0DBC               	rlf	___flmul@prod+2,f
  7197     0F3A  0DBD               	rlf	___flmul@prod+3,f
  7198     0F3B  0BAE               	decfsz	??___flmul,f
  7199     0F3C  2F36               	goto	u5435
  7200     0F3D                     l3696:
  7201     0F3D  1FB8               	btfss	___flmul@grs+3,7
  7202     0F3E  2F40               	goto	u5441
  7203     0F3F  2F41               	goto	u5440
  7204     0F40                     u5441:
  7205     0F40  2F42               	goto	l3700
  7206     0F41                     u5440:
  7207     0F41                     l3698:
  7208     0F41  143A               	bsf	___flmul@prod,0
  7209     0F42                     l3700:
  7210     0F42  3001               	movlw	1
  7211     0F43  00AE               	movwf	??___flmul
  7212     0F44                     u5455:
  7213     0F44  1003               	clrc
  7214     0F45  0DB5               	rlf	___flmul@grs,f
  7215     0F46  0DB6               	rlf	___flmul@grs+1,f
  7216     0F47  0DB7               	rlf	___flmul@grs+2,f
  7217     0F48  0DB8               	rlf	___flmul@grs+3,f
  7218     0F49  0BAE               	decfsz	??___flmul,f
  7219     0F4A  2F44               	goto	u5455
  7220     0F4B                     l3702:
  7221     0F4B  30FF               	movlw	255
  7222     0F4C  07BE               	addwf	___flmul@temp,f
  7223     0F4D  1803               	skipnc
  7224     0F4E  0ABF               	incf	___flmul@temp+1,f
  7225     0F4F  30FF               	movlw	255
  7226     0F50  07BF               	addwf	___flmul@temp+1,f
  7227     0F51                     l3704:
  7228     0F51  1FBC               	btfss	___flmul@prod+2,7
  7229     0F52  2F54               	goto	u5461
  7230     0F53  2F55               	goto	u5460
  7231     0F54                     u5461:
  7232     0F54  2F34               	goto	l3694
  7233     0F55                     u5460:
  7234     0F55                     l3706:
  7235     0F55  01B4               	clrf	___flmul@aexp
  7236     0F56                     l3708:
  7237     0F56  1FB8               	btfss	___flmul@grs+3,7
  7238     0F57  2F59               	goto	u5471
  7239     0F58  2F5A               	goto	u5470
  7240     0F59                     u5471:
  7241     0F59  2F76               	goto	l3716
  7242     0F5A                     u5470:
  7243     0F5A                     l3710:
  7244     0F5A  30FF               	movlw	255
  7245     0F5B  0535               	andwf	___flmul@grs,w
  7246     0F5C  00AE               	movwf	??___flmul
  7247     0F5D  30FF               	movlw	255
  7248     0F5E  0536               	andwf	___flmul@grs+1,w
  7249     0F5F  00AF               	movwf	??___flmul+1
  7250     0F60  30FF               	movlw	255
  7251     0F61  0537               	andwf	___flmul@grs+2,w
  7252     0F62  00B0               	movwf	??___flmul+2
  7253     0F63  307F               	movlw	127
  7254     0F64  0538               	andwf	___flmul@grs+3,w
  7255     0F65  00B1               	movwf	??___flmul+3
  7256     0F66  0831               	movf	??___flmul+3,w
  7257     0F67  0430               	iorwf	??___flmul+2,w
  7258     0F68  042F               	iorwf	??___flmul+1,w
  7259     0F69  042E               	iorwf	??___flmul,w
  7260     0F6A  1903               	skipnz
  7261     0F6B  2F6D               	goto	u5481
  7262     0F6C  2F6E               	goto	u5480
  7263     0F6D                     u5481:
  7264     0F6D  2F71               	goto	l670
  7265     0F6E                     u5480:
  7266     0F6E                     l3712:
  7267     0F6E  3001               	movlw	1
  7268     0F6F  00B4               	movwf	___flmul@aexp
  7269     0F70  2F76               	goto	l3716
  7270     0F71                     l670:
  7271     0F71  1C3A               	btfss	___flmul@prod,0
  7272     0F72  2F74               	goto	u5491
  7273     0F73  2F75               	goto	u5490
  7274     0F74                     u5491:
  7275     0F74  2F76               	goto	l3716
  7276     0F75                     u5490:
  7277     0F75  2F6E               	goto	l3712
  7278     0F76                     l3716:
  7279     0F76  0834               	movf	___flmul@aexp,w
  7280     0F77  1903               	btfsc	3,2
  7281     0F78  2F7A               	goto	u5501
  7282     0F79  2F7B               	goto	u5500
  7283     0F7A                     u5501:
  7284     0F7A  2FAC               	goto	l3726
  7285     0F7B                     u5500:
  7286     0F7B                     l3718:
  7287     0F7B  3001               	movlw	1
  7288     0F7C  07BA               	addwf	___flmul@prod,f
  7289     0F7D  3000               	movlw	0
  7290     0F7E  1803               	skipnc
  7291     0F7F  3001               	movlw	1
  7292     0F80  07BB               	addwf	___flmul@prod+1,f
  7293     0F81  3000               	movlw	0
  7294     0F82  1803               	skipnc
  7295     0F83  3001               	movlw	1
  7296     0F84  07BC               	addwf	___flmul@prod+2,f
  7297     0F85  3000               	movlw	0
  7298     0F86  1803               	skipnc
  7299     0F87  3001               	movlw	1
  7300     0F88  07BD               	addwf	___flmul@prod+3,f
  7301     0F89                     l3720:
  7302     0F89  1C3D               	btfss	___flmul@prod+3,0
  7303     0F8A  2F8C               	goto	u5511
  7304     0F8B  2F8D               	goto	u5510
  7305     0F8C                     u5511:
  7306     0F8C  2FAC               	goto	l3726
  7307     0F8D                     u5510:
  7308     0F8D                     l3722:
  7309     0F8D  083A               	movf	___flmul@prod,w
  7310     0F8E  00AE               	movwf	??___flmul
  7311     0F8F  083B               	movf	___flmul@prod+1,w
  7312     0F90  00AF               	movwf	??___flmul+1
  7313     0F91  083C               	movf	___flmul@prod+2,w
  7314     0F92  00B0               	movwf	??___flmul+2
  7315     0F93  083D               	movf	___flmul@prod+3,w
  7316     0F94  00B1               	movwf	??___flmul+3
  7317     0F95  3001               	movlw	1
  7318     0F96  00B2               	movwf	??___flmul+4
  7319     0F97                     u5525:
  7320     0F97  0D31               	rlf	??___flmul+3,w
  7321     0F98  0CB1               	rrf	??___flmul+3,f
  7322     0F99  0CB0               	rrf	??___flmul+2,f
  7323     0F9A  0CAF               	rrf	??___flmul+1,f
  7324     0F9B  0CAE               	rrf	??___flmul,f
  7325     0F9C                     u5520:
  7326     0F9C  0BB2               	decfsz	??___flmul+4,f
  7327     0F9D  2F97               	goto	u5525
  7328     0F9E  0831               	movf	??___flmul+3,w
  7329     0F9F  00BD               	movwf	___flmul@prod+3
  7330     0FA0  0830               	movf	??___flmul+2,w
  7331     0FA1  00BC               	movwf	___flmul@prod+2
  7332     0FA2  082F               	movf	??___flmul+1,w
  7333     0FA3  00BB               	movwf	___flmul@prod+1
  7334     0FA4  082E               	movf	??___flmul,w
  7335     0FA5  00BA               	movwf	___flmul@prod
  7336     0FA6                     l3724:
  7337     0FA6  3001               	movlw	1
  7338     0FA7  07BE               	addwf	___flmul@temp,f
  7339     0FA8  1803               	skipnc
  7340     0FA9  0ABF               	incf	___flmul@temp+1,f
  7341     0FAA  3000               	movlw	0
  7342     0FAB  07BF               	addwf	___flmul@temp+1,f
  7343     0FAC                     l3726:
  7344     0FAC  083F               	movf	___flmul@temp+1,w
  7345     0FAD  3A80               	xorlw	128
  7346     0FAE  00FF               	movwf	btemp+1
  7347     0FAF  3080               	movlw	128
  7348     0FB0  027F               	subwf	btemp+1,w
  7349     0FB1  1D03               	skipz
  7350     0FB2  2FB5               	goto	u5535
  7351     0FB3  30FF               	movlw	255
  7352     0FB4  023E               	subwf	___flmul@temp,w
  7353     0FB5                     u5535:
  7354     0FB5  1C03               	skipc
  7355     0FB6  2FB8               	goto	u5531
  7356     0FB7  2FB9               	goto	u5530
  7357     0FB8                     u5531:
  7358     0FB8  2FC4               	goto	l3730
  7359     0FB9                     u5530:
  7360     0FB9                     l3728:
  7361     0FB9  307F               	movlw	127
  7362     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  7363     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  7364     0FBC  00BD               	movwf	___flmul@prod+3
  7365     0FBD  3080               	movlw	128
  7366     0FBE  00BC               	movwf	___flmul@prod+2
  7367     0FBF  3000               	movlw	0
  7368     0FC0  00BB               	movwf	___flmul@prod+1
  7369     0FC1  3000               	movlw	0
  7370     0FC2  00BA               	movwf	___flmul@prod
  7371     0FC3  2FF5               	goto	l676
  7372     0FC4                     l3730:
  7373     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  7374     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  7375     0FC6  083F               	movf	___flmul@temp+1,w
  7376     0FC7  3A80               	xorlw	128
  7377     0FC8  00FF               	movwf	btemp+1
  7378     0FC9  3080               	movlw	128
  7379     0FCA  027F               	subwf	btemp+1,w
  7380     0FCB  1D03               	skipz
  7381     0FCC  2FCF               	goto	u5545
  7382     0FCD  3001               	movlw	1
  7383     0FCE  023E               	subwf	___flmul@temp,w
  7384     0FCF                     u5545:
  7385     0FCF  1803               	skipnc
  7386     0FD0  2FD2               	goto	u5541
  7387     0FD1  2FD3               	goto	u5540
  7388     0FD2                     u5541:
  7389     0FD2  2FDF               	goto	l3736
  7390     0FD3                     u5540:
  7391     0FD3                     l3732:
  7392     0FD3  3000               	movlw	0
  7393     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  7394     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  7395     0FD6  00BD               	movwf	___flmul@prod+3
  7396     0FD7  3000               	movlw	0
  7397     0FD8  00BC               	movwf	___flmul@prod+2
  7398     0FD9  3000               	movlw	0
  7399     0FDA  00BB               	movwf	___flmul@prod+1
  7400     0FDB  3000               	movlw	0
  7401     0FDC  00BA               	movwf	___flmul@prod
  7402     0FDD                     l3734:
  7403     0FDD  01B3               	clrf	___flmul@sign
  7404     0FDE  2FF5               	goto	l676
  7405     0FDF                     l3736:
  7406     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  7407     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  7408     0FE1  083E               	movf	___flmul@temp,w
  7409     0FE2  00B9               	movwf	___flmul@bexp
  7410     0FE3  30FF               	movlw	255
  7411     0FE4  05BA               	andwf	___flmul@prod,f
  7412     0FE5  30FF               	movlw	255
  7413     0FE6  05BB               	andwf	___flmul@prod+1,f
  7414     0FE7  307F               	movlw	127
  7415     0FE8  05BC               	andwf	___flmul@prod+2,f
  7416     0FE9  3000               	movlw	0
  7417     0FEA  05BD               	andwf	___flmul@prod+3,f
  7418     0FEB                     l3738:
  7419     0FEB  1C39               	btfss	___flmul@bexp,0
  7420     0FEC  2FEE               	goto	u5551
  7421     0FED  2FEF               	goto	u5550
  7422     0FEE                     u5551:
  7423     0FEE  2FF0               	goto	l3742
  7424     0FEF                     u5550:
  7425     0FEF                     l3740:
  7426     0FEF  17BC               	bsf	___flmul@prod+2,7
  7427     0FF0                     l3742:
  7428     0FF0  0839               	movf	___flmul@bexp,w
  7429     0FF1  00AE               	movwf	??___flmul
  7430     0FF2  1003               	clrc
  7431     0FF3  0C2E               	rrf	??___flmul,w
  7432     0FF4  00BD               	movwf	___flmul@prod+3
  7433     0FF5                     l676:
  7434     0FF5  0833               	movf	___flmul@sign,w
  7435     0FF6  04BD               	iorwf	___flmul@prod+3,f
  7436     0FF7                     l3744:
  7437     0FF7  083D               	movf	___flmul@prod+3,w
  7438     0FF8  00A9               	movwf	?___flmul+3
  7439     0FF9  083C               	movf	___flmul@prod+2,w
  7440     0FFA  00A8               	movwf	?___flmul+2
  7441     0FFB  083B               	movf	___flmul@prod+1,w
  7442     0FFC  00A7               	movwf	?___flmul+1
  7443     0FFD  083A               	movf	___flmul@prod,w
  7444     0FFE  00A6               	movwf	?___flmul
  7445     0FFF                     l664:
  7446     0FFF  0008               	return
  7447     1000                     __end_of___flmul:
  7448                           
  7449                           	psect	text31
  7450     1DA4                     __ptext31:	
  7451 ;; *************** function __Umul8_16 *****************
  7452 ;; Defined at:
  7453 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  multiplier      1    wreg     unsigned char 
  7456 ;;  multiplicand    1    2[COMMON] unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7459 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  7460 ;;  product         2    0[BANK0 ] unsigned short 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  2    2[COMMON] unsigned int 
  7463 ;; Registers used:
  7464 ;;		wreg, status,2, status,0
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7470 ;;      Params:         2       0       0       0       0
  7471 ;;      Locals:         0       5       0       0       0
  7472 ;;      Temps:          2       0       0       0       0
  7473 ;;      Totals:         4       5       0       0       0
  7474 ;;Total ram usage:        9 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 1
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		___flmul
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484     1DA4                     __Umul8_16:	
  7485                           ;psect for function __Umul8_16
  7486                           
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7490                           ;__Umul8_16@multiplier stored from wreg
  7491     1DA4  1283               	bcf	3,5	;RP0=0, select bank0
  7492     1DA5  1303               	bcf	3,6	;RP1=0, select bank0
  7493     1DA6  00A4               	movwf	__Umul8_16@multiplier
  7494     1DA7                     l3548:
  7495     1DA7  01A0               	clrf	__Umul8_16@product
  7496     1DA8  01A1               	clrf	__Umul8_16@product+1
  7497     1DA9                     l3550:
  7498     1DA9  0872               	movf	__Umul8_16@multiplicand,w
  7499     1DAA  00F4               	movwf	??__Umul8_16
  7500     1DAB  01F5               	clrf	??__Umul8_16+1
  7501     1DAC  0874               	movf	??__Umul8_16,w
  7502     1DAD  00A2               	movwf	__Umul8_16@word_mpld
  7503     1DAE  0875               	movf	??__Umul8_16+1,w
  7504     1DAF  00A3               	movwf	__Umul8_16@word_mpld+1
  7505     1DB0                     l3552:
  7506     1DB0  1C24               	btfss	__Umul8_16@multiplier,0
  7507     1DB1  2DB3               	goto	u5051
  7508     1DB2  2DB4               	goto	u5050
  7509     1DB3                     u5051:
  7510     1DB3  2DBA               	goto	l683
  7511     1DB4                     u5050:
  7512     1DB4                     l3554:
  7513     1DB4  0822               	movf	__Umul8_16@word_mpld,w
  7514     1DB5  07A0               	addwf	__Umul8_16@product,f
  7515     1DB6  1803               	skipnc
  7516     1DB7  0AA1               	incf	__Umul8_16@product+1,f
  7517     1DB8  0823               	movf	__Umul8_16@word_mpld+1,w
  7518     1DB9  07A1               	addwf	__Umul8_16@product+1,f
  7519     1DBA                     l683:
  7520     1DBA  3001               	movlw	1
  7521     1DBB                     u5065:
  7522     1DBB  1003               	clrc
  7523     1DBC  0DA2               	rlf	__Umul8_16@word_mpld,f
  7524     1DBD  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  7525     1DBE  3EFF               	addlw	-1
  7526     1DBF  1D03               	skipz
  7527     1DC0  2DBB               	goto	u5065
  7528     1DC1  1003               	clrc
  7529     1DC2  0CA4               	rrf	__Umul8_16@multiplier,f
  7530     1DC3                     l3556:
  7531     1DC3  0824               	movf	__Umul8_16@multiplier,w
  7532     1DC4  1D03               	btfss	3,2
  7533     1DC5  2DC7               	goto	u5071
  7534     1DC6  2DC8               	goto	u5070
  7535     1DC7                     u5071:
  7536     1DC7  2DB0               	goto	l3552
  7537     1DC8                     u5070:
  7538     1DC8                     l3558:
  7539     1DC8  0821               	movf	__Umul8_16@product+1,w
  7540     1DC9  00F3               	movwf	?__Umul8_16+1
  7541     1DCA  0820               	movf	__Umul8_16@product,w
  7542     1DCB  00F2               	movwf	?__Umul8_16
  7543     1DCC                     l685:
  7544     1DCC  0008               	return
  7545     1DCD                     __end_of__Umul8_16:
  7546                           
  7547                           	psect	text32
  7548     143F                     __ptext32:	
  7549 ;; *************** function ___flge *****************
  7550 ;; Defined at:
  7551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  ff1             4   32[BANK0 ] unsigned int 
  7554 ;;  ff2             4   36[BANK0 ] unsigned int 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;		None
  7557 ;; Return value:  Size  Location     Type
  7558 ;;		None               void
  7559 ;; Registers used:
  7560 ;;		wreg, status,2, status,0
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7566 ;;      Params:         0       8       0       0       0
  7567 ;;      Locals:         0       0       0       0       0
  7568 ;;      Temps:          0       4       0       0       0
  7569 ;;      Totals:         0      12       0       0       0
  7570 ;;Total ram usage:       12 bytes
  7571 ;; Hardware stack levels used: 1
  7572 ;; Hardware stack levels required when called: 1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_efgtoa
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580     143F                     ___flge:	
  7581                           ;psect for function ___flge
  7582                           
  7583     143F                     l2492:	
  7584                           ;incstack = 0
  7585                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7586                           
  7587     143F  3000               	movlw	0
  7588     1440  1283               	bcf	3,5	;RP0=0, select bank0
  7589     1441  1303               	bcf	3,6	;RP1=0, select bank0
  7590     1442  0540               	andwf	___flge@ff1,w
  7591     1443  00C8               	movwf	??___flge
  7592     1444  3000               	movlw	0
  7593     1445  0541               	andwf	___flge@ff1+1,w
  7594     1446  00C9               	movwf	??___flge+1
  7595     1447  3080               	movlw	128
  7596     1448  0542               	andwf	___flge@ff1+2,w
  7597     1449  00CA               	movwf	??___flge+2
  7598     144A  307F               	movlw	127
  7599     144B  0543               	andwf	___flge@ff1+3,w
  7600     144C  00CB               	movwf	??___flge+3
  7601     144D  084B               	movf	??___flge+3,w
  7602     144E  044A               	iorwf	??___flge+2,w
  7603     144F  0449               	iorwf	??___flge+1,w
  7604     1450  0448               	iorwf	??___flge,w
  7605     1451  1D03               	skipz
  7606     1452  2C54               	goto	u3151
  7607     1453  2C55               	goto	u3150
  7608     1454                     u3151:
  7609     1454  2C5D               	goto	l445
  7610     1455                     u3150:
  7611     1455                     l2494:
  7612     1455  3000               	movlw	0
  7613     1456  00C3               	movwf	___flge@ff1+3
  7614     1457  3000               	movlw	0
  7615     1458  00C2               	movwf	___flge@ff1+2
  7616     1459  3000               	movlw	0
  7617     145A  00C1               	movwf	___flge@ff1+1
  7618     145B  3000               	movlw	0
  7619     145C  00C0               	movwf	___flge@ff1
  7620     145D                     l445:
  7621     145D  3000               	movlw	0
  7622     145E  0544               	andwf	___flge@ff2,w
  7623     145F  00C8               	movwf	??___flge
  7624     1460  3000               	movlw	0
  7625     1461  0545               	andwf	___flge@ff2+1,w
  7626     1462  00C9               	movwf	??___flge+1
  7627     1463  3080               	movlw	128
  7628     1464  0546               	andwf	___flge@ff2+2,w
  7629     1465  00CA               	movwf	??___flge+2
  7630     1466  307F               	movlw	127
  7631     1467  0547               	andwf	___flge@ff2+3,w
  7632     1468  00CB               	movwf	??___flge+3
  7633     1469  084B               	movf	??___flge+3,w
  7634     146A  044A               	iorwf	??___flge+2,w
  7635     146B  0449               	iorwf	??___flge+1,w
  7636     146C  0448               	iorwf	??___flge,w
  7637     146D  1D03               	skipz
  7638     146E  2C70               	goto	u3161
  7639     146F  2C71               	goto	u3160
  7640     1470                     u3161:
  7641     1470  2C79               	goto	l2498
  7642     1471                     u3160:
  7643     1471                     l2496:
  7644     1471  3000               	movlw	0
  7645     1472  00C7               	movwf	___flge@ff2+3
  7646     1473  3000               	movlw	0
  7647     1474  00C6               	movwf	___flge@ff2+2
  7648     1475  3000               	movlw	0
  7649     1476  00C5               	movwf	___flge@ff2+1
  7650     1477  3000               	movlw	0
  7651     1478  00C4               	movwf	___flge@ff2
  7652     1479                     l2498:
  7653     1479  1FC3               	btfss	___flge@ff1+3,7
  7654     147A  2C7C               	goto	u3171
  7655     147B  2C7D               	goto	u3170
  7656     147C                     u3171:
  7657     147C  2CA1               	goto	l2502
  7658     147D                     u3170:
  7659     147D                     l2500:
  7660     147D  3000               	movlw	0
  7661     147E  00C8               	movwf	??___flge
  7662     147F  3000               	movlw	0
  7663     1480  00C9               	movwf	??___flge+1
  7664     1481  3000               	movlw	0
  7665     1482  00CA               	movwf	??___flge+2
  7666     1483  3080               	movlw	128
  7667     1484  00CB               	movwf	??___flge+3
  7668     1485  0840               	movf	___flge@ff1,w
  7669     1486  02C8               	subwf	??___flge,f
  7670     1487  0841               	movf	___flge@ff1+1,w
  7671     1488  1C03               	skipc
  7672     1489  0F41               	incfsz	___flge@ff1+1,w
  7673     148A  2C8C               	goto	u3181
  7674     148B  2C8D               	goto	u3182
  7675     148C                     u3181:
  7676     148C  02C9               	subwf	??___flge+1,f
  7677     148D                     u3182:
  7678     148D  0842               	movf	___flge@ff1+2,w
  7679     148E  1C03               	skipc
  7680     148F  0F42               	incfsz	___flge@ff1+2,w
  7681     1490  2C92               	goto	u3183
  7682     1491  2C93               	goto	u3184
  7683     1492                     u3183:
  7684     1492  02CA               	subwf	??___flge+2,f
  7685     1493                     u3184:
  7686     1493  0843               	movf	___flge@ff1+3,w
  7687     1494  1C03               	skipc
  7688     1495  0F43               	incfsz	___flge@ff1+3,w
  7689     1496  2C98               	goto	u3185
  7690     1497  2C99               	goto	u3186
  7691     1498                     u3185:
  7692     1498  02CB               	subwf	??___flge+3,f
  7693     1499                     u3186:
  7694     1499  084B               	movf	??___flge+3,w
  7695     149A  00C3               	movwf	___flge@ff1+3
  7696     149B  084A               	movf	??___flge+2,w
  7697     149C  00C2               	movwf	___flge@ff1+2
  7698     149D  0849               	movf	??___flge+1,w
  7699     149E  00C1               	movwf	___flge@ff1+1
  7700     149F  0848               	movf	??___flge,w
  7701     14A0  00C0               	movwf	___flge@ff1
  7702     14A1                     l2502:
  7703     14A1  1FC7               	btfss	___flge@ff2+3,7
  7704     14A2  2CA4               	goto	u3191
  7705     14A3  2CA5               	goto	u3190
  7706     14A4                     u3191:
  7707     14A4  2CC9               	goto	l448
  7708     14A5                     u3190:
  7709     14A5                     l2504:
  7710     14A5  3000               	movlw	0
  7711     14A6  00C8               	movwf	??___flge
  7712     14A7  3000               	movlw	0
  7713     14A8  00C9               	movwf	??___flge+1
  7714     14A9  3000               	movlw	0
  7715     14AA  00CA               	movwf	??___flge+2
  7716     14AB  3080               	movlw	128
  7717     14AC  00CB               	movwf	??___flge+3
  7718     14AD  0844               	movf	___flge@ff2,w
  7719     14AE  02C8               	subwf	??___flge,f
  7720     14AF  0845               	movf	___flge@ff2+1,w
  7721     14B0  1C03               	skipc
  7722     14B1  0F45               	incfsz	___flge@ff2+1,w
  7723     14B2  2CB4               	goto	u3201
  7724     14B3  2CB5               	goto	u3202
  7725     14B4                     u3201:
  7726     14B4  02C9               	subwf	??___flge+1,f
  7727     14B5                     u3202:
  7728     14B5  0846               	movf	___flge@ff2+2,w
  7729     14B6  1C03               	skipc
  7730     14B7  0F46               	incfsz	___flge@ff2+2,w
  7731     14B8  2CBA               	goto	u3203
  7732     14B9  2CBB               	goto	u3204
  7733     14BA                     u3203:
  7734     14BA  02CA               	subwf	??___flge+2,f
  7735     14BB                     u3204:
  7736     14BB  0847               	movf	___flge@ff2+3,w
  7737     14BC  1C03               	skipc
  7738     14BD  0F47               	incfsz	___flge@ff2+3,w
  7739     14BE  2CC0               	goto	u3205
  7740     14BF  2CC1               	goto	u3206
  7741     14C0                     u3205:
  7742     14C0  02CB               	subwf	??___flge+3,f
  7743     14C1                     u3206:
  7744     14C1  084B               	movf	??___flge+3,w
  7745     14C2  00C7               	movwf	___flge@ff2+3
  7746     14C3  084A               	movf	??___flge+2,w
  7747     14C4  00C6               	movwf	___flge@ff2+2
  7748     14C5  0849               	movf	??___flge+1,w
  7749     14C6  00C5               	movwf	___flge@ff2+1
  7750     14C7  0848               	movf	??___flge,w
  7751     14C8  00C4               	movwf	___flge@ff2
  7752     14C9                     l448:
  7753     14C9  3080               	movlw	128
  7754     14CA  06C3               	xorwf	___flge@ff1+3,f
  7755     14CB  3080               	movlw	128
  7756     14CC  06C7               	xorwf	___flge@ff2+3,f
  7757     14CD  0847               	movf	___flge@ff2+3,w
  7758     14CE  0243               	subwf	___flge@ff1+3,w
  7759     14CF  1D03               	skipz
  7760     14D0  2CDB               	goto	u3215
  7761     14D1  0846               	movf	___flge@ff2+2,w
  7762     14D2  0242               	subwf	___flge@ff1+2,w
  7763     14D3  1D03               	skipz
  7764     14D4  2CDB               	goto	u3215
  7765     14D5  0845               	movf	___flge@ff2+1,w
  7766     14D6  0241               	subwf	___flge@ff1+1,w
  7767     14D7  1D03               	skipz
  7768     14D8  2CDB               	goto	u3215
  7769     14D9  0844               	movf	___flge@ff2,w
  7770     14DA  0240               	subwf	___flge@ff1,w
  7771     14DB                     u3215:
  7772     14DB  1803               	skipnc
  7773     14DC  2CDE               	goto	u3211
  7774     14DD  2CDF               	goto	u3210
  7775     14DE                     u3211:
  7776     14DE  2CE1               	goto	l2508
  7777     14DF                     u3210:
  7778     14DF                     l2506:
  7779     14DF  1003               	clrc
  7780     14E0  2CE2               	goto	l453
  7781     14E1                     l2508:
  7782     14E1  1403               	setc
  7783     14E2                     l453:
  7784     14E2  0008               	return
  7785     14E3                     __end_of___flge:
  7786                           
  7787                           	psect	text33
  7788     1039                     __ptext33:	
  7789 ;; *************** function ___fleq *****************
  7790 ;; Defined at:
  7791 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  ff1             4    2[COMMON] unsigned int 
  7794 ;;  ff2             4    6[COMMON] unsigned int 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;		None               void
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7806 ;;      Params:         8       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0
  7808 ;;      Temps:          0       4       0       0       0
  7809 ;;      Totals:         8       4       0       0       0
  7810 ;;Total ram usage:       12 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_efgtoa
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820     1039                     ___fleq:	
  7821                           ;psect for function ___fleq
  7822                           
  7823     1039                     l2480:	
  7824                           ;incstack = 0
  7825                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7826                           
  7827     1039  3000               	movlw	0
  7828     103A  0572               	andwf	___fleq@ff1,w
  7829     103B  1283               	bcf	3,5	;RP0=0, select bank0
  7830     103C  1303               	bcf	3,6	;RP1=0, select bank0
  7831     103D  00A0               	movwf	??___fleq
  7832     103E  3000               	movlw	0
  7833     103F  0573               	andwf	___fleq@ff1+1,w
  7834     1040  00A1               	movwf	??___fleq+1
  7835     1041  3080               	movlw	128
  7836     1042  0574               	andwf	___fleq@ff1+2,w
  7837     1043  00A2               	movwf	??___fleq+2
  7838     1044  307F               	movlw	127
  7839     1045  0575               	andwf	___fleq@ff1+3,w
  7840     1046  00A3               	movwf	??___fleq+3
  7841     1047  0823               	movf	??___fleq+3,w
  7842     1048  0422               	iorwf	??___fleq+2,w
  7843     1049  0421               	iorwf	??___fleq+1,w
  7844     104A  0420               	iorwf	??___fleq,w
  7845     104B  1D03               	skipz
  7846     104C  284E               	goto	u3121
  7847     104D  284F               	goto	u3120
  7848     104E                     u3121:
  7849     104E  2857               	goto	l436
  7850     104F                     u3120:
  7851     104F                     l2482:
  7852     104F  3000               	movlw	0
  7853     1050  00F5               	movwf	___fleq@ff1+3
  7854     1051  3000               	movlw	0
  7855     1052  00F4               	movwf	___fleq@ff1+2
  7856     1053  3000               	movlw	0
  7857     1054  00F3               	movwf	___fleq@ff1+1
  7858     1055  3000               	movlw	0
  7859     1056  00F2               	movwf	___fleq@ff1
  7860     1057                     l436:
  7861     1057  3000               	movlw	0
  7862     1058  0576               	andwf	___fleq@ff2,w
  7863     1059  00A0               	movwf	??___fleq
  7864     105A  3000               	movlw	0
  7865     105B  0577               	andwf	___fleq@ff2+1,w
  7866     105C  00A1               	movwf	??___fleq+1
  7867     105D  3080               	movlw	128
  7868     105E  0578               	andwf	___fleq@ff2+2,w
  7869     105F  00A2               	movwf	??___fleq+2
  7870     1060  307F               	movlw	127
  7871     1061  0579               	andwf	___fleq@ff2+3,w
  7872     1062  00A3               	movwf	??___fleq+3
  7873     1063  0823               	movf	??___fleq+3,w
  7874     1064  0422               	iorwf	??___fleq+2,w
  7875     1065  0421               	iorwf	??___fleq+1,w
  7876     1066  0420               	iorwf	??___fleq,w
  7877     1067  1D03               	skipz
  7878     1068  286A               	goto	u3131
  7879     1069  286B               	goto	u3130
  7880     106A                     u3131:
  7881     106A  2873               	goto	l437
  7882     106B                     u3130:
  7883     106B                     l2484:
  7884     106B  3000               	movlw	0
  7885     106C  00F9               	movwf	___fleq@ff2+3
  7886     106D  3000               	movlw	0
  7887     106E  00F8               	movwf	___fleq@ff2+2
  7888     106F  3000               	movlw	0
  7889     1070  00F7               	movwf	___fleq@ff2+1
  7890     1071  3000               	movlw	0
  7891     1072  00F6               	movwf	___fleq@ff2
  7892     1073                     l437:
  7893     1073  0879               	movf	___fleq@ff2+3,w
  7894     1074  0675               	xorwf	___fleq@ff1+3,w
  7895     1075  1D03               	skipz
  7896     1076  2881               	goto	u3145
  7897     1077  0878               	movf	___fleq@ff2+2,w
  7898     1078  0674               	xorwf	___fleq@ff1+2,w
  7899     1079  1D03               	skipz
  7900     107A  2881               	goto	u3145
  7901     107B  0877               	movf	___fleq@ff2+1,w
  7902     107C  0673               	xorwf	___fleq@ff1+1,w
  7903     107D  1D03               	skipz
  7904     107E  2881               	goto	u3145
  7905     107F  0876               	movf	___fleq@ff2,w
  7906     1080  0672               	xorwf	___fleq@ff1,w
  7907     1081                     u3145:
  7908     1081  1903               	skipnz
  7909     1082  2884               	goto	u3141
  7910     1083  2885               	goto	u3140
  7911     1084                     u3141:
  7912     1084  2887               	goto	l2488
  7913     1085                     u3140:
  7914     1085                     l2486:
  7915     1085  1003               	clrc
  7916     1086  2888               	goto	l442
  7917     1087                     l2488:
  7918     1087  1403               	setc
  7919     1088                     l442:
  7920     1088  0008               	return
  7921     1089                     __end_of___fleq:
  7922                           
  7923                           	psect	text34
  7924     089E                     __ptext34:	
  7925 ;; *************** function ___fldiv *****************
  7926 ;; Defined at:
  7927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  a               4    2[COMMON] unsigned int 
  7930 ;;  b               4    6[COMMON] unsigned int 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  grs             4   12[BANK0 ] unsigned long 
  7933 ;;  rem             4    5[BANK0 ] unsigned long 
  7934 ;;  new_exp         2   10[BANK0 ] short 
  7935 ;;  aexp            1   17[BANK0 ] unsigned char 
  7936 ;;  bexp            1   16[BANK0 ] unsigned char 
  7937 ;;  sign            1    9[BANK0 ] unsigned char 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  4    2[COMMON] unsigned char 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0, btemp+1
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7947 ;;      Params:         8       0       0       0       0
  7948 ;;      Locals:         0      13       0       0       0
  7949 ;;      Temps:          0       5       0       0       0
  7950 ;;      Totals:         8      18       0       0       0
  7951 ;;Total ram usage:       26 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 1
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_efgtoa
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961     089E                     ___fldiv:	
  7962                           ;psect for function ___fldiv
  7963                           
  7964     089E                     l2562:	
  7965                           ;incstack = 0
  7966                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7967                           
  7968     089E  0879               	movf	___fldiv@b+3,w
  7969     089F  1283               	bcf	3,5	;RP0=0, select bank0
  7970     08A0  1303               	bcf	3,6	;RP1=0, select bank0
  7971     08A1  00A9               	movwf	___fldiv@sign
  7972     08A2                     l2564:
  7973     08A2  3080               	movlw	128
  7974     08A3  05A9               	andwf	___fldiv@sign,f
  7975     08A4                     l2566:
  7976     08A4  0879               	movf	___fldiv@b+3,w
  7977     08A5  00A0               	movwf	??___fldiv
  7978     08A6  0720               	addwf	??___fldiv,w
  7979     08A7  00B0               	movwf	___fldiv@bexp
  7980     08A8                     l2568:
  7981     08A8  1FF8               	btfss	___fldiv@b+2,7
  7982     08A9  28AB               	goto	u3331
  7983     08AA  28AC               	goto	u3330
  7984     08AB                     u3331:
  7985     08AB  28AD               	goto	l2572
  7986     08AC                     u3330:
  7987     08AC                     l2570:
  7988     08AC  1430               	bsf	___fldiv@bexp,0
  7989     08AD                     l2572:
  7990     08AD  0830               	movf	___fldiv@bexp,w
  7991     08AE  1903               	btfsc	3,2
  7992     08AF  28B1               	goto	u3341
  7993     08B0  28B2               	goto	u3340
  7994     08B1                     u3341:
  7995     08B1  28C2               	goto	l2582
  7996     08B2                     u3340:
  7997     08B2                     l2574:
  7998     08B2  0A30               	incf	___fldiv@bexp,w
  7999     08B3  1D03               	btfss	3,2
  8000     08B4  28B6               	goto	u3351
  8001     08B5  28B7               	goto	u3350
  8002     08B6                     u3351:
  8003     08B6  28BF               	goto	l2578
  8004     08B7                     u3350:
  8005     08B7                     l2576:
  8006     08B7  3000               	movlw	0
  8007     08B8  00F9               	movwf	___fldiv@b+3
  8008     08B9  3000               	movlw	0
  8009     08BA  00F8               	movwf	___fldiv@b+2
  8010     08BB  3000               	movlw	0
  8011     08BC  00F7               	movwf	___fldiv@b+1
  8012     08BD  3000               	movlw	0
  8013     08BE  00F6               	movwf	___fldiv@b
  8014     08BF                     l2578:
  8015     08BF  17F8               	bsf	___fldiv@b+2,7
  8016     08C0                     l2580:
  8017     08C0  01F9               	clrf	___fldiv@b+3
  8018     08C1  28CA               	goto	l2584
  8019     08C2                     l2582:
  8020     08C2  3000               	movlw	0
  8021     08C3  00F9               	movwf	___fldiv@b+3
  8022     08C4  3000               	movlw	0
  8023     08C5  00F8               	movwf	___fldiv@b+2
  8024     08C6  3000               	movlw	0
  8025     08C7  00F7               	movwf	___fldiv@b+1
  8026     08C8  3000               	movlw	0
  8027     08C9  00F6               	movwf	___fldiv@b
  8028     08CA                     l2584:
  8029     08CA  0875               	movf	___fldiv@a+3,w
  8030     08CB  3980               	andlw	128
  8031     08CC  06A9               	xorwf	___fldiv@sign,f
  8032     08CD                     l2586:
  8033     08CD  0875               	movf	___fldiv@a+3,w
  8034     08CE  00A0               	movwf	??___fldiv
  8035     08CF  0720               	addwf	??___fldiv,w
  8036     08D0  00B1               	movwf	___fldiv@aexp
  8037     08D1                     l2588:
  8038     08D1  1FF4               	btfss	___fldiv@a+2,7
  8039     08D2  28D4               	goto	u3361
  8040     08D3  28D5               	goto	u3360
  8041     08D4                     u3361:
  8042     08D4  28D6               	goto	l2592
  8043     08D5                     u3360:
  8044     08D5                     l2590:
  8045     08D5  1431               	bsf	___fldiv@aexp,0
  8046     08D6                     l2592:
  8047     08D6  0831               	movf	___fldiv@aexp,w
  8048     08D7  1903               	btfsc	3,2
  8049     08D8  28DA               	goto	u3371
  8050     08D9  28DB               	goto	u3370
  8051     08DA                     u3371:
  8052     08DA  28EB               	goto	l2602
  8053     08DB                     u3370:
  8054     08DB                     l2594:
  8055     08DB  0A31               	incf	___fldiv@aexp,w
  8056     08DC  1D03               	btfss	3,2
  8057     08DD  28DF               	goto	u3381
  8058     08DE  28E0               	goto	u3380
  8059     08DF                     u3381:
  8060     08DF  28E8               	goto	l2598
  8061     08E0                     u3380:
  8062     08E0                     l2596:
  8063     08E0  3000               	movlw	0
  8064     08E1  00F5               	movwf	___fldiv@a+3
  8065     08E2  3000               	movlw	0
  8066     08E3  00F4               	movwf	___fldiv@a+2
  8067     08E4  3000               	movlw	0
  8068     08E5  00F3               	movwf	___fldiv@a+1
  8069     08E6  3000               	movlw	0
  8070     08E7  00F2               	movwf	___fldiv@a
  8071     08E8                     l2598:
  8072     08E8  17F4               	bsf	___fldiv@a+2,7
  8073     08E9                     l2600:
  8074     08E9  01F5               	clrf	___fldiv@a+3
  8075     08EA  28F3               	goto	l624
  8076     08EB                     l2602:
  8077     08EB  3000               	movlw	0
  8078     08EC  00F5               	movwf	___fldiv@a+3
  8079     08ED  3000               	movlw	0
  8080     08EE  00F4               	movwf	___fldiv@a+2
  8081     08EF  3000               	movlw	0
  8082     08F0  00F3               	movwf	___fldiv@a+1
  8083     08F1  3000               	movlw	0
  8084     08F2  00F2               	movwf	___fldiv@a
  8085     08F3                     l624:
  8086     08F3  0875               	movf	___fldiv@a+3,w
  8087     08F4  0474               	iorwf	___fldiv@a+2,w
  8088     08F5  0473               	iorwf	___fldiv@a+1,w
  8089     08F6  0472               	iorwf	___fldiv@a,w
  8090     08F7  1D03               	skipz
  8091     08F8  28FA               	goto	u3391
  8092     08F9  28FB               	goto	u3390
  8093     08FA                     u3391:
  8094     08FA  2912               	goto	l2612
  8095     08FB                     u3390:
  8096     08FB                     l2604:
  8097     08FB  3000               	movlw	0
  8098     08FC  00F9               	movwf	___fldiv@b+3
  8099     08FD  3000               	movlw	0
  8100     08FE  00F8               	movwf	___fldiv@b+2
  8101     08FF  3000               	movlw	0
  8102     0900  00F7               	movwf	___fldiv@b+1
  8103     0901  3000               	movlw	0
  8104     0902  00F6               	movwf	___fldiv@b
  8105     0903  3080               	movlw	128
  8106     0904  04F8               	iorwf	___fldiv@b+2,f
  8107     0905  307F               	movlw	127
  8108     0906  04F9               	iorwf	___fldiv@b+3,f
  8109     0907                     l2606:
  8110     0907  0829               	movf	___fldiv@sign,w
  8111     0908  04F9               	iorwf	___fldiv@b+3,f
  8112     0909                     l2608:
  8113     0909  0879               	movf	___fldiv@b+3,w
  8114     090A  00F5               	movwf	?___fldiv+3
  8115     090B  0878               	movf	___fldiv@b+2,w
  8116     090C  00F4               	movwf	?___fldiv+2
  8117     090D  0877               	movf	___fldiv@b+1,w
  8118     090E  00F3               	movwf	?___fldiv+1
  8119     090F  0876               	movf	___fldiv@b,w
  8120     0910  00F2               	movwf	?___fldiv
  8121     0911  2A6D               	goto	l626
  8122     0912                     l2612:
  8123     0912  0830               	movf	___fldiv@bexp,w
  8124     0913  1D03               	btfss	3,2
  8125     0914  2916               	goto	u3401
  8126     0915  2917               	goto	u3400
  8127     0916                     u3401:
  8128     0916  2920               	goto	l2618
  8129     0917                     u3400:
  8130     0917                     l2614:
  8131     0917  3000               	movlw	0
  8132     0918  00F5               	movwf	?___fldiv+3
  8133     0919  3000               	movlw	0
  8134     091A  00F4               	movwf	?___fldiv+2
  8135     091B  3000               	movlw	0
  8136     091C  00F3               	movwf	?___fldiv+1
  8137     091D  3000               	movlw	0
  8138     091E  00F2               	movwf	?___fldiv
  8139     091F  2A6D               	goto	l626
  8140     0920                     l2618:
  8141     0920  0830               	movf	___fldiv@bexp,w
  8142     0921  00A0               	movwf	??___fldiv
  8143     0922  01A1               	clrf	??___fldiv+1
  8144     0923  0821               	movf	??___fldiv+1,w
  8145     0924  00A3               	movwf	??___fldiv+3
  8146     0925  0831               	movf	___fldiv@aexp,w
  8147     0926  0220               	subwf	??___fldiv,w
  8148     0927  00A2               	movwf	??___fldiv+2
  8149     0928  1C03               	skipc
  8150     0929  03A3               	decf	??___fldiv+3,f
  8151     092A  0822               	movf	??___fldiv+2,w
  8152     092B  3E7F               	addlw	127
  8153     092C  00AA               	movwf	___fldiv@new_exp
  8154     092D  0823               	movf	??___fldiv+3,w
  8155     092E  1803               	skipnc
  8156     092F  3E01               	addlw	1
  8157     0930  3E00               	addlw	0
  8158     0931  00AB               	movwf	___fldiv@new_exp+1
  8159     0932                     l2620:
  8160     0932  0879               	movf	___fldiv@b+3,w
  8161     0933  00A8               	movwf	___fldiv@rem+3
  8162     0934  0878               	movf	___fldiv@b+2,w
  8163     0935  00A7               	movwf	___fldiv@rem+2
  8164     0936  0877               	movf	___fldiv@b+1,w
  8165     0937  00A6               	movwf	___fldiv@rem+1
  8166     0938  0876               	movf	___fldiv@b,w
  8167     0939  00A5               	movwf	___fldiv@rem
  8168     093A                     l2622:
  8169     093A  3000               	movlw	0
  8170     093B  00F9               	movwf	___fldiv@b+3
  8171     093C  3000               	movlw	0
  8172     093D  00F8               	movwf	___fldiv@b+2
  8173     093E  3000               	movlw	0
  8174     093F  00F7               	movwf	___fldiv@b+1
  8175     0940  3000               	movlw	0
  8176     0941  00F6               	movwf	___fldiv@b
  8177     0942                     l2624:
  8178     0942  3000               	movlw	0
  8179     0943  00AF               	movwf	___fldiv@grs+3
  8180     0944  3000               	movlw	0
  8181     0945  00AE               	movwf	___fldiv@grs+2
  8182     0946  3000               	movlw	0
  8183     0947  00AD               	movwf	___fldiv@grs+1
  8184     0948  3000               	movlw	0
  8185     0949  00AC               	movwf	___fldiv@grs
  8186     094A                     l2626:
  8187     094A  01B1               	clrf	___fldiv@aexp
  8188     094B  299A               	goto	l2646
  8189     094C                     l2628:
  8190     094C  0831               	movf	___fldiv@aexp,w
  8191     094D  1903               	btfsc	3,2
  8192     094E  2950               	goto	u3411
  8193     094F  2951               	goto	u3410
  8194     0950                     u3411:
  8195     0950  2971               	goto	l2638
  8196     0951                     u3410:
  8197     0951                     l2630:
  8198     0951  3001               	movlw	1
  8199     0952  00A0               	movwf	??___fldiv
  8200     0953                     u3425:
  8201     0953  1003               	clrc
  8202     0954  0DA5               	rlf	___fldiv@rem,f
  8203     0955  0DA6               	rlf	___fldiv@rem+1,f
  8204     0956  0DA7               	rlf	___fldiv@rem+2,f
  8205     0957  0DA8               	rlf	___fldiv@rem+3,f
  8206     0958  0BA0               	decfsz	??___fldiv,f
  8207     0959  2953               	goto	u3425
  8208     095A  3001               	movlw	1
  8209     095B  00A0               	movwf	??___fldiv
  8210     095C                     u3435:
  8211     095C  1003               	clrc
  8212     095D  0DF6               	rlf	___fldiv@b,f
  8213     095E  0DF7               	rlf	___fldiv@b+1,f
  8214     095F  0DF8               	rlf	___fldiv@b+2,f
  8215     0960  0DF9               	rlf	___fldiv@b+3,f
  8216     0961  0BA0               	decfsz	??___fldiv,f
  8217     0962  295C               	goto	u3435
  8218     0963                     l2632:
  8219     0963  1FAF               	btfss	___fldiv@grs+3,7
  8220     0964  2966               	goto	u3441
  8221     0965  2967               	goto	u3440
  8222     0966                     u3441:
  8223     0966  2968               	goto	l2636
  8224     0967                     u3440:
  8225     0967                     l2634:
  8226     0967  1476               	bsf	___fldiv@b,0
  8227     0968                     l2636:
  8228     0968  3001               	movlw	1
  8229     0969  00A0               	movwf	??___fldiv
  8230     096A                     u3455:
  8231     096A  1003               	clrc
  8232     096B  0DAC               	rlf	___fldiv@grs,f
  8233     096C  0DAD               	rlf	___fldiv@grs+1,f
  8234     096D  0DAE               	rlf	___fldiv@grs+2,f
  8235     096E  0DAF               	rlf	___fldiv@grs+3,f
  8236     096F  0BA0               	decfsz	??___fldiv,f
  8237     0970  296A               	goto	u3455
  8238     0971                     l2638:
  8239     0971  0875               	movf	___fldiv@a+3,w
  8240     0972  0228               	subwf	___fldiv@rem+3,w
  8241     0973  1D03               	skipz
  8242     0974  297F               	goto	u3465
  8243     0975  0874               	movf	___fldiv@a+2,w
  8244     0976  0227               	subwf	___fldiv@rem+2,w
  8245     0977  1D03               	skipz
  8246     0978  297F               	goto	u3465
  8247     0979  0873               	movf	___fldiv@a+1,w
  8248     097A  0226               	subwf	___fldiv@rem+1,w
  8249     097B  1D03               	skipz
  8250     097C  297F               	goto	u3465
  8251     097D  0872               	movf	___fldiv@a,w
  8252     097E  0225               	subwf	___fldiv@rem,w
  8253     097F                     u3465:
  8254     097F  1C03               	skipc
  8255     0980  2982               	goto	u3461
  8256     0981  2983               	goto	u3460
  8257     0982                     u3461:
  8258     0982  2998               	goto	l2644
  8259     0983                     u3460:
  8260     0983                     l2640:
  8261     0983  172F               	bsf	___fldiv@grs+3,6
  8262     0984                     l2642:
  8263     0984  0872               	movf	___fldiv@a,w
  8264     0985  02A5               	subwf	___fldiv@rem,f
  8265     0986  0873               	movf	___fldiv@a+1,w
  8266     0987  1C03               	skipc
  8267     0988  0F73               	incfsz	___fldiv@a+1,w
  8268     0989  298B               	goto	u3475
  8269     098A  298C               	goto	u3476
  8270     098B                     u3475:
  8271     098B  02A6               	subwf	___fldiv@rem+1,f
  8272     098C                     u3476:
  8273     098C  0874               	movf	___fldiv@a+2,w
  8274     098D  1C03               	skipc
  8275     098E  0F74               	incfsz	___fldiv@a+2,w
  8276     098F  2991               	goto	u3477
  8277     0990  2992               	goto	u3478
  8278     0991                     u3477:
  8279     0991  02A7               	subwf	___fldiv@rem+2,f
  8280     0992                     u3478:
  8281     0992  0875               	movf	___fldiv@a+3,w
  8282     0993  1C03               	skipc
  8283     0994  0F75               	incfsz	___fldiv@a+3,w
  8284     0995  2997               	goto	u3479
  8285     0996  2998               	goto	u3470
  8286     0997                     u3479:
  8287     0997  02A8               	subwf	___fldiv@rem+3,f
  8288     0998                     u3470:
  8289     0998                     l2644:
  8290     0998  3001               	movlw	1
  8291     0999  07B1               	addwf	___fldiv@aexp,f
  8292     099A                     l2646:
  8293     099A  301A               	movlw	26
  8294     099B  0231               	subwf	___fldiv@aexp,w
  8295     099C  1C03               	skipc
  8296     099D  299F               	goto	u3481
  8297     099E  29A0               	goto	u3480
  8298     099F                     u3481:
  8299     099F  294C               	goto	l2628
  8300     09A0                     u3480:
  8301     09A0                     l2648:
  8302     09A0  0828               	movf	___fldiv@rem+3,w
  8303     09A1  0427               	iorwf	___fldiv@rem+2,w
  8304     09A2  0426               	iorwf	___fldiv@rem+1,w
  8305     09A3  0425               	iorwf	___fldiv@rem,w
  8306     09A4  1903               	skipnz
  8307     09A5  29A7               	goto	u3491
  8308     09A6  29A8               	goto	u3490
  8309     09A7                     u3491:
  8310     09A7  29C7               	goto	l2662
  8311     09A8                     u3490:
  8312     09A8                     l2650:
  8313     09A8  142C               	bsf	___fldiv@grs,0
  8314     09A9  29C7               	goto	l2662
  8315     09AA                     l2652:
  8316     09AA  3001               	movlw	1
  8317     09AB  00A0               	movwf	??___fldiv
  8318     09AC                     u3505:
  8319     09AC  1003               	clrc
  8320     09AD  0DF6               	rlf	___fldiv@b,f
  8321     09AE  0DF7               	rlf	___fldiv@b+1,f
  8322     09AF  0DF8               	rlf	___fldiv@b+2,f
  8323     09B0  0DF9               	rlf	___fldiv@b+3,f
  8324     09B1  0BA0               	decfsz	??___fldiv,f
  8325     09B2  29AC               	goto	u3505
  8326     09B3                     l2654:
  8327     09B3  1FAF               	btfss	___fldiv@grs+3,7
  8328     09B4  29B6               	goto	u3511
  8329     09B5  29B7               	goto	u3510
  8330     09B6                     u3511:
  8331     09B6  29B8               	goto	l2658
  8332     09B7                     u3510:
  8333     09B7                     l2656:
  8334     09B7  1476               	bsf	___fldiv@b,0
  8335     09B8                     l2658:
  8336     09B8  3001               	movlw	1
  8337     09B9  00A0               	movwf	??___fldiv
  8338     09BA                     u3525:
  8339     09BA  1003               	clrc
  8340     09BB  0DAC               	rlf	___fldiv@grs,f
  8341     09BC  0DAD               	rlf	___fldiv@grs+1,f
  8342     09BD  0DAE               	rlf	___fldiv@grs+2,f
  8343     09BE  0DAF               	rlf	___fldiv@grs+3,f
  8344     09BF  0BA0               	decfsz	??___fldiv,f
  8345     09C0  29BA               	goto	u3525
  8346     09C1                     l2660:
  8347     09C1  30FF               	movlw	255
  8348     09C2  07AA               	addwf	___fldiv@new_exp,f
  8349     09C3  1803               	skipnc
  8350     09C4  0AAB               	incf	___fldiv@new_exp+1,f
  8351     09C5  30FF               	movlw	255
  8352     09C6  07AB               	addwf	___fldiv@new_exp+1,f
  8353     09C7                     l2662:
  8354     09C7  1FF8               	btfss	___fldiv@b+2,7
  8355     09C8  29CA               	goto	u3531
  8356     09C9  29CB               	goto	u3530
  8357     09CA                     u3531:
  8358     09CA  29AA               	goto	l2652
  8359     09CB                     u3530:
  8360     09CB                     l2664:
  8361     09CB  01B1               	clrf	___fldiv@aexp
  8362     09CC                     l2666:
  8363     09CC  1FAF               	btfss	___fldiv@grs+3,7
  8364     09CD  29CF               	goto	u3541
  8365     09CE  29D0               	goto	u3540
  8366     09CF                     u3541:
  8367     09CF  29EC               	goto	l2674
  8368     09D0                     u3540:
  8369     09D0                     l2668:
  8370     09D0  30FF               	movlw	255
  8371     09D1  052C               	andwf	___fldiv@grs,w
  8372     09D2  00A0               	movwf	??___fldiv
  8373     09D3  30FF               	movlw	255
  8374     09D4  052D               	andwf	___fldiv@grs+1,w
  8375     09D5  00A1               	movwf	??___fldiv+1
  8376     09D6  30FF               	movlw	255
  8377     09D7  052E               	andwf	___fldiv@grs+2,w
  8378     09D8  00A2               	movwf	??___fldiv+2
  8379     09D9  307F               	movlw	127
  8380     09DA  052F               	andwf	___fldiv@grs+3,w
  8381     09DB  00A3               	movwf	??___fldiv+3
  8382     09DC  0823               	movf	??___fldiv+3,w
  8383     09DD  0422               	iorwf	??___fldiv+2,w
  8384     09DE  0421               	iorwf	??___fldiv+1,w
  8385     09DF  0420               	iorwf	??___fldiv,w
  8386     09E0  1903               	skipnz
  8387     09E1  29E3               	goto	u3551
  8388     09E2  29E4               	goto	u3550
  8389     09E3                     u3551:
  8390     09E3  29E7               	goto	l640
  8391     09E4                     u3550:
  8392     09E4                     l2670:
  8393     09E4  3001               	movlw	1
  8394     09E5  00B1               	movwf	___fldiv@aexp
  8395     09E6  29EC               	goto	l2674
  8396     09E7                     l640:
  8397     09E7  1C76               	btfss	___fldiv@b,0
  8398     09E8  29EA               	goto	u3561
  8399     09E9  29EB               	goto	u3560
  8400     09EA                     u3561:
  8401     09EA  29EC               	goto	l2674
  8402     09EB                     u3560:
  8403     09EB  29E4               	goto	l2670
  8404     09EC                     l2674:
  8405     09EC  0831               	movf	___fldiv@aexp,w
  8406     09ED  1903               	btfsc	3,2
  8407     09EE  29F0               	goto	u3571
  8408     09EF  29F1               	goto	u3570
  8409     09F0                     u3571:
  8410     09F0  2A22               	goto	l2684
  8411     09F1                     u3570:
  8412     09F1                     l2676:
  8413     09F1  3001               	movlw	1
  8414     09F2  07F6               	addwf	___fldiv@b,f
  8415     09F3  3000               	movlw	0
  8416     09F4  1803               	skipnc
  8417     09F5  3001               	movlw	1
  8418     09F6  07F7               	addwf	___fldiv@b+1,f
  8419     09F7  3000               	movlw	0
  8420     09F8  1803               	skipnc
  8421     09F9  3001               	movlw	1
  8422     09FA  07F8               	addwf	___fldiv@b+2,f
  8423     09FB  3000               	movlw	0
  8424     09FC  1803               	skipnc
  8425     09FD  3001               	movlw	1
  8426     09FE  07F9               	addwf	___fldiv@b+3,f
  8427     09FF                     l2678:
  8428     09FF  1C79               	btfss	___fldiv@b+3,0
  8429     0A00  2A02               	goto	u3581
  8430     0A01  2A03               	goto	u3580
  8431     0A02                     u3581:
  8432     0A02  2A22               	goto	l2684
  8433     0A03                     u3580:
  8434     0A03                     l2680:
  8435     0A03  0876               	movf	___fldiv@b,w
  8436     0A04  00A0               	movwf	??___fldiv
  8437     0A05  0877               	movf	___fldiv@b+1,w
  8438     0A06  00A1               	movwf	??___fldiv+1
  8439     0A07  0878               	movf	___fldiv@b+2,w
  8440     0A08  00A2               	movwf	??___fldiv+2
  8441     0A09  0879               	movf	___fldiv@b+3,w
  8442     0A0A  00A3               	movwf	??___fldiv+3
  8443     0A0B  3001               	movlw	1
  8444     0A0C  00A4               	movwf	??___fldiv+4
  8445     0A0D                     u3595:
  8446     0A0D  0D23               	rlf	??___fldiv+3,w
  8447     0A0E  0CA3               	rrf	??___fldiv+3,f
  8448     0A0F  0CA2               	rrf	??___fldiv+2,f
  8449     0A10  0CA1               	rrf	??___fldiv+1,f
  8450     0A11  0CA0               	rrf	??___fldiv,f
  8451     0A12                     u3590:
  8452     0A12  0BA4               	decfsz	??___fldiv+4,f
  8453     0A13  2A0D               	goto	u3595
  8454     0A14  0823               	movf	??___fldiv+3,w
  8455     0A15  00F9               	movwf	___fldiv@b+3
  8456     0A16  0822               	movf	??___fldiv+2,w
  8457     0A17  00F8               	movwf	___fldiv@b+2
  8458     0A18  0821               	movf	??___fldiv+1,w
  8459     0A19  00F7               	movwf	___fldiv@b+1
  8460     0A1A  0820               	movf	??___fldiv,w
  8461     0A1B  00F6               	movwf	___fldiv@b
  8462     0A1C                     l2682:
  8463     0A1C  3001               	movlw	1
  8464     0A1D  07AA               	addwf	___fldiv@new_exp,f
  8465     0A1E  1803               	skipnc
  8466     0A1F  0AAB               	incf	___fldiv@new_exp+1,f
  8467     0A20  3000               	movlw	0
  8468     0A21  07AB               	addwf	___fldiv@new_exp+1,f
  8469     0A22                     l2684:
  8470     0A22  082B               	movf	___fldiv@new_exp+1,w
  8471     0A23  3A80               	xorlw	128
  8472     0A24  00FF               	movwf	btemp+1
  8473     0A25  3080               	movlw	128
  8474     0A26  027F               	subwf	btemp+1,w
  8475     0A27  1D03               	skipz
  8476     0A28  2A2B               	goto	u3605
  8477     0A29  30FF               	movlw	255
  8478     0A2A  022A               	subwf	___fldiv@new_exp,w
  8479     0A2B                     u3605:
  8480     0A2B  1C03               	skipc
  8481     0A2C  2A2E               	goto	u3601
  8482     0A2D  2A2F               	goto	u3600
  8483     0A2E                     u3601:
  8484     0A2E  2A3D               	goto	l2688
  8485     0A2F                     u3600:
  8486     0A2F                     l2686:
  8487     0A2F  30FF               	movlw	255
  8488     0A30  1283               	bcf	3,5	;RP0=0, select bank0
  8489     0A31  1303               	bcf	3,6	;RP1=0, select bank0
  8490     0A32  00AA               	movwf	___fldiv@new_exp
  8491     0A33  3000               	movlw	0
  8492     0A34  00AB               	movwf	___fldiv@new_exp+1
  8493     0A35  3000               	movlw	0
  8494     0A36  00F9               	movwf	___fldiv@b+3
  8495     0A37  3000               	movlw	0
  8496     0A38  00F8               	movwf	___fldiv@b+2
  8497     0A39  3000               	movlw	0
  8498     0A3A  00F7               	movwf	___fldiv@b+1
  8499     0A3B  3000               	movlw	0
  8500     0A3C  00F6               	movwf	___fldiv@b
  8501     0A3D                     l2688:
  8502     0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  8503     0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  8504     0A3F  082B               	movf	___fldiv@new_exp+1,w
  8505     0A40  3A80               	xorlw	128
  8506     0A41  00FF               	movwf	btemp+1
  8507     0A42  3080               	movlw	128
  8508     0A43  027F               	subwf	btemp+1,w
  8509     0A44  1D03               	skipz
  8510     0A45  2A48               	goto	u3615
  8511     0A46  3001               	movlw	1
  8512     0A47  022A               	subwf	___fldiv@new_exp,w
  8513     0A48                     u3615:
  8514     0A48  1803               	skipnc
  8515     0A49  2A4B               	goto	u3611
  8516     0A4A  2A4C               	goto	u3610
  8517     0A4B                     u3611:
  8518     0A4B  2A59               	goto	l646
  8519     0A4C                     u3610:
  8520     0A4C                     l2690:
  8521     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  8522     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  8523     0A4E  01AA               	clrf	___fldiv@new_exp
  8524     0A4F  01AB               	clrf	___fldiv@new_exp+1
  8525     0A50                     l2692:
  8526     0A50  3000               	movlw	0
  8527     0A51  00F9               	movwf	___fldiv@b+3
  8528     0A52  3000               	movlw	0
  8529     0A53  00F8               	movwf	___fldiv@b+2
  8530     0A54  3000               	movlw	0
  8531     0A55  00F7               	movwf	___fldiv@b+1
  8532     0A56  3000               	movlw	0
  8533     0A57  00F6               	movwf	___fldiv@b
  8534     0A58                     l2694:
  8535     0A58  01A9               	clrf	___fldiv@sign
  8536     0A59                     l646:
  8537     0A59  1283               	bcf	3,5	;RP0=0, select bank0
  8538     0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  8539     0A5B  082A               	movf	___fldiv@new_exp,w
  8540     0A5C  00B0               	movwf	___fldiv@bexp
  8541     0A5D                     l2696:
  8542     0A5D  1C30               	btfss	___fldiv@bexp,0
  8543     0A5E  2A60               	goto	u3621
  8544     0A5F  2A61               	goto	u3620
  8545     0A60                     u3621:
  8546     0A60  2A63               	goto	l2700
  8547     0A61                     u3620:
  8548     0A61                     l2698:
  8549     0A61  17F8               	bsf	___fldiv@b+2,7
  8550     0A62  2A65               	goto	l648
  8551     0A63                     l2700:
  8552     0A63  307F               	movlw	127
  8553     0A64  05F8               	andwf	___fldiv@b+2,f
  8554     0A65                     l648:
  8555     0A65  0830               	movf	___fldiv@bexp,w
  8556     0A66  00A0               	movwf	??___fldiv
  8557     0A67  1003               	clrc
  8558     0A68  0C20               	rrf	??___fldiv,w
  8559     0A69  00F9               	movwf	___fldiv@b+3
  8560     0A6A  0829               	movf	___fldiv@sign,w
  8561     0A6B  04F9               	iorwf	___fldiv@b+3,f
  8562     0A6C  2909               	goto	l2608
  8563     0A6D                     l626:
  8564     0A6D  0008               	return
  8565     0A6E                     __end_of___fldiv:
  8566                           
  8567                           	psect	text35
  8568     1F24                     __ptext35:	
  8569 ;; *************** function _LCD_Write_String *****************
  8570 ;; Defined at:
  8571 ;;		line 87 in file "lcd.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  str             2    7[COMMON] PTR unsigned char 
  8574 ;;		 -> STR_5(15), STR_3(15), buffer(20), STR_1(15), 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  i               2    3[BANK0 ] int 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8586 ;;      Params:         2       0       0       0       0
  8587 ;;      Locals:         0       2       0       0       0
  8588 ;;      Temps:          0       3       0       0       0
  8589 ;;      Totals:         2       5       0       0       0
  8590 ;;Total ram usage:        7 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; Hardware stack levels required when called: 3
  8593 ;; This function calls:
  8594 ;;		_LCD_Write_Char
  8595 ;; This function is called by:
  8596 ;;		_LCD_Display_1
  8597 ;;		_LCD_Display_2
  8598 ;;		_LCD_Display_3
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602     1F24                     _LCD_Write_String:	
  8603                           ;psect for function _LCD_Write_String
  8604                           
  8605     1F24                     l4134:	
  8606                           ;incstack = 0
  8607                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8608                           
  8609                           
  8610                           ;lcd.c: 87: void LCD_Write_String(char* str);lcd.c: 88: {;lcd.c: 89:     int i = 0;
  8611     1F24  1283               	bcf	3,5	;RP0=0, select bank0
  8612     1F25  1303               	bcf	3,6	;RP1=0, select bank0
  8613     1F26  01A3               	clrf	LCD_Write_String@i
  8614     1F27  01A4               	clrf	LCD_Write_String@i+1
  8615                           
  8616                           ;lcd.c: 90:     while(str[i] != '\0')
  8617     1F28  2F4D               	goto	l4140
  8618     1F29                     l4136:
  8619                           
  8620                           ;lcd.c: 91:     {;lcd.c: 92:         LCD_Write_Char(str[i++]);
  8621     1F29  0823               	movf	LCD_Write_String@i,w
  8622     1F2A  0777               	addwf	LCD_Write_String@str,w
  8623     1F2B  00A1               	movwf	??_LCD_Write_String+1
  8624     1F2C  0878               	movf	LCD_Write_String@str+1,w
  8625     1F2D  00A0               	movwf	??_LCD_Write_String
  8626     1F2E  1803               	skipnc
  8627     1F2F  0AA0               	incf	??_LCD_Write_String,f
  8628     1F30  1FA3               	btfss	LCD_Write_String@i,7
  8629     1F31  2F33               	goto	u6140
  8630     1F32  03A0               	decf	??_LCD_Write_String,f
  8631     1F33                     u6140:
  8632     1F33  1283               	bcf	3,5	;RP0=0, select bank0
  8633     1F34  1303               	bcf	3,6	;RP1=0, select bank0
  8634     1F35  0820               	movf	??_LCD_Write_String,w
  8635     1F36  00A2               	movwf	??_LCD_Write_String+2
  8636     1F37  0822               	movf	??_LCD_Write_String+2,w
  8637     1F38  00FF               	movwf	btemp+1
  8638     1F39  0821               	movf	??_LCD_Write_String+1,w
  8639     1F3A  0084               	movwf	4
  8640     1F3B  160A  158A  2000  160A  158A  	fcall	stringtab
  8641     1F40  160A  158A  276A  160A  158A  	fcall	_LCD_Write_Char
  8642     1F45                     l4138:
  8643     1F45  3001               	movlw	1
  8644     1F46  1283               	bcf	3,5	;RP0=0, select bank0
  8645     1F47  1303               	bcf	3,6	;RP1=0, select bank0
  8646     1F48  07A3               	addwf	LCD_Write_String@i,f
  8647     1F49  1803               	skipnc
  8648     1F4A  0AA4               	incf	LCD_Write_String@i+1,f
  8649     1F4B  3000               	movlw	0
  8650     1F4C  07A4               	addwf	LCD_Write_String@i+1,f
  8651     1F4D                     l4140:
  8652                           
  8653                           ;lcd.c: 90:     while(str[i] != '\0')
  8654     1F4D  0823               	movf	LCD_Write_String@i,w
  8655     1F4E  0777               	addwf	LCD_Write_String@str,w
  8656     1F4F  00A1               	movwf	??_LCD_Write_String+1
  8657     1F50  0878               	movf	LCD_Write_String@str+1,w
  8658     1F51  00A0               	movwf	??_LCD_Write_String
  8659     1F52  1803               	skipnc
  8660     1F53  0AA0               	incf	??_LCD_Write_String,f
  8661     1F54  1FA3               	btfss	LCD_Write_String@i,7
  8662     1F55  2F57               	goto	u6150
  8663     1F56  03A0               	decf	??_LCD_Write_String,f
  8664     1F57                     u6150:
  8665     1F57  1283               	bcf	3,5	;RP0=0, select bank0
  8666     1F58  1303               	bcf	3,6	;RP1=0, select bank0
  8667     1F59  0820               	movf	??_LCD_Write_String,w
  8668     1F5A  00A2               	movwf	??_LCD_Write_String+2
  8669     1F5B  0822               	movf	??_LCD_Write_String+2,w
  8670     1F5C  00FF               	movwf	btemp+1
  8671     1F5D  0821               	movf	??_LCD_Write_String+1,w
  8672     1F5E  0084               	movwf	4
  8673     1F5F  160A  158A  2000  160A  158A  	fcall	stringtab
  8674     1F64  3A00               	xorlw	0
  8675     1F65  1D03               	skipz
  8676     1F66  2F68               	goto	u6161
  8677     1F67  2F69               	goto	u6160
  8678     1F68                     u6161:
  8679     1F68  2F29               	goto	l4136
  8680     1F69                     u6160:
  8681     1F69                     l167:
  8682     1F69  0008               	return
  8683     1F6A                     __end_of_LCD_Write_String:
  8684                           
  8685                           	psect	text36
  8686     1F6A                     __ptext36:	
  8687 ;; *************** function _LCD_Write_Char *****************
  8688 ;; Defined at:
  8689 ;;		line 66 in file "lcd.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  data            1    wreg     unsigned char 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  data            1    6[COMMON] unsigned char 
  8694 ;;  low4            1    5[COMMON] unsigned char 
  8695 ;;  high4           1    4[COMMON] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8705 ;;      Params:         0       0       0       0       0
  8706 ;;      Locals:         3       0       0       0       0
  8707 ;;      Temps:          1       0       0       0       0
  8708 ;;      Totals:         4       0       0       0       0
  8709 ;;Total ram usage:        4 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 2
  8712 ;; This function calls:
  8713 ;;		_LCD_DATA
  8714 ;; This function is called by:
  8715 ;;		_LCD_Write_String
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719     1F6A                     _LCD_Write_Char:	
  8720                           ;psect for function _LCD_Write_Char
  8721                           
  8722                           
  8723                           ;incstack = 0
  8724                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8725                           ;LCD_Write_Char@data stored from wreg
  8726     1F6A  00F6               	movwf	LCD_Write_Char@data
  8727     1F6B                     l4076:
  8728                           
  8729                           ;lcd.c: 66: void LCD_Write_Char(char data);lcd.c: 67: {;lcd.c: 68:     char low4, high4;
      +                          ;lcd.c: 70:     high4 = data >> 4;
  8730     1F6B  0876               	movf	LCD_Write_Char@data,w
  8731     1F6C  00F3               	movwf	??_LCD_Write_Char
  8732     1F6D  3004               	movlw	4
  8733     1F6E                     u6085:
  8734     1F6E  1003               	clrc
  8735     1F6F  0CF3               	rrf	??_LCD_Write_Char,f
  8736     1F70  3EFF               	addlw	-1
  8737     1F71  1D03               	skipz
  8738     1F72  2F6E               	goto	u6085
  8739     1F73  0873               	movf	??_LCD_Write_Char,w
  8740     1F74  00F4               	movwf	LCD_Write_Char@high4
  8741     1F75                     l4078:
  8742                           
  8743                           ;lcd.c: 71:     low4 = data & 0x0f;
  8744     1F75  0876               	movf	LCD_Write_Char@data,w
  8745     1F76  00F5               	movwf	LCD_Write_Char@low4
  8746     1F77                     l4080:
  8747     1F77  300F               	movlw	15
  8748     1F78  05F5               	andwf	LCD_Write_Char@low4,f
  8749     1F79                     l4082:
  8750                           
  8751                           ;lcd.c: 73:     PORTBbits.RB5 = 1;
  8752     1F79  1283               	bcf	3,5	;RP0=0, select bank0
  8753     1F7A  1303               	bcf	3,6	;RP1=0, select bank0
  8754     1F7B  1686               	bsf	6,5	;volatile
  8755     1F7C                     l4084:
  8756                           
  8757                           ;lcd.c: 74:     LCD_DATA(high4);
  8758     1F7C  0874               	movf	LCD_Write_Char@high4,w
  8759     1F7D  160A  158A  2539  160A  158A  	fcall	_LCD_DATA
  8760     1F82                     l4086:
  8761                           
  8762                           ;lcd.c: 75:     PORTBbits.RB4 = 1;
  8763     1F82  1283               	bcf	3,5	;RP0=0, select bank0
  8764     1F83  1303               	bcf	3,6	;RP1=0, select bank0
  8765     1F84  1606               	bsf	6,4	;volatile
  8766     1F85                     l4088:
  8767                           
  8768                           ;lcd.c: 76:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  8769     1F85  30D6               	movlw	214
  8770     1F86  00F3               	movwf	??_LCD_Write_Char
  8771     1F87                     u6367:
  8772     1F87  2F88               	nop2
  8773     1F88  2F89               	nop2
  8774     1F89  0BF3               	decfsz	??_LCD_Write_Char,f
  8775     1F8A  2F87               	goto	u6367
  8776     1F8B  0000               	nop
  8777     1F8C                     l4090:
  8778                           
  8779                           ;lcd.c: 77:     PORTBbits.RB4 = 0;
  8780     1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  8781     1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  8782     1F8E  1206               	bcf	6,4	;volatile
  8783     1F8F                     l4092:
  8784                           
  8785                           ;lcd.c: 78:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  8786     1F8F  30D6               	movlw	214
  8787     1F90  00F3               	movwf	??_LCD_Write_Char
  8788     1F91                     u6377:
  8789     1F91  2F92               	nop2
  8790     1F92  2F93               	nop2
  8791     1F93  0BF3               	decfsz	??_LCD_Write_Char,f
  8792     1F94  2F91               	goto	u6377
  8793     1F95  0000               	nop
  8794     1F96                     l4094:
  8795                           
  8796                           ;lcd.c: 80:     LCD_DATA(low4);
  8797     1F96  0875               	movf	LCD_Write_Char@low4,w
  8798     1F97  160A  158A  2539  160A  158A  	fcall	_LCD_DATA
  8799     1F9C                     l4096:
  8800                           
  8801                           ;lcd.c: 81:     PORTBbits.RB4 = 1;
  8802     1F9C  1283               	bcf	3,5	;RP0=0, select bank0
  8803     1F9D  1303               	bcf	3,6	;RP1=0, select bank0
  8804     1F9E  1606               	bsf	6,4	;volatile
  8805                           
  8806                           ;lcd.c: 82:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  8807     1F9F  30D6               	movlw	214
  8808     1FA0  00F3               	movwf	??_LCD_Write_Char
  8809     1FA1                     u6387:
  8810     1FA1  2FA2               	nop2
  8811     1FA2  2FA3               	nop2
  8812     1FA3  0BF3               	decfsz	??_LCD_Write_Char,f
  8813     1FA4  2FA1               	goto	u6387
  8814     1FA5  0000               	nop
  8815     1FA6                     l4098:
  8816                           
  8817                           ;lcd.c: 83:     PORTBbits.RB4 = 0;
  8818     1FA6  1283               	bcf	3,5	;RP0=0, select bank0
  8819     1FA7  1303               	bcf	3,6	;RP1=0, select bank0
  8820     1FA8  1206               	bcf	6,4	;volatile
  8821                           
  8822                           ;lcd.c: 84:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  8823     1FA9  30D6               	movlw	214
  8824     1FAA  00F3               	movwf	??_LCD_Write_Char
  8825     1FAB                     u6397:
  8826     1FAB  2FAC               	nop2
  8827     1FAC  2FAD               	nop2
  8828     1FAD  0BF3               	decfsz	??_LCD_Write_Char,f
  8829     1FAE  2FAB               	goto	u6397
  8830     1FAF  0000               	nop
  8831     1FB0                     l161:
  8832     1FB0  0008               	return
  8833     1FB1                     __end_of_LCD_Write_Char:
  8834                           
  8835                           	psect	text37
  8836     1FB1                     __ptext37:	
  8837 ;; *************** function _LCD_Set_Cursor *****************
  8838 ;; Defined at:
  8839 ;;		line 102 in file "lcd.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  r               1    wreg     unsigned char 
  8842 ;;  c               1    5[COMMON] unsigned char 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  r               1    0[BANK0 ] unsigned char 
  8845 ;;  temp            1    3[BANK0 ] unsigned char 
  8846 ;;  low4            1    2[BANK0 ] unsigned char 
  8847 ;;  high4           1    1[BANK0 ] unsigned char 
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0, pclath, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8857 ;;      Params:         1       0       0       0       0
  8858 ;;      Locals:         0       4       0       0       0
  8859 ;;      Temps:          1       0       0       0       0
  8860 ;;      Totals:         2       4       0       0       0
  8861 ;;Total ram usage:        6 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; Hardware stack levels required when called: 3
  8864 ;; This function calls:
  8865 ;;		_LCD_CMD
  8866 ;; This function is called by:
  8867 ;;		_LCD_Display_1
  8868 ;;		_LCD_Display_2
  8869 ;;		_LCD_Display_3
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873     1FB1                     _LCD_Set_Cursor:	
  8874                           ;psect for function _LCD_Set_Cursor
  8875                           
  8876                           
  8877                           ;incstack = 0
  8878                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8879                           ;LCD_Set_Cursor@r stored from wreg
  8880     1FB1  1283               	bcf	3,5	;RP0=0, select bank0
  8881     1FB2  1303               	bcf	3,6	;RP1=0, select bank0
  8882     1FB3  00A0               	movwf	LCD_Set_Cursor@r
  8883     1FB4                     l4110:
  8884                           
  8885                           ;lcd.c: 102: void LCD_Set_Cursor(unsigned char r, unsigned char c);lcd.c: 103: {;lcd.c: 
      +                          104:     unsigned char temp, high4, low4;;lcd.c: 106:     if(r == 1)
  8886     1FB4  0320               	decf	LCD_Set_Cursor@r,w
  8887     1FB5  1D03               	btfss	3,2
  8888     1FB6  2FB8               	goto	u6101
  8889     1FB7  2FB9               	goto	u6100
  8890     1FB8                     u6101:
  8891     1FB8  2FD8               	goto	l4122
  8892     1FB9                     u6100:
  8893     1FB9                     l4112:
  8894                           
  8895                           ;lcd.c: 107:     {;lcd.c: 108:         temp = 0x80 + c - 1;
  8896     1FB9  0875               	movf	LCD_Set_Cursor@c,w
  8897     1FBA  3E7F               	addlw	127
  8898     1FBB  00A3               	movwf	LCD_Set_Cursor@temp
  8899                           
  8900                           ;lcd.c: 109:         high4 = temp >> 4;
  8901     1FBC  0823               	movf	LCD_Set_Cursor@temp,w
  8902     1FBD  00F6               	movwf	??_LCD_Set_Cursor
  8903     1FBE  3004               	movlw	4
  8904     1FBF                     u6115:
  8905     1FBF  1003               	clrc
  8906     1FC0  0CF6               	rrf	??_LCD_Set_Cursor,f
  8907     1FC1  3EFF               	addlw	-1
  8908     1FC2  1D03               	skipz
  8909     1FC3  2FBF               	goto	u6115
  8910     1FC4  0876               	movf	??_LCD_Set_Cursor,w
  8911     1FC5  00A1               	movwf	LCD_Set_Cursor@high4
  8912     1FC6                     l4114:
  8913                           
  8914                           ;lcd.c: 110:         low4 = temp & 0x0f;
  8915     1FC6  0823               	movf	LCD_Set_Cursor@temp,w
  8916     1FC7  00A2               	movwf	LCD_Set_Cursor@low4
  8917     1FC8                     l4116:
  8918     1FC8  300F               	movlw	15
  8919     1FC9  05A2               	andwf	LCD_Set_Cursor@low4,f
  8920     1FCA                     l4118:
  8921                           
  8922                           ;lcd.c: 111:         LCD_CMD(high4);
  8923     1FCA  0821               	movf	LCD_Set_Cursor@high4,w
  8924     1FCB  160A  158A  24F9  160A  158A  	fcall	_LCD_CMD
  8925     1FD0                     l4120:
  8926                           
  8927                           ;lcd.c: 112:         LCD_CMD(low4);
  8928     1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  8929     1FD1  1303               	bcf	3,6	;RP1=0, select bank0
  8930     1FD2  0822               	movf	LCD_Set_Cursor@low4,w
  8931     1FD3  160A  158A  24F9  160A  158A  	fcall	_LCD_CMD
  8932     1FD8                     l4122:
  8933                           
  8934                           ;lcd.c: 115:     if(r == 2)
  8935     1FD8  3002               	movlw	2
  8936     1FD9  1283               	bcf	3,5	;RP0=0, select bank0
  8937     1FDA  1303               	bcf	3,6	;RP1=0, select bank0
  8938     1FDB  0620               	xorwf	LCD_Set_Cursor@r,w
  8939     1FDC  1D03               	btfss	3,2
  8940     1FDD  2FDF               	goto	u6121
  8941     1FDE  2FE0               	goto	u6120
  8942     1FDF                     u6121:
  8943     1FDF  2FFF               	goto	l175
  8944     1FE0                     u6120:
  8945     1FE0                     l4124:
  8946                           
  8947                           ;lcd.c: 116:     {;lcd.c: 117:         temp = 0xc0 + c - 1;
  8948     1FE0  0875               	movf	LCD_Set_Cursor@c,w
  8949     1FE1  3EBF               	addlw	191
  8950     1FE2  00A3               	movwf	LCD_Set_Cursor@temp
  8951                           
  8952                           ;lcd.c: 118:         high4 = temp >> 4;
  8953     1FE3  0823               	movf	LCD_Set_Cursor@temp,w
  8954     1FE4  00F6               	movwf	??_LCD_Set_Cursor
  8955     1FE5  3004               	movlw	4
  8956     1FE6                     u6135:
  8957     1FE6  1003               	clrc
  8958     1FE7  0CF6               	rrf	??_LCD_Set_Cursor,f
  8959     1FE8  3EFF               	addlw	-1
  8960     1FE9  1D03               	skipz
  8961     1FEA  2FE6               	goto	u6135
  8962     1FEB  0876               	movf	??_LCD_Set_Cursor,w
  8963     1FEC  00A1               	movwf	LCD_Set_Cursor@high4
  8964     1FED                     l4126:
  8965                           
  8966                           ;lcd.c: 119:         low4 = temp & 0x0f;
  8967     1FED  0823               	movf	LCD_Set_Cursor@temp,w
  8968     1FEE  00A2               	movwf	LCD_Set_Cursor@low4
  8969     1FEF                     l4128:
  8970     1FEF  300F               	movlw	15
  8971     1FF0  05A2               	andwf	LCD_Set_Cursor@low4,f
  8972     1FF1                     l4130:
  8973                           
  8974                           ;lcd.c: 120:         LCD_CMD(high4);
  8975     1FF1  0821               	movf	LCD_Set_Cursor@high4,w
  8976     1FF2  160A  158A  24F9  160A  158A  	fcall	_LCD_CMD
  8977     1FF7                     l4132:
  8978                           
  8979                           ;lcd.c: 121:         LCD_CMD(low4);
  8980     1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  8981     1FF8  1303               	bcf	3,6	;RP1=0, select bank0
  8982     1FF9  0822               	movf	LCD_Set_Cursor@low4,w
  8983     1FFA  160A  158A  24F9  160A  158A  	fcall	_LCD_CMD
  8984     1FFF                     l175:
  8985     1FFF  0008               	return
  8986     2000                     __end_of_LCD_Set_Cursor:
  8987                           
  8988                           	psect	text38
  8989     07F1                     __ptext38:	
  8990 ;; *************** function _LCD_Clear *****************
  8991 ;; Defined at:
  8992 ;;		line 96 in file "lcd.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;		None
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0, pclath, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9006 ;;      Params:         0       0       0       0       0
  9007 ;;      Locals:         0       0       0       0       0
  9008 ;;      Temps:          0       0       0       0       0
  9009 ;;      Totals:         0       0       0       0       0
  9010 ;;Total ram usage:        0 bytes
  9011 ;; Hardware stack levels used: 1
  9012 ;; Hardware stack levels required when called: 3
  9013 ;; This function calls:
  9014 ;;		_LCD_CMD
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020     07F1                     _LCD_Clear:	
  9021                           ;psect for function _LCD_Clear
  9022                           
  9023     07F1                     l4196:	
  9024                           ;incstack = 0
  9025                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9026                           
  9027                           
  9028                           ;lcd.c: 98:     LCD_CMD(0);
  9029     07F1  3000               	movlw	0
  9030     07F2  160A  158A  24F9  120A  118A  	fcall	_LCD_CMD
  9031                           
  9032                           ;lcd.c: 99:     LCD_CMD(1);
  9033     07F7  3001               	movlw	1
  9034     07F8  160A  158A  24F9  120A  118A  	fcall	_LCD_CMD
  9035     07FD                     l170:
  9036     07FD  0008               	return
  9037     07FE                     __end_of_LCD_Clear:
  9038                           
  9039                           	psect	text39
  9040     1CF9                     __ptext39:	
  9041 ;; *************** function _LCD_CMD *****************
  9042 ;; Defined at:
  9043 ;;		line 22 in file "lcd.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  cmd             1    wreg     unsigned char 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  cmd             1    4[COMMON] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0, pclath, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9057 ;;      Params:         0       0       0       0       0
  9058 ;;      Locals:         1       0       0       0       0
  9059 ;;      Temps:          1       0       0       0       0
  9060 ;;      Totals:         2       0       0       0       0
  9061 ;;Total ram usage:        2 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 2
  9064 ;; This function calls:
  9065 ;;		_LCD_DATA
  9066 ;; This function is called by:
  9067 ;;		_LCD_Init
  9068 ;;		_LCD_Clear
  9069 ;;		_LCD_Set_Cursor
  9070 ;;		_LCD_SR
  9071 ;;		_LCD_SL
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075     1CF9                     _LCD_CMD:	
  9076                           ;psect for function _LCD_CMD
  9077                           
  9078                           
  9079                           ;incstack = 0
  9080                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9081                           ;LCD_CMD@cmd stored from wreg
  9082     1CF9  00F4               	movwf	LCD_CMD@cmd
  9083     1CFA                     l4064:
  9084                           
  9085                           ;lcd.c: 22: void LCD_CMD(unsigned char cmd);lcd.c: 23: {;lcd.c: 24:     PORTBbits.RB5 = 
      +                          0;
  9086     1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  9087     1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  9088     1CFC  1286               	bcf	6,5	;volatile
  9089     1CFD                     l4066:
  9090                           
  9091                           ;lcd.c: 25:     LCD_DATA(cmd);
  9092     1CFD  0874               	movf	LCD_CMD@cmd,w
  9093     1CFE  160A  158A  2539  160A  158A  	fcall	_LCD_DATA
  9094     1D03                     l4068:
  9095                           
  9096                           ;lcd.c: 26:     PORTBbits.RB4 = 1;
  9097     1D03  1283               	bcf	3,5	;RP0=0, select bank0
  9098     1D04  1303               	bcf	3,6	;RP1=0, select bank0
  9099     1D05  1606               	bsf	6,4	;volatile
  9100     1D06                     l4070:
  9101                           
  9102                           ;lcd.c: 27:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  9103     1D06  30D6               	movlw	214
  9104     1D07  00F3               	movwf	??_LCD_CMD
  9105     1D08                     u6407:
  9106     1D08  2D09               	nop2
  9107     1D09  2D0A               	nop2
  9108     1D0A  0BF3               	decfsz	??_LCD_CMD,f
  9109     1D0B  2D08               	goto	u6407
  9110     1D0C  0000               	nop
  9111     1D0D                     l4072:
  9112                           
  9113                           ;lcd.c: 28:     PORTBbits.RB4 = 0;
  9114     1D0D  1283               	bcf	3,5	;RP0=0, select bank0
  9115     1D0E  1303               	bcf	3,6	;RP1=0, select bank0
  9116     1D0F  1206               	bcf	6,4	;volatile
  9117     1D10                     l4074:
  9118                           
  9119                           ;lcd.c: 29:     _delay((unsigned long)((500)*(12000000/4000000.0)));
  9120     1D10  30D6               	movlw	214
  9121     1D11  00F3               	movwf	??_LCD_CMD
  9122     1D12                     u6417:
  9123     1D12  2D13               	nop2
  9124     1D13  2D14               	nop2
  9125     1D14  0BF3               	decfsz	??_LCD_CMD,f
  9126     1D15  2D12               	goto	u6417
  9127     1D16  0000               	nop
  9128     1D17                     l155:
  9129     1D17  0008               	return
  9130     1D18                     __end_of_LCD_CMD:
  9131                           
  9132                           	psect	text40
  9133     1D39                     __ptext40:	
  9134 ;; *************** function _LCD_DATA *****************
  9135 ;; Defined at:
  9136 ;;		line 6 in file "lcd.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  data            1    wreg     unsigned char 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  data            1    2[COMMON] unsigned char 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9150 ;;      Params:         0       0       0       0       0
  9151 ;;      Locals:         1       0       0       0       0
  9152 ;;      Temps:          0       0       0       0       0
  9153 ;;      Totals:         1       0       0       0       0
  9154 ;;Total ram usage:        1 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 1
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		_LCD_CMD
  9161 ;;		_LCD_Init
  9162 ;;		_LCD_Write_Char
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166     1D39                     _LCD_DATA:	
  9167                           ;psect for function _LCD_DATA
  9168                           
  9169                           
  9170                           ;incstack = 0
  9171                           ; Regs used in _LCD_DATA: [wreg]
  9172                           ;LCD_DATA@data stored from wreg
  9173     1D39  00F2               	movwf	LCD_DATA@data
  9174     1D3A                     l3998:
  9175                           
  9176                           ;lcd.c: 6: void LCD_DATA(unsigned char data);lcd.c: 7: {;lcd.c: 8:     if (data & 1)
  9177     1D3A  1C72               	btfss	LCD_DATA@data,0
  9178     1D3B  2D3D               	goto	u6011
  9179     1D3C  2D3E               	goto	u6010
  9180     1D3D                     u6011:
  9181     1D3D  2D42               	goto	l144
  9182     1D3E                     u6010:
  9183     1D3E                     l4000:
  9184                           
  9185                           ;lcd.c: 9:         PORTBbits.RB0 = 1;
  9186     1D3E  1283               	bcf	3,5	;RP0=0, select bank0
  9187     1D3F  1303               	bcf	3,6	;RP1=0, select bank0
  9188     1D40  1406               	bsf	6,0	;volatile
  9189     1D41  2D45               	goto	l145
  9190     1D42                     l144:	
  9191                           ;lcd.c: 10:     else PORTBbits.RB0 = 0;
  9192                           
  9193     1D42  1283               	bcf	3,5	;RP0=0, select bank0
  9194     1D43  1303               	bcf	3,6	;RP1=0, select bank0
  9195     1D44  1006               	bcf	6,0	;volatile
  9196     1D45                     l145:
  9197                           
  9198                           ;lcd.c: 11:     if (data & 2)
  9199     1D45  1CF2               	btfss	LCD_DATA@data,1
  9200     1D46  2D48               	goto	u6021
  9201     1D47  2D49               	goto	u6020
  9202     1D48                     u6021:
  9203     1D48  2D4B               	goto	l146
  9204     1D49                     u6020:
  9205     1D49                     l4002:
  9206                           
  9207                           ;lcd.c: 12:         PORTBbits.RB1 = 1;
  9208     1D49  1486               	bsf	6,1	;volatile
  9209     1D4A  2D4C               	goto	l147
  9210     1D4B                     l146:	
  9211                           ;lcd.c: 13:     else PORTBbits.RB1 = 0;
  9212                           
  9213     1D4B  1086               	bcf	6,1	;volatile
  9214     1D4C                     l147:
  9215                           
  9216                           ;lcd.c: 14:     if (data & 4)
  9217     1D4C  1D72               	btfss	LCD_DATA@data,2
  9218     1D4D  2D4F               	goto	u6031
  9219     1D4E  2D50               	goto	u6030
  9220     1D4F                     u6031:
  9221     1D4F  2D52               	goto	l148
  9222     1D50                     u6030:
  9223     1D50                     l4004:
  9224                           
  9225                           ;lcd.c: 15:         PORTBbits.RB2 = 1;
  9226     1D50  1506               	bsf	6,2	;volatile
  9227     1D51  2D53               	goto	l149
  9228     1D52                     l148:	
  9229                           ;lcd.c: 16:     else PORTBbits.RB2 = 0;
  9230                           
  9231     1D52  1106               	bcf	6,2	;volatile
  9232     1D53                     l149:
  9233                           
  9234                           ;lcd.c: 17:     if (data & 8)
  9235     1D53  1DF2               	btfss	LCD_DATA@data,3
  9236     1D54  2D56               	goto	u6041
  9237     1D55  2D57               	goto	u6040
  9238     1D56                     u6041:
  9239     1D56  2D59               	goto	l150
  9240     1D57                     u6040:
  9241     1D57                     l4006:
  9242                           
  9243                           ;lcd.c: 18:         PORTBbits.RB3 = 1;
  9244     1D57  1586               	bsf	6,3	;volatile
  9245     1D58  2D5A               	goto	l152
  9246     1D59                     l150:	
  9247                           ;lcd.c: 19:     else PORTBbits.RB3 = 0;
  9248                           
  9249     1D59  1186               	bcf	6,3	;volatile
  9250     1D5A                     l152:
  9251     1D5A  0008               	return
  9252     1D5B                     __end_of_LCD_DATA:
  9253                           
  9254                           	psect	text41
  9255     1CB2                     __ptext41:	
  9256 ;; *************** function _GPIO_Config *****************
  9257 ;; Defined at:
  9258 ;;		line 149 in file "main.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;		None
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;		None
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      void 
  9265 ;; Registers used:
  9266 ;;		None
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9272 ;;      Params:         0       0       0       0       0
  9273 ;;      Locals:         0       0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0
  9275 ;;      Totals:         0       0       0       0       0
  9276 ;;Total ram usage:        0 bytes
  9277 ;; Hardware stack levels used: 1
  9278 ;; Hardware stack levels required when called: 1
  9279 ;; This function calls:
  9280 ;;		Nothing
  9281 ;; This function is called by:
  9282 ;;		_main
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286     1CB2                     _GPIO_Config:	
  9287                           ;psect for function _GPIO_Config
  9288                           
  9289     1CB2                     l3366:	
  9290                           ;incstack = 0
  9291                           ; Regs used in _GPIO_Config: []
  9292                           
  9293                           
  9294                           ;main.c: 151:  TRISDbits.TRISD0 = 0;
  9295     1CB2  1683               	bsf	3,5	;RP0=1, select bank1
  9296     1CB3  1303               	bcf	3,6	;RP1=0, select bank1
  9297     1CB4  1008               	bcf	8,0	;volatile
  9298                           
  9299                           ;main.c: 152:  TRISDbits.TRISD2 = 0;
  9300     1CB5  1108               	bcf	8,2	;volatile
  9301                           
  9302                           ;main.c: 153:  TRISDbits.TRISD4 = 0;
  9303     1CB6  1208               	bcf	8,4	;volatile
  9304                           
  9305                           ;main.c: 154:  TRISDbits.TRISD1 = 1;
  9306     1CB7  1488               	bsf	8,1	;volatile
  9307                           
  9308                           ;main.c: 155:  TRISDbits.TRISD3 = 1;
  9309     1CB8  1588               	bsf	8,3	;volatile
  9310                           
  9311                           ;main.c: 156:  TRISDbits.TRISD5= 1;
  9312     1CB9  1688               	bsf	8,5	;volatile
  9313     1CBA                     l124:
  9314     1CBA  0008               	return
  9315     1CBB                     __end_of_GPIO_Config:
  9316                           
  9317                           	psect	text42
  9318     1EE1                     __ptext42:	
  9319 ;; *************** function _ISR *****************
  9320 ;; Defined at:
  9321 ;;		line 33 in file "main.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;		None
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9335 ;;      Params:         0       0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0
  9337 ;;      Temps:          2       0       0       0       0
  9338 ;;      Totals:         2       0       0       0       0
  9339 ;;Total ram usage:        2 bytes
  9340 ;; Hardware stack levels used: 1
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		Interrupt level 1
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348     1EE1                     _ISR:	
  9349                           ;psect for function _ISR
  9350                           
  9351     1EE1                     i1l3492:
  9352                           
  9353                           ;main.c: 35:     if(PIR1bits.TMR2IF) {
  9354     1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  9355     1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  9356     1EE3  1C8C               	btfss	12,1	;volatile
  9357     1EE4  2EE6               	goto	u498_21
  9358     1EE5  2EE7               	goto	u498_20
  9359     1EE6                     u498_21:
  9360     1EE6  2F1D               	goto	i1l77
  9361     1EE7                     u498_20:
  9362     1EE7                     i1l3494:
  9363                           
  9364                           ;main.c: 36:         C++;
  9365     1EE7  3001               	movlw	1
  9366     1EE8  1683               	bsf	3,5	;RP0=1, select bank1
  9367     1EE9  1303               	bcf	3,6	;RP1=0, select bank1
  9368     1EEA  07EA               	addwf	_C^(0+128),f
  9369     1EEB  1803               	skipnc
  9370     1EEC  0AEB               	incf	(_C+1)^(0+128),f
  9371     1EED  3000               	movlw	0
  9372     1EEE  07EB               	addwf	(_C+1)^(0+128),f
  9373     1EEF                     i1l3496:
  9374                           
  9375                           ;main.c: 37:         if(C == 1000) {
  9376     1EEF  30E8               	movlw	232
  9377     1EF0  066A               	xorwf	_C^(0+128),w
  9378     1EF1  3003               	movlw	3
  9379     1EF2  1903               	skipnz
  9380     1EF3  066B               	xorwf	(_C+1)^(0+128),w
  9381     1EF4  1D03               	btfss	3,2
  9382     1EF5  2EF7               	goto	u499_21
  9383     1EF6  2EF8               	goto	u499_20
  9384     1EF7                     u499_21:
  9385     1EF7  2EFB               	goto	i1l3500
  9386     1EF8                     u499_20:
  9387     1EF8                     i1l3498:
  9388                           
  9389                           ;main.c: 38:             updateSensor1 = 1;
  9390     1EF8  3001               	movlw	1
  9391     1EF9  00FB               	movwf	_updateSensor1	;volatile
  9392                           
  9393                           ;main.c: 39:         } else if (C == 2000) {
  9394     1EFA  2F18               	goto	i1l3510
  9395     1EFB                     i1l3500:
  9396     1EFB  30D0               	movlw	208
  9397     1EFC  066A               	xorwf	_C^(0+128),w
  9398     1EFD  3007               	movlw	7
  9399     1EFE  1903               	skipnz
  9400     1EFF  066B               	xorwf	(_C+1)^(0+128),w
  9401     1F00  1D03               	btfss	3,2
  9402     1F01  2F03               	goto	u500_21
  9403     1F02  2F04               	goto	u500_20
  9404     1F03                     u500_21:
  9405     1F03  2F07               	goto	i1l3504
  9406     1F04                     u500_20:
  9407     1F04                     i1l3502:
  9408                           
  9409                           ;main.c: 40:             updateSensor2 = 1;
  9410     1F04  3001               	movlw	1
  9411     1F05  00FA               	movwf	_updateSensor2	;volatile
  9412                           
  9413                           ;main.c: 41:         } else if (C == 3000) {
  9414     1F06  2F18               	goto	i1l3510
  9415     1F07                     i1l3504:
  9416     1F07  30B8               	movlw	184
  9417     1F08  066A               	xorwf	_C^(0+128),w
  9418     1F09  300B               	movlw	11
  9419     1F0A  1903               	skipnz
  9420     1F0B  066B               	xorwf	(_C+1)^(0+128),w
  9421     1F0C  1D03               	btfss	3,2
  9422     1F0D  2F0F               	goto	u501_21
  9423     1F0E  2F10               	goto	u501_20
  9424     1F0F                     u501_21:
  9425     1F0F  2F18               	goto	i1l3510
  9426     1F10                     u501_20:
  9427     1F10                     i1l3506:
  9428                           
  9429                           ;main.c: 42:             updateSensor3 = 1;
  9430     1F10  3001               	movlw	1
  9431     1F11  1283               	bcf	3,5	;RP0=0, select bank0
  9432     1F12  1303               	bcf	3,6	;RP1=0, select bank0
  9433     1F13  00EF               	movwf	_updateSensor3	;volatile
  9434     1F14                     i1l3508:
  9435                           
  9436                           ;main.c: 43:             C = 0;
  9437     1F14  1683               	bsf	3,5	;RP0=1, select bank1
  9438     1F15  1303               	bcf	3,6	;RP1=0, select bank1
  9439     1F16  01EA               	clrf	_C^(0+128)
  9440     1F17  01EB               	clrf	(_C+1)^(0+128)
  9441     1F18                     i1l3510:
  9442                           
  9443                           ;main.c: 45:         TMR2 = 68;
  9444     1F18  3044               	movlw	68
  9445     1F19  1283               	bcf	3,5	;RP0=0, select bank0
  9446     1F1A  1303               	bcf	3,6	;RP1=0, select bank0
  9447     1F1B  0091               	movwf	17	;volatile
  9448     1F1C                     i1l3512:
  9449                           
  9450                           ;main.c: 46:         PIR1bits.TMR2IF = 0;
  9451     1F1C  108C               	bcf	12,1	;volatile
  9452     1F1D                     i1l77:
  9453     1F1D  0871               	movf	??_ISR+1,w
  9454     1F1E  008A               	movwf	10
  9455     1F1F  0E70               	swapf	??_ISR,w
  9456     1F20  0083               	movwf	3
  9457     1F21  0EFE               	swapf	btemp,f
  9458     1F22  0E7E               	swapf	btemp,w
  9459     1F23  0009               	retfie
  9460     1F24                     __end_of_ISR:
  9461     0002                     ___latbits      equ	2
  9462     007E                     btemp           set	126	;btemp
  9463     007E                     wtemp0          set	126
  9464                           
  9465                           	psect	intentry
  9466     0004                     __pintentry:	
  9467                           ;incstack = 0
  9468 ;; hardware stack exceeded
  9469                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9470                           
  9471     0004                     interrupt_function:
  9472     007E                     saved_w         set	btemp
  9473     0004  00FE               	movwf	btemp
  9474     0005  0E03               	swapf	3,w
  9475     0006  00F0               	movwf	??_ISR
  9476     0007  080A               	movf	10,w
  9477     0008  00F1               	movwf	??_ISR+1
  9478     0009  160A  158A  2EE1   	ljmp	_ISR
  9479                           
  9480                           	psect	config
  9481                           
  9482                           ;Config register CONFIG @ 0x2007
  9483                           ;	Oscillator Selection bits
  9484                           ;	FOSC = HS, HS oscillator
  9485                           ;	Watchdog Timer Enable bit
  9486                           ;	WDTE = OFF, WDT disabled
  9487                           ;	Power-up Timer Enable bit
  9488                           ;	PWRTE = ON, PWRT enabled
  9489                           ;	FLASH Program Memory Code Protection bits
  9490                           ;	CP = OFF, Code protection off
  9491                           ;	Brown-out Reset Enable bit
  9492                           ;	BOREN = ON, BOR enabled
  9493                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  9494                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9495                           ;	Data EE Memory Code Protection
  9496                           ;	CPD = OFF, Code Protection off
  9497                           ;	FLASH Program Memory Write Enable
  9498                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
  9499                           ;	In-Circuit Debugger Mode bit
  9500                           ;	DEBUG = 0x1, unprogrammed default
  9501     2007                     	org	8199
  9502     2007  3F72               	dw	16242
  9503                           
  9504                           	psect	text16_split_1
  9505     0032                     l3834:
  9506                           
  9507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  9508     0032  303F               	movlw	63
  9509     0033  1683               	bsf	3,5	;RP0=1, select bank1
  9510     0034  1303               	bcf	3,6	;RP1=0, select bank1
  9511     0035  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9512     0036  3080               	movlw	128
  9513     0037  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9514     0038  3000               	movlw	0
  9515     0039  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9516     003A  3000               	movlw	0
  9517     003B  00C8               	movwf	efgtoa@u^(0+128)
  9518     003C                     l3836:
  9519                           
  9520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9521     003C  01AF               	clrf	efgtoa@e^(0+128)
  9522     003D  01B0               	clrf	(efgtoa@e+1)^(0+128)
  9523     003E                     l3838:
  9524                           
  9525                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  9526     003E  0845               	movf	(efgtoa@g+3)^(0+128),w
  9527     003F  00F5               	movwf	___fleq@ff1+3
  9528     0040  0844               	movf	(efgtoa@g+2)^(0+128),w
  9529     0041  00F4               	movwf	___fleq@ff1+2
  9530     0042  0843               	movf	(efgtoa@g+1)^(0+128),w
  9531     0043  00F3               	movwf	___fleq@ff1+1
  9532     0044  0842               	movf	efgtoa@g^(0+128),w
  9533     0045  00F2               	movwf	___fleq@ff1
  9534     0046  3000               	movlw	0
  9535     0047  00F9               	movwf	___fleq@ff2+3
  9536     0048  3000               	movlw	0
  9537     0049  00F8               	movwf	___fleq@ff2+2
  9538     004A  3000               	movlw	0
  9539     004B  00F7               	movwf	___fleq@ff2+1
  9540     004C  3000               	movlw	0
  9541     004D  00F6               	movwf	___fleq@ff2
  9542     004E  160A  118A  2039  120A  118A  	fcall	___fleq
  9543     0053  1803               	btfsc	3,0
  9544     0054  2856               	goto	u5731
  9545     0055  2857               	goto	u5730
  9546     0056                     u5731:
  9547     0056  2A68               	goto	l3864
  9548     0057                     u5730:
  9549     0057  2868               	goto	l3844
  9550     0058                     l3842:
  9551                           
  9552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9553     0058  1683               	bsf	3,5	;RP0=1, select bank1
  9554     0059  1303               	bcf	3,6	;RP1=0, select bank1
  9555     005A  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9556     005B  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9557     005C  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9558     005D  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9559     005E  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9560     005F  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9561     0060  0833               	movf	efgtoa@ou^(0+128),w
  9562     0061  00C8               	movwf	efgtoa@u^(0+128)
  9563                           
  9564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9565     0062  3001               	movlw	1
  9566     0063  07AF               	addwf	efgtoa@e^(0+128),f
  9567     0064  1803               	skipnc
  9568     0065  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  9569     0066  3000               	movlw	0
  9570     0067  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  9571     0068                     l3844:
  9572                           
  9573                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9574     0068  3041               	movlw	65
  9575     0069  1283               	bcf	3,5	;RP0=0, select bank0
  9576     006A  1303               	bcf	3,6	;RP1=0, select bank0
  9577     006B  00A9               	movwf	___flmul@b+3
  9578     006C  3020               	movlw	32
  9579     006D  00A8               	movwf	___flmul@b+2
  9580     006E  3000               	movlw	0
  9581     006F  00A7               	movwf	___flmul@b+1
  9582     0070  3000               	movlw	0
  9583     0071  00A6               	movwf	___flmul@b
  9584     0072  1683               	bsf	3,5	;RP0=1, select bank1
  9585     0073  1303               	bcf	3,6	;RP1=0, select bank1
  9586     0074  084B               	movf	(efgtoa@u+3)^(0+128),w
  9587     0075  1283               	bcf	3,5	;RP0=0, select bank0
  9588     0076  1303               	bcf	3,6	;RP1=0, select bank0
  9589     0077  00AD               	movwf	___flmul@a+3
  9590     0078  1683               	bsf	3,5	;RP0=1, select bank1
  9591     0079  1303               	bcf	3,6	;RP1=0, select bank1
  9592     007A  084A               	movf	(efgtoa@u+2)^(0+128),w
  9593     007B  1283               	bcf	3,5	;RP0=0, select bank0
  9594     007C  1303               	bcf	3,6	;RP1=0, select bank0
  9595     007D  00AC               	movwf	___flmul@a+2
  9596     007E  1683               	bsf	3,5	;RP0=1, select bank1
  9597     007F  1303               	bcf	3,6	;RP1=0, select bank1
  9598     0080  0849               	movf	(efgtoa@u+1)^(0+128),w
  9599     0081  1283               	bcf	3,5	;RP0=0, select bank0
  9600     0082  1303               	bcf	3,6	;RP1=0, select bank0
  9601     0083  00AB               	movwf	___flmul@a+1
  9602     0084  1683               	bsf	3,5	;RP0=1, select bank1
  9603     0085  1303               	bcf	3,6	;RP1=0, select bank1
  9604     0086  0848               	movf	efgtoa@u^(0+128),w
  9605     0087  1283               	bcf	3,5	;RP0=0, select bank0
  9606     0088  1303               	bcf	3,6	;RP1=0, select bank0
  9607     0089  00AA               	movwf	___flmul@a
  9608     008A  120A  158A  24BE  120A  118A  	fcall	___flmul
  9609     008F  1283               	bcf	3,5	;RP0=0, select bank0
  9610     0090  1303               	bcf	3,6	;RP1=0, select bank0
  9611     0091  0829               	movf	?___flmul+3,w
  9612     0092  1683               	bsf	3,5	;RP0=1, select bank1
  9613     0093  1303               	bcf	3,6	;RP1=0, select bank1
  9614     0094  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  9615     0095  1283               	bcf	3,5	;RP0=0, select bank0
  9616     0096  1303               	bcf	3,6	;RP1=0, select bank0
  9617     0097  0828               	movf	?___flmul+2,w
  9618     0098  1683               	bsf	3,5	;RP0=1, select bank1
  9619     0099  1303               	bcf	3,6	;RP1=0, select bank1
  9620     009A  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  9621     009B  1283               	bcf	3,5	;RP0=0, select bank0
  9622     009C  1303               	bcf	3,6	;RP1=0, select bank0
  9623     009D  0827               	movf	?___flmul+1,w
  9624     009E  1683               	bsf	3,5	;RP0=1, select bank1
  9625     009F  1303               	bcf	3,6	;RP1=0, select bank1
  9626     00A0  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  9627     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  9628     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  9629     00A3  0826               	movf	?___flmul,w
  9630     00A4  1683               	bsf	3,5	;RP0=1, select bank1
  9631     00A5  1303               	bcf	3,6	;RP1=0, select bank1
  9632     00A6  00B3               	movwf	efgtoa@ou^(0+128)
  9633     00A7                     l3846:
  9634     00A7  0842               	movf	efgtoa@g^(0+128),w
  9635     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  9636     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  9637     00AA  00D3               	movwf	??_efgtoa
  9638     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  9639     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  9640     00AD  0843               	movf	(efgtoa@g+1)^(0+128),w
  9641     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  9642     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  9643     00B0  00D4               	movwf	??_efgtoa+1
  9644     00B1  1683               	bsf	3,5	;RP0=1, select bank1
  9645     00B2  1303               	bcf	3,6	;RP1=0, select bank1
  9646     00B3  0844               	movf	(efgtoa@g+2)^(0+128),w
  9647     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  9648     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  9649     00B6  00D5               	movwf	??_efgtoa+2
  9650     00B7  1683               	bsf	3,5	;RP0=1, select bank1
  9651     00B8  1303               	bcf	3,6	;RP1=0, select bank1
  9652     00B9  0845               	movf	(efgtoa@g+3)^(0+128),w
  9653     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  9654     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  9655     00BC  00D6               	movwf	??_efgtoa+3
  9656     00BD  1683               	bsf	3,5	;RP0=1, select bank1
  9657     00BE  1303               	bcf	3,6	;RP1=0, select bank1
  9658     00BF  0833               	movf	efgtoa@ou^(0+128),w
  9659     00C0  1283               	bcf	3,5	;RP0=0, select bank0
  9660     00C1  1303               	bcf	3,6	;RP1=0, select bank0
  9661     00C2  02D3               	subwf	??_efgtoa,f
  9662     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  9663     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  9664     00C5  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9665     00C6  1C03               	skipc
  9666     00C7  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
  9667     00C8  28CA               	goto	u5741
  9668     00C9  28CD               	goto	u5742
  9669     00CA                     u5741:
  9670     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  9671     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  9672     00CC  02D4               	subwf	??_efgtoa+1,f
  9673     00CD                     u5742:
  9674     00CD  1683               	bsf	3,5	;RP0=1, select bank1
  9675     00CE  1303               	bcf	3,6	;RP1=0, select bank1
  9676     00CF  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9677     00D0  1C03               	skipc
  9678     00D1  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
  9679     00D2  28D4               	goto	u5743
  9680     00D3  28D7               	goto	u5744
  9681     00D4                     u5743:
  9682     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  9683     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  9684     00D6  02D5               	subwf	??_efgtoa+2,f
  9685     00D7                     u5744:
  9686     00D7  1683               	bsf	3,5	;RP0=1, select bank1
  9687     00D8  1303               	bcf	3,6	;RP1=0, select bank1
  9688     00D9  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9689     00DA  1C03               	skipc
  9690     00DB  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
  9691     00DC  28DE               	goto	u5745
  9692     00DD  28E1               	goto	u5746
  9693     00DE                     u5745:
  9694     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  9695     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  9696     00E0  02D6               	subwf	??_efgtoa+3,f
  9697     00E1                     u5746:
  9698     00E1  1683               	bsf	3,5	;RP0=1, select bank1
  9699     00E2  1303               	bcf	3,6	;RP1=0, select bank1
  9700     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9701     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9702     00E5  0856               	movf	??_efgtoa+3,w
  9703     00E6  00F5               	movwf	labs@a+3
  9704     00E7  0855               	movf	??_efgtoa+2,w
  9705     00E8  00F4               	movwf	labs@a+2
  9706     00E9  0854               	movf	??_efgtoa+1,w
  9707     00EA  00F3               	movwf	labs@a+1
  9708     00EB  0853               	movf	??_efgtoa,w
  9709     00EC  00F2               	movwf	labs@a
  9710     00ED  160A  158A  24CB  120A  118A  	fcall	_labs
  9711     00F2  1BF5               	btfsc	?_labs+3,7
  9712     00F3  2904               	goto	u5751
  9713     00F4  0875               	movf	?_labs+3,w
  9714     00F5  1D03               	btfss	3,2
  9715     00F6  2905               	goto	u5750
  9716     00F7  0874               	movf	?_labs+2,w
  9717     00F8  1D03               	btfss	3,2
  9718     00F9  2905               	goto	u5750
  9719     00FA  0873               	movf	?_labs+1,w
  9720     00FB  1D03               	btfss	3,2
  9721     00FC  2905               	goto	u5750
  9722     00FD  3002               	movlw	2
  9723     00FE  0272               	subwf	?_labs,w
  9724     00FF  1D03               	skipz
  9725     0100  2901               	goto	u5753
  9726     0101                     u5753:
  9727     0101  1C03               	btfss	3,0
  9728     0102  2904               	goto	u5751
  9729     0103  2905               	goto	u5750
  9730     0104                     u5751:
  9731     0104  2858               	goto	l3842
  9732     0105                     u5750:
  9733     0105                     l3848:
  9734     0105  1683               	bsf	3,5	;RP0=1, select bank1
  9735     0106  1303               	bcf	3,6	;RP1=0, select bank1
  9736     0107  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9737     0108  1283               	bcf	3,5	;RP0=0, select bank0
  9738     0109  1303               	bcf	3,6	;RP1=0, select bank0
  9739     010A  00C3               	movwf	___flge@ff1+3
  9740     010B  1683               	bsf	3,5	;RP0=1, select bank1
  9741     010C  1303               	bcf	3,6	;RP1=0, select bank1
  9742     010D  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9743     010E  1283               	bcf	3,5	;RP0=0, select bank0
  9744     010F  1303               	bcf	3,6	;RP1=0, select bank0
  9745     0110  00C2               	movwf	___flge@ff1+2
  9746     0111  1683               	bsf	3,5	;RP0=1, select bank1
  9747     0112  1303               	bcf	3,6	;RP1=0, select bank1
  9748     0113  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9749     0114  1283               	bcf	3,5	;RP0=0, select bank0
  9750     0115  1303               	bcf	3,6	;RP1=0, select bank0
  9751     0116  00C1               	movwf	___flge@ff1+1
  9752     0117  1683               	bsf	3,5	;RP0=1, select bank1
  9753     0118  1303               	bcf	3,6	;RP1=0, select bank1
  9754     0119  0833               	movf	efgtoa@ou^(0+128),w
  9755     011A  1283               	bcf	3,5	;RP0=0, select bank0
  9756     011B  1303               	bcf	3,6	;RP1=0, select bank0
  9757     011C  00C0               	movwf	___flge@ff1
  9758     011D  1683               	bsf	3,5	;RP0=1, select bank1
  9759     011E  1303               	bcf	3,6	;RP1=0, select bank1
  9760     011F  0845               	movf	(efgtoa@g+3)^(0+128),w
  9761     0120  1283               	bcf	3,5	;RP0=0, select bank0
  9762     0121  1303               	bcf	3,6	;RP1=0, select bank0
  9763     0122  00C7               	movwf	___flge@ff2+3
  9764     0123  1683               	bsf	3,5	;RP0=1, select bank1
  9765     0124  1303               	bcf	3,6	;RP1=0, select bank1
  9766     0125  0844               	movf	(efgtoa@g+2)^(0+128),w
  9767     0126  1283               	bcf	3,5	;RP0=0, select bank0
  9768     0127  1303               	bcf	3,6	;RP1=0, select bank0
  9769     0128  00C6               	movwf	___flge@ff2+2
  9770     0129  1683               	bsf	3,5	;RP0=1, select bank1
  9771     012A  1303               	bcf	3,6	;RP1=0, select bank1
  9772     012B  0843               	movf	(efgtoa@g+1)^(0+128),w
  9773     012C  1283               	bcf	3,5	;RP0=0, select bank0
  9774     012D  1303               	bcf	3,6	;RP1=0, select bank0
  9775     012E  00C5               	movwf	___flge@ff2+1
  9776     012F  1683               	bsf	3,5	;RP0=1, select bank1
  9777     0130  1303               	bcf	3,6	;RP1=0, select bank1
  9778     0131  0842               	movf	efgtoa@g^(0+128),w
  9779     0132  1283               	bcf	3,5	;RP0=0, select bank0
  9780     0133  1303               	bcf	3,6	;RP1=0, select bank0
  9781     0134  00C4               	movwf	___flge@ff2
  9782     0135  160A  118A  243F  120A  118A  	fcall	___flge
  9783     013A  1C03               	btfss	3,0
  9784     013B  293D               	goto	u5761
  9785     013C  293E               	goto	u5760
  9786     013D                     u5761:
  9787     013D  2858               	goto	l3842
  9788     013E                     u5760:
  9789     013E                     l3850:
  9790                           
  9791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  9792     013E  1683               	bsf	3,5	;RP0=1, select bank1
  9793     013F  1303               	bcf	3,6	;RP1=0, select bank1
  9794     0140  0842               	movf	efgtoa@g^(0+128),w
  9795     0141  1283               	bcf	3,5	;RP0=0, select bank0
  9796     0142  1303               	bcf	3,6	;RP1=0, select bank0
  9797     0143  00D3               	movwf	??_efgtoa
  9798     0144  1683               	bsf	3,5	;RP0=1, select bank1
  9799     0145  1303               	bcf	3,6	;RP1=0, select bank1
  9800     0146  0843               	movf	(efgtoa@g+1)^(0+128),w
  9801     0147  1283               	bcf	3,5	;RP0=0, select bank0
  9802     0148  1303               	bcf	3,6	;RP1=0, select bank0
  9803     0149  00D4               	movwf	??_efgtoa+1
  9804     014A  1683               	bsf	3,5	;RP0=1, select bank1
  9805     014B  1303               	bcf	3,6	;RP1=0, select bank1
  9806     014C  0844               	movf	(efgtoa@g+2)^(0+128),w
  9807     014D  1283               	bcf	3,5	;RP0=0, select bank0
  9808     014E  1303               	bcf	3,6	;RP1=0, select bank0
  9809     014F  00D5               	movwf	??_efgtoa+2
  9810     0150  1683               	bsf	3,5	;RP0=1, select bank1
  9811     0151  1303               	bcf	3,6	;RP1=0, select bank1
  9812     0152  0845               	movf	(efgtoa@g+3)^(0+128),w
  9813     0153  1283               	bcf	3,5	;RP0=0, select bank0
  9814     0154  1303               	bcf	3,6	;RP1=0, select bank0
  9815     0155  00D6               	movwf	??_efgtoa+3
  9816     0156  1683               	bsf	3,5	;RP0=1, select bank1
  9817     0157  1303               	bcf	3,6	;RP1=0, select bank1
  9818     0158  0848               	movf	efgtoa@u^(0+128),w
  9819     0159  1283               	bcf	3,5	;RP0=0, select bank0
  9820     015A  1303               	bcf	3,6	;RP1=0, select bank0
  9821     015B  02D3               	subwf	??_efgtoa,f
  9822     015C  1683               	bsf	3,5	;RP0=1, select bank1
  9823     015D  1303               	bcf	3,6	;RP1=0, select bank1
  9824     015E  0849               	movf	(efgtoa@u+1)^(0+128),w
  9825     015F  1C03               	skipc
  9826     0160  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
  9827     0161  2963               	goto	u5771
  9828     0162  2966               	goto	u5772
  9829     0163                     u5771:
  9830     0163  1283               	bcf	3,5	;RP0=0, select bank0
  9831     0164  1303               	bcf	3,6	;RP1=0, select bank0
  9832     0165  02D4               	subwf	??_efgtoa+1,f
  9833     0166                     u5772:
  9834     0166  1683               	bsf	3,5	;RP0=1, select bank1
  9835     0167  1303               	bcf	3,6	;RP1=0, select bank1
  9836     0168  084A               	movf	(efgtoa@u+2)^(0+128),w
  9837     0169  1C03               	skipc
  9838     016A  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
  9839     016B  296D               	goto	u5773
  9840     016C  2970               	goto	u5774
  9841     016D                     u5773:
  9842     016D  1283               	bcf	3,5	;RP0=0, select bank0
  9843     016E  1303               	bcf	3,6	;RP1=0, select bank0
  9844     016F  02D5               	subwf	??_efgtoa+2,f
  9845     0170                     u5774:
  9846     0170  1683               	bsf	3,5	;RP0=1, select bank1
  9847     0171  1303               	bcf	3,6	;RP1=0, select bank1
  9848     0172  084B               	movf	(efgtoa@u+3)^(0+128),w
  9849     0173  1C03               	skipc
  9850     0174  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
  9851     0175  2977               	goto	u5775
  9852     0176  297A               	goto	u5776
  9853     0177                     u5775:
  9854     0177  1283               	bcf	3,5	;RP0=0, select bank0
  9855     0178  1303               	bcf	3,6	;RP1=0, select bank0
  9856     0179  02D6               	subwf	??_efgtoa+3,f
  9857     017A                     u5776:
  9858     017A  1683               	bsf	3,5	;RP0=1, select bank1
  9859     017B  1303               	bcf	3,6	;RP1=0, select bank1
  9860     017C  1283               	bcf	3,5	;RP0=0, select bank0
  9861     017D  1303               	bcf	3,6	;RP1=0, select bank0
  9862     017E  0856               	movf	??_efgtoa+3,w
  9863     017F  00F5               	movwf	labs@a+3
  9864     0180  0855               	movf	??_efgtoa+2,w
  9865     0181  00F4               	movwf	labs@a+2
  9866     0182  0854               	movf	??_efgtoa+1,w
  9867     0183  00F3               	movwf	labs@a+1
  9868     0184  0853               	movf	??_efgtoa,w
  9869     0185  00F2               	movwf	labs@a
  9870     0186  160A  158A  24CB  120A  118A  	fcall	_labs
  9871     018B  1BF5               	btfsc	?_labs+3,7
  9872     018C  299E               	goto	u5780
  9873     018D  0875               	movf	?_labs+3,w
  9874     018E  1D03               	btfss	3,2
  9875     018F  299D               	goto	u5781
  9876     0190  0874               	movf	?_labs+2,w
  9877     0191  1D03               	btfss	3,2
  9878     0192  299D               	goto	u5781
  9879     0193  0873               	movf	?_labs+1,w
  9880     0194  1D03               	btfss	3,2
  9881     0195  299D               	goto	u5781
  9882     0196  3002               	movlw	2
  9883     0197  0272               	subwf	?_labs,w
  9884     0198  1D03               	skipz
  9885     0199  299A               	goto	u5783
  9886     019A                     u5783:
  9887     019A  1803               	btfsc	3,0
  9888     019B  299D               	goto	u5781
  9889     019C  299E               	goto	u5780
  9890     019D                     u5781:
  9891     019D  2A2F               	goto	l3862
  9892     019E                     u5780:
  9893     019E                     l3852:
  9894                           
  9895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9896     019E  1683               	bsf	3,5	;RP0=1, select bank1
  9897     019F  1303               	bcf	3,6	;RP1=0, select bank1
  9898     01A0  084B               	movf	(efgtoa@u+3)^(0+128),w
  9899     01A1  00C5               	movwf	(efgtoa@g+3)^(0+128)
  9900     01A2  084A               	movf	(efgtoa@u+2)^(0+128),w
  9901     01A3  00C4               	movwf	(efgtoa@g+2)^(0+128)
  9902     01A4  0849               	movf	(efgtoa@u+1)^(0+128),w
  9903     01A5  00C3               	movwf	(efgtoa@g+1)^(0+128)
  9904     01A6  0848               	movf	efgtoa@u^(0+128),w
  9905     01A7  00C2               	movwf	efgtoa@g^(0+128)
  9906                           
  9907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  9908     01A8  2A68               	goto	l3864
  9909     01A9                     l3854:
  9910                           
  9911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  9912     01A9  3041               	movlw	65
  9913     01AA  00F5               	movwf	___fldiv@a+3
  9914     01AB  3020               	movlw	32
  9915     01AC  00F4               	movwf	___fldiv@a+2
  9916     01AD  3000               	movlw	0
  9917     01AE  00F3               	movwf	___fldiv@a+1
  9918     01AF  3000               	movlw	0
  9919     01B0  00F2               	movwf	___fldiv@a
  9920     01B1  1683               	bsf	3,5	;RP0=1, select bank1
  9921     01B2  1303               	bcf	3,6	;RP1=0, select bank1
  9922     01B3  084B               	movf	(efgtoa@u+3)^(0+128),w
  9923     01B4  00F9               	movwf	___fldiv@b+3
  9924     01B5  084A               	movf	(efgtoa@u+2)^(0+128),w
  9925     01B6  00F8               	movwf	___fldiv@b+2
  9926     01B7  0849               	movf	(efgtoa@u+1)^(0+128),w
  9927     01B8  00F7               	movwf	___fldiv@b+1
  9928     01B9  0848               	movf	efgtoa@u^(0+128),w
  9929     01BA  00F6               	movwf	___fldiv@b
  9930     01BB  120A  158A  209E  120A  118A  	fcall	___fldiv
  9931     01C0  0875               	movf	?___fldiv+3,w
  9932     01C1  1683               	bsf	3,5	;RP0=1, select bank1
  9933     01C2  1303               	bcf	3,6	;RP1=0, select bank1
  9934     01C3  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9935     01C4  0874               	movf	?___fldiv+2,w
  9936     01C5  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9937     01C6  0873               	movf	?___fldiv+1,w
  9938     01C7  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9939     01C8  0872               	movf	?___fldiv,w
  9940     01C9  00C8               	movwf	efgtoa@u^(0+128)
  9941     01CA                     l3856:
  9942                           
  9943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  9944     01CA  30FF               	movlw	255
  9945     01CB  07AF               	addwf	efgtoa@e^(0+128),f
  9946     01CC  1803               	skipnc
  9947     01CD  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  9948     01CE  30FF               	movlw	255
  9949     01CF  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  9950     01D0                     l3858:
  9951                           
  9952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  9953     01D0  0842               	movf	efgtoa@g^(0+128),w
  9954     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  9955     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  9956     01D3  00D3               	movwf	??_efgtoa
  9957     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  9958     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  9959     01D6  0843               	movf	(efgtoa@g+1)^(0+128),w
  9960     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  9961     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  9962     01D9  00D4               	movwf	??_efgtoa+1
  9963     01DA  1683               	bsf	3,5	;RP0=1, select bank1
  9964     01DB  1303               	bcf	3,6	;RP1=0, select bank1
  9965     01DC  0844               	movf	(efgtoa@g+2)^(0+128),w
  9966     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  9967     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  9968     01DF  00D5               	movwf	??_efgtoa+2
  9969     01E0  1683               	bsf	3,5	;RP0=1, select bank1
  9970     01E1  1303               	bcf	3,6	;RP1=0, select bank1
  9971     01E2  0845               	movf	(efgtoa@g+3)^(0+128),w
  9972     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  9973     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  9974     01E5  00D6               	movwf	??_efgtoa+3
  9975     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  9976     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  9977     01E8  0848               	movf	efgtoa@u^(0+128),w
  9978     01E9  1283               	bcf	3,5	;RP0=0, select bank0
  9979     01EA  1303               	bcf	3,6	;RP1=0, select bank0
  9980     01EB  02D3               	subwf	??_efgtoa,f
  9981     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  9982     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  9983     01EE  0849               	movf	(efgtoa@u+1)^(0+128),w
  9984     01EF  1C03               	skipc
  9985     01F0  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
  9986     01F1  29F3               	goto	u5791
  9987     01F2  29F6               	goto	u5792
  9988     01F3                     u5791:
  9989     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  9990     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  9991     01F5  02D4               	subwf	??_efgtoa+1,f
  9992     01F6                     u5792:
  9993     01F6  1683               	bsf	3,5	;RP0=1, select bank1
  9994     01F7  1303               	bcf	3,6	;RP1=0, select bank1
  9995     01F8  084A               	movf	(efgtoa@u+2)^(0+128),w
  9996     01F9  1C03               	skipc
  9997     01FA  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
  9998     01FB  29FD               	goto	u5793
  9999     01FC  2A00               	goto	u5794
 10000     01FD                     u5793:
 10001     01FD  1283               	bcf	3,5	;RP0=0, select bank0
 10002     01FE  1303               	bcf	3,6	;RP1=0, select bank0
 10003     01FF  02D5               	subwf	??_efgtoa+2,f
 10004     0200                     u5794:
 10005     0200  1683               	bsf	3,5	;RP0=1, select bank1
 10006     0201  1303               	bcf	3,6	;RP1=0, select bank1
 10007     0202  084B               	movf	(efgtoa@u+3)^(0+128),w
 10008     0203  1C03               	skipc
 10009     0204  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 10010     0205  2A07               	goto	u5795
 10011     0206  2A0A               	goto	u5796
 10012     0207                     u5795:
 10013     0207  1283               	bcf	3,5	;RP0=0, select bank0
 10014     0208  1303               	bcf	3,6	;RP1=0, select bank0
 10015     0209  02D6               	subwf	??_efgtoa+3,f
 10016     020A                     u5796:
 10017     020A  1683               	bsf	3,5	;RP0=1, select bank1
 10018     020B  1303               	bcf	3,6	;RP1=0, select bank1
 10019     020C  1283               	bcf	3,5	;RP0=0, select bank0
 10020     020D  1303               	bcf	3,6	;RP1=0, select bank0
 10021     020E  0856               	movf	??_efgtoa+3,w
 10022     020F  00F5               	movwf	labs@a+3
 10023     0210  0855               	movf	??_efgtoa+2,w
 10024     0211  00F4               	movwf	labs@a+2
 10025     0212  0854               	movf	??_efgtoa+1,w
 10026     0213  00F3               	movwf	labs@a+1
 10027     0214  0853               	movf	??_efgtoa,w
 10028     0215  00F2               	movwf	labs@a
 10029     0216  160A  158A  24CB  120A  118A  	fcall	_labs
 10030     021B  1BF5               	btfsc	?_labs+3,7
 10031     021C  2A2E               	goto	u5800
 10032     021D  0875               	movf	?_labs+3,w
 10033     021E  1D03               	btfss	3,2
 10034     021F  2A2D               	goto	u5801
 10035     0220  0874               	movf	?_labs+2,w
 10036     0221  1D03               	btfss	3,2
 10037     0222  2A2D               	goto	u5801
 10038     0223  0873               	movf	?_labs+1,w
 10039     0224  1D03               	btfss	3,2
 10040     0225  2A2D               	goto	u5801
 10041     0226  3002               	movlw	2
 10042     0227  0272               	subwf	?_labs,w
 10043     0228  1D03               	skipz
 10044     0229  2A2A               	goto	u5803
 10045     022A                     u5803:
 10046     022A  1803               	btfsc	3,0
 10047     022B  2A2D               	goto	u5801
 10048     022C  2A2E               	goto	u5800
 10049     022D                     u5801:
 10050     022D  2A2F               	goto	l3862
 10051     022E                     u5800:
 10052     022E  299E               	goto	l3852
 10053     022F                     l3862:
 10054                           
 10055                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 10056     022F  1683               	bsf	3,5	;RP0=1, select bank1
 10057     0230  1303               	bcf	3,6	;RP1=0, select bank1
 10058     0231  0845               	movf	(efgtoa@g+3)^(0+128),w
 10059     0232  1283               	bcf	3,5	;RP0=0, select bank0
 10060     0233  1303               	bcf	3,6	;RP1=0, select bank0
 10061     0234  00C3               	movwf	___flge@ff1+3
 10062     0235  1683               	bsf	3,5	;RP0=1, select bank1
 10063     0236  1303               	bcf	3,6	;RP1=0, select bank1
 10064     0237  0844               	movf	(efgtoa@g+2)^(0+128),w
 10065     0238  1283               	bcf	3,5	;RP0=0, select bank0
 10066     0239  1303               	bcf	3,6	;RP1=0, select bank0
 10067     023A  00C2               	movwf	___flge@ff1+2
 10068     023B  1683               	bsf	3,5	;RP0=1, select bank1
 10069     023C  1303               	bcf	3,6	;RP1=0, select bank1
 10070     023D  0843               	movf	(efgtoa@g+1)^(0+128),w
 10071     023E  1283               	bcf	3,5	;RP0=0, select bank0
 10072     023F  1303               	bcf	3,6	;RP1=0, select bank0
 10073     0240  00C1               	movwf	___flge@ff1+1
 10074     0241  1683               	bsf	3,5	;RP0=1, select bank1
 10075     0242  1303               	bcf	3,6	;RP1=0, select bank1
 10076     0243  0842               	movf	efgtoa@g^(0+128),w
 10077     0244  1283               	bcf	3,5	;RP0=0, select bank0
 10078     0245  1303               	bcf	3,6	;RP1=0, select bank0
 10079     0246  00C0               	movwf	___flge@ff1
 10080     0247  1683               	bsf	3,5	;RP0=1, select bank1
 10081     0248  1303               	bcf	3,6	;RP1=0, select bank1
 10082     0249  084B               	movf	(efgtoa@u+3)^(0+128),w
 10083     024A  1283               	bcf	3,5	;RP0=0, select bank0
 10084     024B  1303               	bcf	3,6	;RP1=0, select bank0
 10085     024C  00C7               	movwf	___flge@ff2+3
 10086     024D  1683               	bsf	3,5	;RP0=1, select bank1
 10087     024E  1303               	bcf	3,6	;RP1=0, select bank1
 10088     024F  084A               	movf	(efgtoa@u+2)^(0+128),w
 10089     0250  1283               	bcf	3,5	;RP0=0, select bank0
 10090     0251  1303               	bcf	3,6	;RP1=0, select bank0
 10091     0252  00C6               	movwf	___flge@ff2+2
 10092     0253  1683               	bsf	3,5	;RP0=1, select bank1
 10093     0254  1303               	bcf	3,6	;RP1=0, select bank1
 10094     0255  0849               	movf	(efgtoa@u+1)^(0+128),w
 10095     0256  1283               	bcf	3,5	;RP0=0, select bank0
 10096     0257  1303               	bcf	3,6	;RP1=0, select bank0
 10097     0258  00C5               	movwf	___flge@ff2+1
 10098     0259  1683               	bsf	3,5	;RP0=1, select bank1
 10099     025A  1303               	bcf	3,6	;RP1=0, select bank1
 10100     025B  0848               	movf	efgtoa@u^(0+128),w
 10101     025C  1283               	bcf	3,5	;RP0=0, select bank0
 10102     025D  1303               	bcf	3,6	;RP1=0, select bank0
 10103     025E  00C4               	movwf	___flge@ff2
 10104     025F  160A  118A  243F  120A  118A  	fcall	___flge
 10105     0264  1C03               	btfss	3,0
 10106     0265  2A67               	goto	u5811
 10107     0266  2A68               	goto	u5810
 10108     0267                     u5811:
 10109     0267  29A9               	goto	l3854
 10110     0268                     u5810:
 10111     0268                     l3864:
 10112                           
 10113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10114     0268  1283               	bcf	3,5	;RP0=0, select bank0
 10115     0269  1303               	bcf	3,6	;RP1=0, select bank0
 10116     026A  0852               	movf	efgtoa@c,w
 10117     026B  1683               	bsf	3,5	;RP0=1, select bank1
 10118     026C  1303               	bcf	3,6	;RP1=0, select bank1
 10119     026D  00A9               	movwf	efgtoa@mode^(0+128)
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 10122     026E  0829               	movf	efgtoa@mode^(0+128),w
 10123     026F  00AA               	movwf	efgtoa@nmode^(0+128)
 10124     0270                     l3866:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 10127     0270  1BE9               	btfsc	(_prec+1)^(0+128),7
 10128     0271  2A73               	goto	u5821
 10129     0272  2A74               	goto	u5820
 10130     0273                     u5821:
 10131     0273  2A79               	goto	l3870
 10132     0274                     u5820:
 10133     0274                     l3868:
 10134     0274  0869               	movf	(_prec+1)^(0+128),w
 10135     0275  00A3               	movwf	(efgtoa@p+1)^(0+128)
 10136     0276  0868               	movf	_prec^(0+128),w
 10137     0277  00A2               	movwf	efgtoa@p^(0+128)
 10138     0278  2A7D               	goto	l788
 10139     0279                     l3870:
 10140     0279  3006               	movlw	6
 10141     027A  00A2               	movwf	efgtoa@p^(0+128)
 10142     027B  3000               	movlw	0
 10143     027C  00A3               	movwf	(efgtoa@p^(0+128)+1)
 10144     027D                     l788:
 10145                           
 10146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 10147     027D  0823               	movf	(efgtoa@p+1)^(0+128),w
 10148     027E  00AE               	movwf	(efgtoa@m+1)^(0+128)
 10149     027F  0822               	movf	efgtoa@p^(0+128),w
 10150     0280  00AD               	movwf	efgtoa@m^(0+128)
 10151                           
 10152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 10153     0281  3001               	movlw	1
 10154     0282  07AD               	addwf	efgtoa@m^(0+128),f
 10155     0283  1803               	skipnc
 10156     0284  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10157     0285  3000               	movlw	0
 10158     0286  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10159     0287                     l3872:
 10160                           
 10161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 10162     0287  3066               	movlw	102
 10163     0288  062A               	xorwf	efgtoa@nmode^(0+128),w
 10164     0289  1D03               	btfss	3,2
 10165     028A  2A8C               	goto	u5831
 10166     028B  2A8D               	goto	u5830
 10167     028C                     u5831:
 10168     028C  2AA7               	goto	l3884
 10169     028D                     u5830:
 10170     028D                     l3874:
 10171                           
 10172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 10173     028D  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
 10174     028E  2A90               	goto	u5841
 10175     028F  2A91               	goto	u5840
 10176     0290                     u5841:
 10177     0290  2A9B               	goto	l3880
 10178     0291                     u5840:
 10179     0291                     l3876:
 10180                           
 10181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 10182     0291  303F               	movlw	63
 10183     0292  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10184     0293  3080               	movlw	128
 10185     0294  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10186     0295  3000               	movlw	0
 10187     0296  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10188     0297  3000               	movlw	0
 10189     0298  00C8               	movwf	efgtoa@u^(0+128)
 10190     0299                     l3878:
 10191                           
 10192                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 10193     0299  01AF               	clrf	efgtoa@e^(0+128)
 10194     029A  01B0               	clrf	(efgtoa@e+1)^(0+128)
 10195     029B                     l3880:
 10196                           
 10197                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 10198     029B  3067               	movlw	103
 10199     029C  0629               	xorwf	efgtoa@mode^(0+128),w
 10200     029D  1903               	btfsc	3,2
 10201     029E  2AA0               	goto	u5851
 10202     029F  2AA1               	goto	u5850
 10203     02A0                     u5851:
 10204     02A0  2AA7               	goto	l3884
 10205     02A1                     u5850:
 10206     02A1                     l3882:
 10207                           
 10208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 10209     02A1  082F               	movf	efgtoa@e^(0+128),w
 10210     02A2  07AD               	addwf	efgtoa@m^(0+128),f
 10211     02A3  1803               	skipnc
 10212     02A4  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10213     02A5  0830               	movf	(efgtoa@e+1)^(0+128),w
 10214     02A6  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10215     02A7                     l3884:
 10216                           
 10217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10218     02A7  01B7               	clrf	efgtoa@i^(0+128)
 10219     02A8  01B8               	clrf	(efgtoa@i+1)^(0+128)
 10220     02A9                     l3886:
 10221                           
 10222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10223     02A9  0845               	movf	(efgtoa@g+3)^(0+128),w
 10224     02AA  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10225     02AB  0844               	movf	(efgtoa@g+2)^(0+128),w
 10226     02AC  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10227     02AD  0843               	movf	(efgtoa@g+1)^(0+128),w
 10228     02AE  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10229     02AF  0842               	movf	efgtoa@g^(0+128),w
 10230     02B0  00B9               	movwf	efgtoa@h^(0+128)
 10231     02B1                     l3888:
 10232                           
 10233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10234     02B1  084B               	movf	(efgtoa@u+3)^(0+128),w
 10235     02B2  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10236     02B3  084A               	movf	(efgtoa@u+2)^(0+128),w
 10237     02B4  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10238     02B5  0849               	movf	(efgtoa@u+1)^(0+128),w
 10239     02B6  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10240     02B7  0848               	movf	efgtoa@u^(0+128),w
 10241     02B8  00B3               	movwf	efgtoa@ou^(0+128)
 10242                           
 10243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10244     02B9  2BA2               	goto	l3900
 10245     02BA                     l3890:
 10246                           
 10247                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 10248     02BA  1683               	bsf	3,5	;RP0=1, select bank1
 10249     02BB  1303               	bcf	3,6	;RP1=0, select bank1
 10250     02BC  084B               	movf	(efgtoa@u+3)^(0+128),w
 10251     02BD  00F5               	movwf	___fldiv@a+3
 10252     02BE  084A               	movf	(efgtoa@u+2)^(0+128),w
 10253     02BF  00F4               	movwf	___fldiv@a+2
 10254     02C0  0849               	movf	(efgtoa@u+1)^(0+128),w
 10255     02C1  00F3               	movwf	___fldiv@a+1
 10256     02C2  0848               	movf	efgtoa@u^(0+128),w
 10257     02C3  00F2               	movwf	___fldiv@a
 10258     02C4  083C               	movf	(efgtoa@h+3)^(0+128),w
 10259     02C5  00F9               	movwf	___fldiv@b+3
 10260     02C6  083B               	movf	(efgtoa@h+2)^(0+128),w
 10261     02C7  00F8               	movwf	___fldiv@b+2
 10262     02C8  083A               	movf	(efgtoa@h+1)^(0+128),w
 10263     02C9  00F7               	movwf	___fldiv@b+1
 10264     02CA  0839               	movf	efgtoa@h^(0+128),w
 10265     02CB  00F6               	movwf	___fldiv@b
 10266     02CC  120A  158A  209E  120A  118A  	fcall	___fldiv
 10267     02D1  0875               	movf	?___fldiv+3,w
 10268     02D2  1283               	bcf	3,5	;RP0=0, select bank0
 10269     02D3  1303               	bcf	3,6	;RP1=0, select bank0
 10270     02D4  00B5               	movwf	floorf@x+3
 10271     02D5  0874               	movf	?___fldiv+2,w
 10272     02D6  00B4               	movwf	floorf@x+2
 10273     02D7  0873               	movf	?___fldiv+1,w
 10274     02D8  00B3               	movwf	floorf@x+1
 10275     02D9  0872               	movf	?___fldiv,w
 10276     02DA  00B2               	movwf	floorf@x
 10277     02DB  160A  118A  26F1  120A  118A  	fcall	_floorf
 10278     02E0  1283               	bcf	3,5	;RP0=0, select bank0
 10279     02E1  1303               	bcf	3,6	;RP1=0, select bank0
 10280     02E2  0835               	movf	?_floorf+3,w
 10281     02E3  1683               	bsf	3,5	;RP0=1, select bank1
 10282     02E4  1303               	bcf	3,6	;RP1=0, select bank1
 10283     02E5  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10284     02E6  1283               	bcf	3,5	;RP0=0, select bank0
 10285     02E7  1303               	bcf	3,6	;RP1=0, select bank0
 10286     02E8  0834               	movf	?_floorf+2,w
 10287     02E9  1683               	bsf	3,5	;RP0=1, select bank1
 10288     02EA  1303               	bcf	3,6	;RP1=0, select bank1
 10289     02EB  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10290     02EC  1283               	bcf	3,5	;RP0=0, select bank0
 10291     02ED  1303               	bcf	3,6	;RP1=0, select bank0
 10292     02EE  0833               	movf	?_floorf+1,w
 10293     02EF  1683               	bsf	3,5	;RP0=1, select bank1
 10294     02F0  1303               	bcf	3,6	;RP1=0, select bank1
 10295     02F1  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10296     02F2  1283               	bcf	3,5	;RP0=0, select bank0
 10297     02F3  1303               	bcf	3,6	;RP1=0, select bank0
 10298     02F4  0832               	movf	?_floorf,w
 10299     02F5  1683               	bsf	3,5	;RP0=1, select bank1
 10300     02F6  1303               	bcf	3,6	;RP1=0, select bank1
 10301     02F7  00BD               	movwf	efgtoa@l^(0+128)
 10302     02F8                     l3892:
 10303                           
 10304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 10305     02F8  0840               	movf	(efgtoa@l+3)^(0+128),w
 10306     02F9  00F5               	movwf	___fltol@f1+3
 10307     02FA  083F               	movf	(efgtoa@l+2)^(0+128),w
 10308     02FB  00F4               	movwf	___fltol@f1+2
 10309     02FC  083E               	movf	(efgtoa@l+1)^(0+128),w
 10310     02FD  00F3               	movwf	___fltol@f1+1
 10311     02FE  083D               	movf	efgtoa@l^(0+128),w
 10312     02FF  00F2               	movwf	___fltol@f1
 10313     0300  160A  118A  2329  120A  118A  	fcall	___fltol
 10314     0305  0873               	movf	?___fltol+1,w
 10315     0306  1683               	bsf	3,5	;RP0=1, select bank1
 10316     0307  1303               	bcf	3,6	;RP1=0, select bank1
 10317     0308  00AC               	movwf	(efgtoa@d+1)^(0+128)
 10318     0309  0872               	movf	?___fltol,w
 10319     030A  00AB               	movwf	efgtoa@d^(0+128)
 10320     030B                     l3894:
 10321                           
 10322                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 10323     030B  084B               	movf	(efgtoa@u+3)^(0+128),w
 10324     030C  1283               	bcf	3,5	;RP0=0, select bank0
 10325     030D  1303               	bcf	3,6	;RP1=0, select bank0
 10326     030E  00AD               	movwf	___flmul@a+3
 10327     030F  1683               	bsf	3,5	;RP0=1, select bank1
 10328     0310  1303               	bcf	3,6	;RP1=0, select bank1
 10329     0311  084A               	movf	(efgtoa@u+2)^(0+128),w
 10330     0312  1283               	bcf	3,5	;RP0=0, select bank0
 10331     0313  1303               	bcf	3,6	;RP1=0, select bank0
 10332     0314  00AC               	movwf	___flmul@a+2
 10333     0315  1683               	bsf	3,5	;RP0=1, select bank1
 10334     0316  1303               	bcf	3,6	;RP1=0, select bank1
 10335     0317  0849               	movf	(efgtoa@u+1)^(0+128),w
 10336     0318  1283               	bcf	3,5	;RP0=0, select bank0
 10337     0319  1303               	bcf	3,6	;RP1=0, select bank0
 10338     031A  00AB               	movwf	___flmul@a+1
 10339     031B  1683               	bsf	3,5	;RP0=1, select bank1
 10340     031C  1303               	bcf	3,6	;RP1=0, select bank1
 10341     031D  0848               	movf	efgtoa@u^(0+128),w
 10342     031E  1283               	bcf	3,5	;RP0=0, select bank0
 10343     031F  1303               	bcf	3,6	;RP1=0, select bank0
 10344     0320  00AA               	movwf	___flmul@a
 10345     0321  1683               	bsf	3,5	;RP0=1, select bank1
 10346     0322  1303               	bcf	3,6	;RP1=0, select bank1
 10347     0323  0840               	movf	(efgtoa@l+3)^(0+128),w
 10348     0324  1283               	bcf	3,5	;RP0=0, select bank0
 10349     0325  1303               	bcf	3,6	;RP1=0, select bank0
 10350     0326  00A9               	movwf	___flmul@b+3
 10351     0327  1683               	bsf	3,5	;RP0=1, select bank1
 10352     0328  1303               	bcf	3,6	;RP1=0, select bank1
 10353     0329  083F               	movf	(efgtoa@l+2)^(0+128),w
 10354     032A  1283               	bcf	3,5	;RP0=0, select bank0
 10355     032B  1303               	bcf	3,6	;RP1=0, select bank0
 10356     032C  00A8               	movwf	___flmul@b+2
 10357     032D  1683               	bsf	3,5	;RP0=1, select bank1
 10358     032E  1303               	bcf	3,6	;RP1=0, select bank1
 10359     032F  083E               	movf	(efgtoa@l+1)^(0+128),w
 10360     0330  1283               	bcf	3,5	;RP0=0, select bank0
 10361     0331  1303               	bcf	3,6	;RP1=0, select bank0
 10362     0332  00A7               	movwf	___flmul@b+1
 10363     0333  1683               	bsf	3,5	;RP0=1, select bank1
 10364     0334  1303               	bcf	3,6	;RP1=0, select bank1
 10365     0335  083D               	movf	efgtoa@l^(0+128),w
 10366     0336  1283               	bcf	3,5	;RP0=0, select bank0
 10367     0337  1303               	bcf	3,6	;RP1=0, select bank0
 10368     0338  00A6               	movwf	___flmul@b
 10369     0339  120A  158A  24BE  120A  118A  	fcall	___flmul
 10370     033E  1283               	bcf	3,5	;RP0=0, select bank0
 10371     033F  1303               	bcf	3,6	;RP1=0, select bank0
 10372     0340  0829               	movf	?___flmul+3,w
 10373     0341  00C3               	movwf	___flsub@a+3
 10374     0342  0828               	movf	?___flmul+2,w
 10375     0343  00C2               	movwf	___flsub@a+2
 10376     0344  0827               	movf	?___flmul+1,w
 10377     0345  00C1               	movwf	___flsub@a+1
 10378     0346  0826               	movf	?___flmul,w
 10379     0347  00C0               	movwf	___flsub@a
 10380     0348  1683               	bsf	3,5	;RP0=1, select bank1
 10381     0349  1303               	bcf	3,6	;RP1=0, select bank1
 10382     034A  083C               	movf	(efgtoa@h+3)^(0+128),w
 10383     034B  1283               	bcf	3,5	;RP0=0, select bank0
 10384     034C  1303               	bcf	3,6	;RP1=0, select bank0
 10385     034D  00C7               	movwf	___flsub@b+3
 10386     034E  1683               	bsf	3,5	;RP0=1, select bank1
 10387     034F  1303               	bcf	3,6	;RP1=0, select bank1
 10388     0350  083B               	movf	(efgtoa@h+2)^(0+128),w
 10389     0351  1283               	bcf	3,5	;RP0=0, select bank0
 10390     0352  1303               	bcf	3,6	;RP1=0, select bank0
 10391     0353  00C6               	movwf	___flsub@b+2
 10392     0354  1683               	bsf	3,5	;RP0=1, select bank1
 10393     0355  1303               	bcf	3,6	;RP1=0, select bank1
 10394     0356  083A               	movf	(efgtoa@h+1)^(0+128),w
 10395     0357  1283               	bcf	3,5	;RP0=0, select bank0
 10396     0358  1303               	bcf	3,6	;RP1=0, select bank0
 10397     0359  00C5               	movwf	___flsub@b+1
 10398     035A  1683               	bsf	3,5	;RP0=1, select bank1
 10399     035B  1303               	bcf	3,6	;RP1=0, select bank1
 10400     035C  0839               	movf	efgtoa@h^(0+128),w
 10401     035D  1283               	bcf	3,5	;RP0=0, select bank0
 10402     035E  1303               	bcf	3,6	;RP1=0, select bank0
 10403     035F  00C4               	movwf	___flsub@b
 10404     0360  160A  158A  255B  120A  118A  	fcall	___flsub
 10405     0365  1283               	bcf	3,5	;RP0=0, select bank0
 10406     0366  1303               	bcf	3,6	;RP1=0, select bank0
 10407     0367  0843               	movf	?___flsub+3,w
 10408     0368  1683               	bsf	3,5	;RP0=1, select bank1
 10409     0369  1303               	bcf	3,6	;RP1=0, select bank1
 10410     036A  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10411     036B  1283               	bcf	3,5	;RP0=0, select bank0
 10412     036C  1303               	bcf	3,6	;RP1=0, select bank0
 10413     036D  0842               	movf	?___flsub+2,w
 10414     036E  1683               	bsf	3,5	;RP0=1, select bank1
 10415     036F  1303               	bcf	3,6	;RP1=0, select bank1
 10416     0370  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10417     0371  1283               	bcf	3,5	;RP0=0, select bank0
 10418     0372  1303               	bcf	3,6	;RP1=0, select bank0
 10419     0373  0841               	movf	?___flsub+1,w
 10420     0374  1683               	bsf	3,5	;RP0=1, select bank1
 10421     0375  1303               	bcf	3,6	;RP1=0, select bank1
 10422     0376  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10423     0377  1283               	bcf	3,5	;RP0=0, select bank0
 10424     0378  1303               	bcf	3,6	;RP1=0, select bank0
 10425     0379  0840               	movf	?___flsub,w
 10426     037A  1683               	bsf	3,5	;RP0=1, select bank1
 10427     037B  1303               	bcf	3,6	;RP1=0, select bank1
 10428     037C  00B9               	movwf	efgtoa@h^(0+128)
 10429     037D                     l3896:
 10430                           
 10431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 10432     037D  3041               	movlw	65
 10433     037E  00F5               	movwf	___fldiv@a+3
 10434     037F  3020               	movlw	32
 10435     0380  00F4               	movwf	___fldiv@a+2
 10436     0381  3000               	movlw	0
 10437     0382  00F3               	movwf	___fldiv@a+1
 10438     0383  3000               	movlw	0
 10439     0384  00F2               	movwf	___fldiv@a
 10440     0385  084B               	movf	(efgtoa@u+3)^(0+128),w
 10441     0386  00F9               	movwf	___fldiv@b+3
 10442     0387  084A               	movf	(efgtoa@u+2)^(0+128),w
 10443     0388  00F8               	movwf	___fldiv@b+2
 10444     0389  0849               	movf	(efgtoa@u+1)^(0+128),w
 10445     038A  00F7               	movwf	___fldiv@b+1
 10446     038B  0848               	movf	efgtoa@u^(0+128),w
 10447     038C  00F6               	movwf	___fldiv@b
 10448     038D  120A  158A  209E  120A  118A  	fcall	___fldiv
 10449     0392  0875               	movf	?___fldiv+3,w
 10450     0393  1683               	bsf	3,5	;RP0=1, select bank1
 10451     0394  1303               	bcf	3,6	;RP1=0, select bank1
 10452     0395  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10453     0396  0874               	movf	?___fldiv+2,w
 10454     0397  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10455     0398  0873               	movf	?___fldiv+1,w
 10456     0399  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10457     039A  0872               	movf	?___fldiv,w
 10458     039B  00C8               	movwf	efgtoa@u^(0+128)
 10459     039C                     l3898:
 10460                           
 10461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10462     039C  3001               	movlw	1
 10463     039D  07B7               	addwf	efgtoa@i^(0+128),f
 10464     039E  1803               	skipnc
 10465     039F  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 10466     03A0  3000               	movlw	0
 10467     03A1  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 10468     03A2                     l3900:
 10469                           
 10470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10471     03A2  0838               	movf	(efgtoa@i+1)^(0+128),w
 10472     03A3  3A80               	xorlw	128
 10473     03A4  1283               	bcf	3,5	;RP0=0, select bank0
 10474     03A5  1303               	bcf	3,6	;RP1=0, select bank0
 10475     03A6  00D3               	movwf	??_efgtoa
 10476     03A7  1683               	bsf	3,5	;RP0=1, select bank1
 10477     03A8  1303               	bcf	3,6	;RP1=0, select bank1
 10478     03A9  082E               	movf	(efgtoa@m+1)^(0+128),w
 10479     03AA  3A80               	xorlw	128
 10480     03AB  1283               	bcf	3,5	;RP0=0, select bank0
 10481     03AC  1303               	bcf	3,6	;RP1=0, select bank0
 10482     03AD  0253               	subwf	??_efgtoa,w
 10483     03AE  1D03               	skipz
 10484     03AF  2BB4               	goto	u5865
 10485     03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10486     03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10487     03B2  082D               	movf	efgtoa@m^(0+128),w
 10488     03B3  0237               	subwf	efgtoa@i^(0+128),w
 10489     03B4                     u5865:
 10490     03B4  1C03               	skipc
 10491     03B5  2BB7               	goto	u5861
 10492     03B6  2BB8               	goto	u5860
 10493     03B7                     u5861:
 10494     03B7  2ABA               	goto	l3890
 10495     03B8                     u5860:
 10496     03B8                     l3902:
 10497                           
 10498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 10499     03B8  3040               	movlw	64
 10500     03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10501     03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10502     03BB  00A9               	movwf	___flmul@b+3
 10503     03BC  30A0               	movlw	160
 10504     03BD  00A8               	movwf	___flmul@b+2
 10505     03BE  3000               	movlw	0
 10506     03BF  00A7               	movwf	___flmul@b+1
 10507     03C0  3000               	movlw	0
 10508     03C1  00A6               	movwf	___flmul@b
 10509     03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10510     03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10511     03C4  084B               	movf	(efgtoa@u+3)^(0+128),w
 10512     03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10513     03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10514     03C7  00AD               	movwf	___flmul@a+3
 10515     03C8  1683               	bsf	3,5	;RP0=1, select bank1
 10516     03C9  1303               	bcf	3,6	;RP1=0, select bank1
 10517     03CA  084A               	movf	(efgtoa@u+2)^(0+128),w
 10518     03CB  1283               	bcf	3,5	;RP0=0, select bank0
 10519     03CC  1303               	bcf	3,6	;RP1=0, select bank0
 10520     03CD  00AC               	movwf	___flmul@a+2
 10521     03CE  1683               	bsf	3,5	;RP0=1, select bank1
 10522     03CF  1303               	bcf	3,6	;RP1=0, select bank1
 10523     03D0  0849               	movf	(efgtoa@u+1)^(0+128),w
 10524     03D1  1283               	bcf	3,5	;RP0=0, select bank0
 10525     03D2  1303               	bcf	3,6	;RP1=0, select bank0
 10526     03D3  00AB               	movwf	___flmul@a+1
 10527     03D4  1683               	bsf	3,5	;RP0=1, select bank1
 10528     03D5  1303               	bcf	3,6	;RP1=0, select bank1
 10529     03D6  0848               	movf	efgtoa@u^(0+128),w
 10530     03D7  1283               	bcf	3,5	;RP0=0, select bank0
 10531     03D8  1303               	bcf	3,6	;RP1=0, select bank0
 10532     03D9  00AA               	movwf	___flmul@a
 10533     03DA  120A  158A  24BE  120A  118A  	fcall	___flmul
 10534     03DF  1283               	bcf	3,5	;RP0=0, select bank0
 10535     03E0  1303               	bcf	3,6	;RP1=0, select bank0
 10536     03E1  0829               	movf	?___flmul+3,w
 10537     03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10538     03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10539     03E4  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10540     03E5  1283               	bcf	3,5	;RP0=0, select bank0
 10541     03E6  1303               	bcf	3,6	;RP1=0, select bank0
 10542     03E7  0828               	movf	?___flmul+2,w
 10543     03E8  1683               	bsf	3,5	;RP0=1, select bank1
 10544     03E9  1303               	bcf	3,6	;RP1=0, select bank1
 10545     03EA  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10546     03EB  1283               	bcf	3,5	;RP0=0, select bank0
 10547     03EC  1303               	bcf	3,6	;RP1=0, select bank0
 10548     03ED  0827               	movf	?___flmul+1,w
 10549     03EE  1683               	bsf	3,5	;RP0=1, select bank1
 10550     03EF  1303               	bcf	3,6	;RP1=0, select bank1
 10551     03F0  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10552     03F1  1283               	bcf	3,5	;RP0=0, select bank0
 10553     03F2  1303               	bcf	3,6	;RP1=0, select bank0
 10554     03F3  0826               	movf	?___flmul,w
 10555     03F4  1683               	bsf	3,5	;RP0=1, select bank1
 10556     03F5  1303               	bcf	3,6	;RP1=0, select bank1
 10557     03F6  00BD               	movwf	efgtoa@l^(0+128)
 10558     03F7                     l3904:
 10559                           
 10560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 10561     03F7  083C               	movf	(efgtoa@h+3)^(0+128),w
 10562     03F8  1283               	bcf	3,5	;RP0=0, select bank0
 10563     03F9  1303               	bcf	3,6	;RP1=0, select bank0
 10564     03FA  00C3               	movwf	___flge@ff1+3
 10565     03FB  1683               	bsf	3,5	;RP0=1, select bank1
 10566     03FC  1303               	bcf	3,6	;RP1=0, select bank1
 10567     03FD  083B               	movf	(efgtoa@h+2)^(0+128),w
 10568     03FE  1283               	bcf	3,5	;RP0=0, select bank0
 10569     03FF  1303               	bcf	3,6	;RP1=0, select bank0
 10570     0400  00C2               	movwf	___flge@ff1+2
 10571     0401  1683               	bsf	3,5	;RP0=1, select bank1
 10572     0402  1303               	bcf	3,6	;RP1=0, select bank1
 10573     0403  083A               	movf	(efgtoa@h+1)^(0+128),w
 10574     0404  1283               	bcf	3,5	;RP0=0, select bank0
 10575     0405  1303               	bcf	3,6	;RP1=0, select bank0
 10576     0406  00C1               	movwf	___flge@ff1+1
 10577     0407  1683               	bsf	3,5	;RP0=1, select bank1
 10578     0408  1303               	bcf	3,6	;RP1=0, select bank1
 10579     0409  0839               	movf	efgtoa@h^(0+128),w
 10580     040A  1283               	bcf	3,5	;RP0=0, select bank0
 10581     040B  1303               	bcf	3,6	;RP1=0, select bank0
 10582     040C  00C0               	movwf	___flge@ff1
 10583     040D  1683               	bsf	3,5	;RP0=1, select bank1
 10584     040E  1303               	bcf	3,6	;RP1=0, select bank1
 10585     040F  0840               	movf	(efgtoa@l+3)^(0+128),w
 10586     0410  1283               	bcf	3,5	;RP0=0, select bank0
 10587     0411  1303               	bcf	3,6	;RP1=0, select bank0
 10588     0412  00C7               	movwf	___flge@ff2+3
 10589     0413  1683               	bsf	3,5	;RP0=1, select bank1
 10590     0414  1303               	bcf	3,6	;RP1=0, select bank1
 10591     0415  083F               	movf	(efgtoa@l+2)^(0+128),w
 10592     0416  1283               	bcf	3,5	;RP0=0, select bank0
 10593     0417  1303               	bcf	3,6	;RP1=0, select bank0
 10594     0418  00C6               	movwf	___flge@ff2+2
 10595     0419  1683               	bsf	3,5	;RP0=1, select bank1
 10596     041A  1303               	bcf	3,6	;RP1=0, select bank1
 10597     041B  083E               	movf	(efgtoa@l+1)^(0+128),w
 10598     041C  1283               	bcf	3,5	;RP0=0, select bank0
 10599     041D  1303               	bcf	3,6	;RP1=0, select bank0
 10600     041E  00C5               	movwf	___flge@ff2+1
 10601     041F  1683               	bsf	3,5	;RP0=1, select bank1
 10602     0420  1303               	bcf	3,6	;RP1=0, select bank1
 10603     0421  083D               	movf	efgtoa@l^(0+128),w
 10604     0422  1283               	bcf	3,5	;RP0=0, select bank0
 10605     0423  1303               	bcf	3,6	;RP1=0, select bank0
 10606     0424  00C4               	movwf	___flge@ff2
 10607     0425  160A  118A  243F  120A  118A  	fcall	___flge
 10608     042A  1803               	btfsc	3,0
 10609     042B  2C2D               	goto	u5871
 10610     042C  2C2E               	goto	u5870
 10611     042D                     u5871:
 10612     042D  2C39               	goto	l3908
 10613     042E                     u5870:
 10614     042E                     l3906:
 10615                           
 10616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 10617     042E  3000               	movlw	0
 10618     042F  1683               	bsf	3,5	;RP0=1, select bank1
 10619     0430  1303               	bcf	3,6	;RP1=0, select bank1
 10620     0431  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10621     0432  3000               	movlw	0
 10622     0433  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10623     0434  3000               	movlw	0
 10624     0435  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10625     0436  3000               	movlw	0
 10626     0437  00BD               	movwf	efgtoa@l^(0+128)
 10627                           
 10628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 10629     0438  2C62               	goto	l3914
 10630     0439                     l3908:
 10631                           
 10632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 10633     0439  1683               	bsf	3,5	;RP0=1, select bank1
 10634     043A  1303               	bcf	3,6	;RP1=0, select bank1
 10635     043B  083C               	movf	(efgtoa@h+3)^(0+128),w
 10636     043C  00F5               	movwf	___fleq@ff1+3
 10637     043D  083B               	movf	(efgtoa@h+2)^(0+128),w
 10638     043E  00F4               	movwf	___fleq@ff1+2
 10639     043F  083A               	movf	(efgtoa@h+1)^(0+128),w
 10640     0440  00F3               	movwf	___fleq@ff1+1
 10641     0441  0839               	movf	efgtoa@h^(0+128),w
 10642     0442  00F2               	movwf	___fleq@ff1
 10643     0443  0840               	movf	(efgtoa@l+3)^(0+128),w
 10644     0444  00F9               	movwf	___fleq@ff2+3
 10645     0445  083F               	movf	(efgtoa@l+2)^(0+128),w
 10646     0446  00F8               	movwf	___fleq@ff2+2
 10647     0447  083E               	movf	(efgtoa@l+1)^(0+128),w
 10648     0448  00F7               	movwf	___fleq@ff2+1
 10649     0449  083D               	movf	efgtoa@l^(0+128),w
 10650     044A  00F6               	movwf	___fleq@ff2
 10651     044B  160A  118A  2039  120A  118A  	fcall	___fleq
 10652     0450  1C03               	btfss	3,0
 10653     0451  2C53               	goto	u5881
 10654     0452  2C54               	goto	u5880
 10655     0453                     u5881:
 10656     0453  2C62               	goto	l3914
 10657     0454                     u5880:
 10658     0454                     l3910:
 10659     0454  1683               	bsf	3,5	;RP0=1, select bank1
 10660     0455  1303               	bcf	3,6	;RP1=0, select bank1
 10661     0456  182B               	btfsc	efgtoa@d^(0+128),0
 10662     0457  2C59               	goto	u5891
 10663     0458  2C5A               	goto	u5890
 10664     0459                     u5891:
 10665     0459  2C62               	goto	l3914
 10666     045A                     u5890:
 10667     045A                     l3912:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 10670     045A  3000               	movlw	0
 10671     045B  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10672     045C  3000               	movlw	0
 10673     045D  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10674     045E  3000               	movlw	0
 10675     045F  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10676     0460  3000               	movlw	0
 10677     0461  00BD               	movwf	efgtoa@l^(0+128)
 10678     0462                     l3914:
 10679                           
 10680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 10681     0462  1683               	bsf	3,5	;RP0=1, select bank1
 10682     0463  1303               	bcf	3,6	;RP1=0, select bank1
 10683     0464  0840               	movf	(efgtoa@l+3)^(0+128),w
 10684     0465  00F5               	movwf	___fladd@b+3
 10685     0466  083F               	movf	(efgtoa@l+2)^(0+128),w
 10686     0467  00F4               	movwf	___fladd@b+2
 10687     0468  083E               	movf	(efgtoa@l+1)^(0+128),w
 10688     0469  00F3               	movwf	___fladd@b+1
 10689     046A  083D               	movf	efgtoa@l^(0+128),w
 10690     046B  00F2               	movwf	___fladd@b
 10691     046C  0845               	movf	(efgtoa@g+3)^(0+128),w
 10692     046D  00F9               	movwf	___fladd@a+3
 10693     046E  0844               	movf	(efgtoa@g+2)^(0+128),w
 10694     046F  00F8               	movwf	___fladd@a+2
 10695     0470  0843               	movf	(efgtoa@g+1)^(0+128),w
 10696     0471  00F7               	movwf	___fladd@a+1
 10697     0472  0842               	movf	efgtoa@g^(0+128),w
 10698     0473  00F6               	movwf	___fladd@a
 10699     0474  120A  158A  226E  120A  118A  	fcall	___fladd
 10700     0479  0875               	movf	?___fladd+3,w
 10701     047A  1683               	bsf	3,5	;RP0=1, select bank1
 10702     047B  1303               	bcf	3,6	;RP1=0, select bank1
 10703     047C  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10704     047D  0874               	movf	?___fladd+2,w
 10705     047E  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10706     047F  0873               	movf	?___fladd+1,w
 10707     0480  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10708     0481  0872               	movf	?___fladd,w
 10709     0482  00B9               	movwf	efgtoa@h^(0+128)
 10710     0483                     l3916:
 10711                           
 10712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 10713     0483  083C               	movf	(efgtoa@h+3)^(0+128),w
 10714     0484  1283               	bcf	3,5	;RP0=0, select bank0
 10715     0485  1303               	bcf	3,6	;RP1=0, select bank0
 10716     0486  00C3               	movwf	___flge@ff1+3
 10717     0487  1683               	bsf	3,5	;RP0=1, select bank1
 10718     0488  1303               	bcf	3,6	;RP1=0, select bank1
 10719     0489  083B               	movf	(efgtoa@h+2)^(0+128),w
 10720     048A  1283               	bcf	3,5	;RP0=0, select bank0
 10721     048B  1303               	bcf	3,6	;RP1=0, select bank0
 10722     048C  00C2               	movwf	___flge@ff1+2
 10723     048D  1683               	bsf	3,5	;RP0=1, select bank1
 10724     048E  1303               	bcf	3,6	;RP1=0, select bank1
 10725     048F  083A               	movf	(efgtoa@h+1)^(0+128),w
 10726     0490  1283               	bcf	3,5	;RP0=0, select bank0
 10727     0491  1303               	bcf	3,6	;RP1=0, select bank0
 10728     0492  00C1               	movwf	___flge@ff1+1
 10729     0493  1683               	bsf	3,5	;RP0=1, select bank1
 10730     0494  1303               	bcf	3,6	;RP1=0, select bank1
 10731     0495  0839               	movf	efgtoa@h^(0+128),w
 10732     0496  1283               	bcf	3,5	;RP0=0, select bank0
 10733     0497  1303               	bcf	3,6	;RP1=0, select bank0
 10734     0498  00C0               	movwf	___flge@ff1
 10735     0499  3041               	movlw	65
 10736     049A  00A9               	movwf	___flmul@b+3
 10737     049B  3020               	movlw	32
 10738     049C  00A8               	movwf	___flmul@b+2
 10739     049D  3000               	movlw	0
 10740     049E  00A7               	movwf	___flmul@b+1
 10741     049F  3000               	movlw	0
 10742     04A0  00A6               	movwf	___flmul@b
 10743     04A1  1683               	bsf	3,5	;RP0=1, select bank1
 10744     04A2  1303               	bcf	3,6	;RP1=0, select bank1
 10745     04A3  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10746     04A4  1283               	bcf	3,5	;RP0=0, select bank0
 10747     04A5  1303               	bcf	3,6	;RP1=0, select bank0
 10748     04A6  00AD               	movwf	___flmul@a+3
 10749     04A7  1683               	bsf	3,5	;RP0=1, select bank1
 10750     04A8  1303               	bcf	3,6	;RP1=0, select bank1
 10751     04A9  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10752     04AA  1283               	bcf	3,5	;RP0=0, select bank0
 10753     04AB  1303               	bcf	3,6	;RP1=0, select bank0
 10754     04AC  00AC               	movwf	___flmul@a+2
 10755     04AD  1683               	bsf	3,5	;RP0=1, select bank1
 10756     04AE  1303               	bcf	3,6	;RP1=0, select bank1
 10757     04AF  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10758     04B0  1283               	bcf	3,5	;RP0=0, select bank0
 10759     04B1  1303               	bcf	3,6	;RP1=0, select bank0
 10760     04B2  00AB               	movwf	___flmul@a+1
 10761     04B3  1683               	bsf	3,5	;RP0=1, select bank1
 10762     04B4  1303               	bcf	3,6	;RP1=0, select bank1
 10763     04B5  0833               	movf	efgtoa@ou^(0+128),w
 10764     04B6  1283               	bcf	3,5	;RP0=0, select bank0
 10765     04B7  1303               	bcf	3,6	;RP1=0, select bank0
 10766     04B8  00AA               	movwf	___flmul@a
 10767     04B9  120A  158A  24BE  120A  118A  	fcall	___flmul
 10768     04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10769     04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10770     04C0  0829               	movf	?___flmul+3,w
 10771     04C1  00C7               	movwf	___flge@ff2+3
 10772     04C2  0828               	movf	?___flmul+2,w
 10773     04C3  00C6               	movwf	___flge@ff2+2
 10774     04C4  0827               	movf	?___flmul+1,w
 10775     04C5  00C5               	movwf	___flge@ff2+1
 10776     04C6  0826               	movf	?___flmul,w
 10777     04C7  00C4               	movwf	___flge@ff2
 10778     04C8  160A  118A  243F  120A  118A  	fcall	___flge
 10779     04CD  1C03               	btfss	3,0
 10780     04CE  2CD0               	goto	u5901
 10781     04CF  2CD1               	goto	u5900
 10782     04D0                     u5901:
 10783     04D0  2D24               	goto	l798
 10784     04D1                     u5900:
 10785     04D1                     l3918:
 10786                           
 10787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 10788     04D1  3001               	movlw	1
 10789     04D2  1683               	bsf	3,5	;RP0=1, select bank1
 10790     04D3  1303               	bcf	3,6	;RP1=0, select bank1
 10791     04D4  07AF               	addwf	efgtoa@e^(0+128),f
 10792     04D5  1803               	skipnc
 10793     04D6  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 10794     04D7  3000               	movlw	0
 10795     04D8  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 10796     04D9                     l3920:
 10797                           
 10798                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 10799     04D9  3041               	movlw	65
 10800     04DA  1283               	bcf	3,5	;RP0=0, select bank0
 10801     04DB  1303               	bcf	3,6	;RP1=0, select bank0
 10802     04DC  00A9               	movwf	___flmul@b+3
 10803     04DD  3020               	movlw	32
 10804     04DE  00A8               	movwf	___flmul@b+2
 10805     04DF  3000               	movlw	0
 10806     04E0  00A7               	movwf	___flmul@b+1
 10807     04E1  3000               	movlw	0
 10808     04E2  00A6               	movwf	___flmul@b
 10809     04E3  1683               	bsf	3,5	;RP0=1, select bank1
 10810     04E4  1303               	bcf	3,6	;RP1=0, select bank1
 10811     04E5  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10812     04E6  1283               	bcf	3,5	;RP0=0, select bank0
 10813     04E7  1303               	bcf	3,6	;RP1=0, select bank0
 10814     04E8  00AD               	movwf	___flmul@a+3
 10815     04E9  1683               	bsf	3,5	;RP0=1, select bank1
 10816     04EA  1303               	bcf	3,6	;RP1=0, select bank1
 10817     04EB  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10818     04EC  1283               	bcf	3,5	;RP0=0, select bank0
 10819     04ED  1303               	bcf	3,6	;RP1=0, select bank0
 10820     04EE  00AC               	movwf	___flmul@a+2
 10821     04EF  1683               	bsf	3,5	;RP0=1, select bank1
 10822     04F0  1303               	bcf	3,6	;RP1=0, select bank1
 10823     04F1  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10824     04F2  1283               	bcf	3,5	;RP0=0, select bank0
 10825     04F3  1303               	bcf	3,6	;RP1=0, select bank0
 10826     04F4  00AB               	movwf	___flmul@a+1
 10827     04F5  1683               	bsf	3,5	;RP0=1, select bank1
 10828     04F6  1303               	bcf	3,6	;RP1=0, select bank1
 10829     04F7  0833               	movf	efgtoa@ou^(0+128),w
 10830     04F8  1283               	bcf	3,5	;RP0=0, select bank0
 10831     04F9  1303               	bcf	3,6	;RP1=0, select bank0
 10832     04FA  00AA               	movwf	___flmul@a
 10833     04FB  120A  158A  24BE  120A  118A  	fcall	___flmul
 10834     0500  1283               	bcf	3,5	;RP0=0, select bank0
 10835     0501  1303               	bcf	3,6	;RP1=0, select bank0
 10836     0502  0829               	movf	?___flmul+3,w
 10837     0503  1683               	bsf	3,5	;RP0=1, select bank1
 10838     0504  1303               	bcf	3,6	;RP1=0, select bank1
 10839     0505  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10840     0506  1283               	bcf	3,5	;RP0=0, select bank0
 10841     0507  1303               	bcf	3,6	;RP1=0, select bank0
 10842     0508  0828               	movf	?___flmul+2,w
 10843     0509  1683               	bsf	3,5	;RP0=1, select bank1
 10844     050A  1303               	bcf	3,6	;RP1=0, select bank1
 10845     050B  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10846     050C  1283               	bcf	3,5	;RP0=0, select bank0
 10847     050D  1303               	bcf	3,6	;RP1=0, select bank0
 10848     050E  0827               	movf	?___flmul+1,w
 10849     050F  1683               	bsf	3,5	;RP0=1, select bank1
 10850     0510  1303               	bcf	3,6	;RP1=0, select bank1
 10851     0511  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10852     0512  1283               	bcf	3,5	;RP0=0, select bank0
 10853     0513  1303               	bcf	3,6	;RP1=0, select bank0
 10854     0514  0826               	movf	?___flmul,w
 10855     0515  1683               	bsf	3,5	;RP0=1, select bank1
 10856     0516  1303               	bcf	3,6	;RP1=0, select bank1
 10857     0517  00B3               	movwf	efgtoa@ou^(0+128)
 10858     0518                     l3922:
 10859                           
 10860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 10861     0518  3066               	movlw	102
 10862     0519  062A               	xorwf	efgtoa@nmode^(0+128),w
 10863     051A  1D03               	btfss	3,2
 10864     051B  2D1D               	goto	u5911
 10865     051C  2D1E               	goto	u5910
 10866     051D                     u5911:
 10867     051D  2D24               	goto	l798
 10868     051E                     u5910:
 10869     051E                     l3924:
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 10872     051E  3001               	movlw	1
 10873     051F  07AD               	addwf	efgtoa@m^(0+128),f
 10874     0520  1803               	skipnc
 10875     0521  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10876     0522  3000               	movlw	0
 10877     0523  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10878     0524                     l798:	
 10879                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 767:  }
 10880                           
 10881                           
 10882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10883     0524  1683               	bsf	3,5	;RP0=1, select bank1
 10884     0525  1303               	bcf	3,6	;RP1=0, select bank1
 10885     0526  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10886     0527  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10887     0528  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10888     0529  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10889     052A  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10890     052B  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10891     052C  0833               	movf	efgtoa@ou^(0+128),w
 10892     052D  00C8               	movwf	efgtoa@u^(0+128)
 10893                           
 10894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10895     052E  0830               	movf	(efgtoa@e+1)^(0+128),w
 10896     052F  00A1               	movwf	(efgtoa@ne+1)^(0+128)
 10897     0530  082F               	movf	efgtoa@e^(0+128),w
 10898     0531  00A0               	movwf	efgtoa@ne^(0+128)
 10899     0532                     l3926:
 10900                           
 10901                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10902     0532  01A8               	clrf	efgtoa@pp^(0+128)
 10903     0533                     l3928:
 10904                           
 10905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10906     0533  01A4               	clrf	efgtoa@t^(0+128)
 10907     0534  01A5               	clrf	(efgtoa@t+1)^(0+128)
 10908     0535                     l3930:
 10909                           
 10910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10911     0535  01B7               	clrf	efgtoa@i^(0+128)
 10912     0536  01B8               	clrf	(efgtoa@i+1)^(0+128)
 10913                           
 10914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 10915     0537  2E98               	goto	l3974
 10916     0538                     l3932:
 10917                           
 10918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 10919     0538  1683               	bsf	3,5	;RP0=1, select bank1
 10920     0539  1303               	bcf	3,6	;RP1=0, select bank1
 10921     053A  084B               	movf	(efgtoa@u+3)^(0+128),w
 10922     053B  00F5               	movwf	___fldiv@a+3
 10923     053C  084A               	movf	(efgtoa@u+2)^(0+128),w
 10924     053D  00F4               	movwf	___fldiv@a+2
 10925     053E  0849               	movf	(efgtoa@u+1)^(0+128),w
 10926     053F  00F3               	movwf	___fldiv@a+1
 10927     0540  0848               	movf	efgtoa@u^(0+128),w
 10928     0541  00F2               	movwf	___fldiv@a
 10929     0542  083C               	movf	(efgtoa@h+3)^(0+128),w
 10930     0543  00F9               	movwf	___fldiv@b+3
 10931     0544  083B               	movf	(efgtoa@h+2)^(0+128),w
 10932     0545  00F8               	movwf	___fldiv@b+2
 10933     0546  083A               	movf	(efgtoa@h+1)^(0+128),w
 10934     0547  00F7               	movwf	___fldiv@b+1
 10935     0548  0839               	movf	efgtoa@h^(0+128),w
 10936     0549  00F6               	movwf	___fldiv@b
 10937     054A  120A  158A  209E  120A  118A  	fcall	___fldiv
 10938     054F  0875               	movf	?___fldiv+3,w
 10939     0550  1283               	bcf	3,5	;RP0=0, select bank0
 10940     0551  1303               	bcf	3,6	;RP1=0, select bank0
 10941     0552  00B5               	movwf	floorf@x+3
 10942     0553  0874               	movf	?___fldiv+2,w
 10943     0554  00B4               	movwf	floorf@x+2
 10944     0555  0873               	movf	?___fldiv+1,w
 10945     0556  00B3               	movwf	floorf@x+1
 10946     0557  0872               	movf	?___fldiv,w
 10947     0558  00B2               	movwf	floorf@x
 10948     0559  160A  118A  26F1  120A  118A  	fcall	_floorf
 10949     055E  1283               	bcf	3,5	;RP0=0, select bank0
 10950     055F  1303               	bcf	3,6	;RP1=0, select bank0
 10951     0560  0835               	movf	?_floorf+3,w
 10952     0561  1683               	bsf	3,5	;RP0=1, select bank1
 10953     0562  1303               	bcf	3,6	;RP1=0, select bank1
 10954     0563  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10955     0564  1283               	bcf	3,5	;RP0=0, select bank0
 10956     0565  1303               	bcf	3,6	;RP1=0, select bank0
 10957     0566  0834               	movf	?_floorf+2,w
 10958     0567  1683               	bsf	3,5	;RP0=1, select bank1
 10959     0568  1303               	bcf	3,6	;RP1=0, select bank1
 10960     0569  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10961     056A  1283               	bcf	3,5	;RP0=0, select bank0
 10962     056B  1303               	bcf	3,6	;RP1=0, select bank0
 10963     056C  0833               	movf	?_floorf+1,w
 10964     056D  1683               	bsf	3,5	;RP0=1, select bank1
 10965     056E  1303               	bcf	3,6	;RP1=0, select bank1
 10966     056F  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10967     0570  1283               	bcf	3,5	;RP0=0, select bank0
 10968     0571  1303               	bcf	3,6	;RP1=0, select bank0
 10969     0572  0832               	movf	?_floorf,w
 10970     0573  1683               	bsf	3,5	;RP0=1, select bank1
 10971     0574  1303               	bcf	3,6	;RP1=0, select bank1
 10972     0575  00BD               	movwf	efgtoa@l^(0+128)
 10973                           
 10974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 10975     0576  0840               	movf	(efgtoa@l+3)^(0+128),w
 10976     0577  00F5               	movwf	___fltol@f1+3
 10977     0578  083F               	movf	(efgtoa@l+2)^(0+128),w
 10978     0579  00F4               	movwf	___fltol@f1+2
 10979     057A  083E               	movf	(efgtoa@l+1)^(0+128),w
 10980     057B  00F3               	movwf	___fltol@f1+1
 10981     057C  083D               	movf	efgtoa@l^(0+128),w
 10982     057D  00F2               	movwf	___fltol@f1
 10983     057E  160A  118A  2329  120A  118A  	fcall	___fltol
 10984     0583  0873               	movf	?___fltol+1,w
 10985     0584  3A80               	xorlw	128
 10986     0585  00FF               	movwf	btemp+1
 10987     0586  3080               	movlw	128
 10988     0587  027F               	subwf	btemp+1,w
 10989     0588  1D03               	skipz
 10990     0589  2D8C               	goto	u5925
 10991     058A  300A               	movlw	10
 10992     058B  0272               	subwf	?___fltol,w
 10993     058C                     u5925:
 10994     058C  1803               	skipnc
 10995     058D  2D8F               	goto	u5921
 10996     058E  2D90               	goto	u5920
 10997     058F                     u5921:
 10998     058F  2DA6               	goto	l3936
 10999     0590                     u5920:
 11000     0590                     l3934:
 11001     0590  1683               	bsf	3,5	;RP0=1, select bank1
 11002     0591  1303               	bcf	3,6	;RP1=0, select bank1
 11003     0592  0840               	movf	(efgtoa@l+3)^(0+128),w
 11004     0593  00F5               	movwf	___fltol@f1+3
 11005     0594  083F               	movf	(efgtoa@l+2)^(0+128),w
 11006     0595  00F4               	movwf	___fltol@f1+2
 11007     0596  083E               	movf	(efgtoa@l+1)^(0+128),w
 11008     0597  00F3               	movwf	___fltol@f1+1
 11009     0598  083D               	movf	efgtoa@l^(0+128),w
 11010     0599  00F2               	movwf	___fltol@f1
 11011     059A  160A  118A  2329  120A  118A  	fcall	___fltol
 11012     059F  0873               	movf	?___fltol+1,w
 11013     05A0  1683               	bsf	3,5	;RP0=1, select bank1
 11014     05A1  1303               	bcf	3,6	;RP1=0, select bank1
 11015     05A2  00AC               	movwf	(efgtoa@d+1)^(0+128)
 11016     05A3  0872               	movf	?___fltol,w
 11017     05A4  00AB               	movwf	efgtoa@d^(0+128)
 11018     05A5  2DAC               	goto	l3938
 11019     05A6                     l3936:
 11020     05A6  3009               	movlw	9
 11021     05A7  1683               	bsf	3,5	;RP0=1, select bank1
 11022     05A8  1303               	bcf	3,6	;RP1=0, select bank1
 11023     05A9  00AB               	movwf	efgtoa@d^(0+128)
 11024     05AA  3000               	movlw	0
 11025     05AB  00AC               	movwf	(efgtoa@d^(0+128)+1)
 11026     05AC                     l3938:
 11027                           
 11028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 11029     05AC  0828               	movf	efgtoa@pp^(0+128),w
 11030     05AD  1D03               	btfss	3,2
 11031     05AE  2DB0               	goto	u5931
 11032     05AF  2DB1               	goto	u5930
 11033     05B0                     u5931:
 11034     05B0  2DE2               	goto	l3958
 11035     05B1                     u5930:
 11036     05B1                     l3940:
 11037     05B1  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
 11038     05B2  2DB4               	goto	u5941
 11039     05B3  2DB5               	goto	u5940
 11040     05B4                     u5941:
 11041     05B4  2DE2               	goto	l3958
 11042     05B5                     u5940:
 11043     05B5                     l3942:
 11044                           
 11045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 11046     05B5  0846               	movf	efgtoa@n^(0+128),w
 11047     05B6  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11048     05B7  0084               	movwf	4
 11049     05B8  302E               	movlw	46
 11050     05B9  1783               	bsf	3,7	;select IRP bank2
 11051     05BA  0080               	movwf	0
 11052     05BB                     l3944:
 11053     05BB  3001               	movlw	1
 11054     05BC  07C6               	addwf	efgtoa@n^(0+128),f
 11055     05BD  1803               	skipnc
 11056     05BE  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 11057     05BF  3000               	movlw	0
 11058     05C0  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 11059     05C1                     l3946:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 11062     05C1  30FF               	movlw	255
 11063     05C2  07B1               	addwf	efgtoa@w^(0+128),f
 11064     05C3  1803               	skipnc
 11065     05C4  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11066     05C5  30FF               	movlw	255
 11067     05C6  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11068     05C7                     l3948:
 11069                           
 11070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 11071     05C7  3001               	movlw	1
 11072     05C8  00A8               	movwf	efgtoa@pp^(0+128)
 11073     05C9  2DE2               	goto	l3958
 11074     05CA                     l3950:
 11075                           
 11076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 11077     05CA  0846               	movf	efgtoa@n^(0+128),w
 11078     05CB  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11079     05CC  0084               	movwf	4
 11080     05CD  3030               	movlw	48
 11081     05CE  1783               	bsf	3,7	;select IRP bank2
 11082     05CF  0080               	movwf	0
 11083     05D0                     l3952:
 11084     05D0  3001               	movlw	1
 11085     05D1  07C6               	addwf	efgtoa@n^(0+128),f
 11086     05D2  1803               	skipnc
 11087     05D3  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 11088     05D4  3000               	movlw	0
 11089     05D5  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 11090     05D6                     l3954:
 11091                           
 11092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 11093     05D6  30FF               	movlw	255
 11094     05D7  07B1               	addwf	efgtoa@w^(0+128),f
 11095     05D8  1803               	skipnc
 11096     05D9  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11097     05DA  30FF               	movlw	255
 11098     05DB  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11099     05DC                     l3956:
 11100                           
 11101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 11102     05DC  30FF               	movlw	255
 11103     05DD  07A4               	addwf	efgtoa@t^(0+128),f
 11104     05DE  1803               	skipnc
 11105     05DF  0AA5               	incf	(efgtoa@t+1)^(0+128),f
 11106     05E0  30FF               	movlw	255
 11107     05E1  07A5               	addwf	(efgtoa@t+1)^(0+128),f
 11108     05E2                     l3958:
 11109                           
 11110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 11111     05E2  0824               	movf	efgtoa@t^(0+128),w
 11112     05E3  0425               	iorwf	(efgtoa@t+1)^(0+128),w
 11113     05E4  1D03               	btfss	3,2
 11114     05E5  2DE7               	goto	u5951
 11115     05E6  2DE8               	goto	u5950
 11116     05E7                     u5951:
 11117     05E7  2DCA               	goto	l3950
 11118     05E8                     u5950:
 11119     05E8                     l3960:
 11120                           
 11121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 11122     05E8  0846               	movf	efgtoa@n^(0+128),w
 11123     05E9  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11124     05EA  0084               	movwf	4
 11125     05EB  082B               	movf	efgtoa@d^(0+128),w
 11126     05EC  3E30               	addlw	48
 11127     05ED  1783               	bsf	3,7	;select IRP bank2
 11128     05EE  0080               	movwf	0
 11129     05EF                     l3962:
 11130     05EF  3001               	movlw	1
 11131     05F0  07C6               	addwf	efgtoa@n^(0+128),f
 11132     05F1  1803               	skipnc
 11133     05F2  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 11134     05F3  3000               	movlw	0
 11135     05F4  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 11136     05F5                     l3964:
 11137                           
 11138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 11139     05F5  30FF               	movlw	255
 11140     05F6  07B1               	addwf	efgtoa@w^(0+128),f
 11141     05F7  1803               	skipnc
 11142     05F8  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11143     05F9  30FF               	movlw	255
 11144     05FA  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11145     05FB                     l3966:
 11146                           
 11147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 11148     05FB  084B               	movf	(efgtoa@u+3)^(0+128),w
 11149     05FC  1283               	bcf	3,5	;RP0=0, select bank0
 11150     05FD  1303               	bcf	3,6	;RP1=0, select bank0
 11151     05FE  00AD               	movwf	___flmul@a+3
 11152     05FF  1683               	bsf	3,5	;RP0=1, select bank1
 11153     0600  1303               	bcf	3,6	;RP1=0, select bank1
 11154     0601  084A               	movf	(efgtoa@u+2)^(0+128),w
 11155     0602  1283               	bcf	3,5	;RP0=0, select bank0
 11156     0603  1303               	bcf	3,6	;RP1=0, select bank0
 11157     0604  00AC               	movwf	___flmul@a+2
 11158     0605  1683               	bsf	3,5	;RP0=1, select bank1
 11159     0606  1303               	bcf	3,6	;RP1=0, select bank1
 11160     0607  0849               	movf	(efgtoa@u+1)^(0+128),w
 11161     0608  1283               	bcf	3,5	;RP0=0, select bank0
 11162     0609  1303               	bcf	3,6	;RP1=0, select bank0
 11163     060A  00AB               	movwf	___flmul@a+1
 11164     060B  1683               	bsf	3,5	;RP0=1, select bank1
 11165     060C  1303               	bcf	3,6	;RP1=0, select bank1
 11166     060D  0848               	movf	efgtoa@u^(0+128),w
 11167     060E  1283               	bcf	3,5	;RP0=0, select bank0
 11168     060F  1303               	bcf	3,6	;RP1=0, select bank0
 11169     0610  00AA               	movwf	___flmul@a
 11170     0611  1683               	bsf	3,5	;RP0=1, select bank1
 11171     0612  1303               	bcf	3,6	;RP1=0, select bank1
 11172     0613  0840               	movf	(efgtoa@l+3)^(0+128),w
 11173     0614  1283               	bcf	3,5	;RP0=0, select bank0
 11174     0615  1303               	bcf	3,6	;RP1=0, select bank0
 11175     0616  00A9               	movwf	___flmul@b+3
 11176     0617  1683               	bsf	3,5	;RP0=1, select bank1
 11177     0618  1303               	bcf	3,6	;RP1=0, select bank1
 11178     0619  083F               	movf	(efgtoa@l+2)^(0+128),w
 11179     061A  1283               	bcf	3,5	;RP0=0, select bank0
 11180     061B  1303               	bcf	3,6	;RP1=0, select bank0
 11181     061C  00A8               	movwf	___flmul@b+2
 11182     061D  1683               	bsf	3,5	;RP0=1, select bank1
 11183     061E  1303               	bcf	3,6	;RP1=0, select bank1
 11184     061F  083E               	movf	(efgtoa@l+1)^(0+128),w
 11185     0620  1283               	bcf	3,5	;RP0=0, select bank0
 11186     0621  1303               	bcf	3,6	;RP1=0, select bank0
 11187     0622  00A7               	movwf	___flmul@b+1
 11188     0623  1683               	bsf	3,5	;RP0=1, select bank1
 11189     0624  1303               	bcf	3,6	;RP1=0, select bank1
 11190     0625  083D               	movf	efgtoa@l^(0+128),w
 11191     0626  1283               	bcf	3,5	;RP0=0, select bank0
 11192     0627  1303               	bcf	3,6	;RP1=0, select bank0
 11193     0628  00A6               	movwf	___flmul@b
 11194     0629  120A  158A  24BE  120A  118A  	fcall	___flmul
 11195     062E  1283               	bcf	3,5	;RP0=0, select bank0
 11196     062F  1303               	bcf	3,6	;RP1=0, select bank0
 11197     0630  0829               	movf	?___flmul+3,w
 11198     0631  00C3               	movwf	___flsub@a+3
 11199     0632  0828               	movf	?___flmul+2,w
 11200     0633  00C2               	movwf	___flsub@a+2
 11201     0634  0827               	movf	?___flmul+1,w
 11202     0635  00C1               	movwf	___flsub@a+1
 11203     0636  0826               	movf	?___flmul,w
 11204     0637  00C0               	movwf	___flsub@a
 11205     0638  1683               	bsf	3,5	;RP0=1, select bank1
 11206     0639  1303               	bcf	3,6	;RP1=0, select bank1
 11207     063A  083C               	movf	(efgtoa@h+3)^(0+128),w
 11208     063B  1283               	bcf	3,5	;RP0=0, select bank0
 11209     063C  1303               	bcf	3,6	;RP1=0, select bank0
 11210     063D  00C7               	movwf	___flsub@b+3
 11211     063E  1683               	bsf	3,5	;RP0=1, select bank1
 11212     063F  1303               	bcf	3,6	;RP1=0, select bank1
 11213     0640  083B               	movf	(efgtoa@h+2)^(0+128),w
 11214     0641  1283               	bcf	3,5	;RP0=0, select bank0
 11215     0642  1303               	bcf	3,6	;RP1=0, select bank0
 11216     0643  00C6               	movwf	___flsub@b+2
 11217     0644  1683               	bsf	3,5	;RP0=1, select bank1
 11218     0645  1303               	bcf	3,6	;RP1=0, select bank1
 11219     0646  083A               	movf	(efgtoa@h+1)^(0+128),w
 11220     0647  1283               	bcf	3,5	;RP0=0, select bank0
 11221     0648  1303               	bcf	3,6	;RP1=0, select bank0
 11222     0649  00C5               	movwf	___flsub@b+1
 11223     064A  1683               	bsf	3,5	;RP0=1, select bank1
 11224     064B  1303               	bcf	3,6	;RP1=0, select bank1
 11225     064C  0839               	movf	efgtoa@h^(0+128),w
 11226     064D  1283               	bcf	3,5	;RP0=0, select bank0
 11227     064E  1303               	bcf	3,6	;RP1=0, select bank0
 11228     064F  00C4               	movwf	___flsub@b
 11229     0650  160A  158A  255B  120A  118A  	fcall	___flsub
 11230     0655  1283               	bcf	3,5	;RP0=0, select bank0
 11231     0656  1303               	bcf	3,6	;RP1=0, select bank0
 11232     0657  0843               	movf	?___flsub+3,w
 11233     0658  1683               	bsf	3,5	;RP0=1, select bank1
 11234     0659  1303               	bcf	3,6	;RP1=0, select bank1
 11235     065A  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11236     065B  1283               	bcf	3,5	;RP0=0, select bank0
 11237     065C  1303               	bcf	3,6	;RP1=0, select bank0
 11238     065D  0842               	movf	?___flsub+2,w
 11239     065E  1683               	bsf	3,5	;RP0=1, select bank1
 11240     065F  1303               	bcf	3,6	;RP1=0, select bank1
 11241     0660  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11242     0661  1283               	bcf	3,5	;RP0=0, select bank0
 11243     0662  1303               	bcf	3,6	;RP1=0, select bank0
 11244     0663  0841               	movf	?___flsub+1,w
 11245     0664  1683               	bsf	3,5	;RP0=1, select bank1
 11246     0665  1303               	bcf	3,6	;RP1=0, select bank1
 11247     0666  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11248     0667  1283               	bcf	3,5	;RP0=0, select bank0
 11249     0668  1303               	bcf	3,6	;RP1=0, select bank0
 11250     0669  0840               	movf	?___flsub,w
 11251     066A  1683               	bsf	3,5	;RP0=1, select bank1
 11252     066B  1303               	bcf	3,6	;RP1=0, select bank1
 11253     066C  00B9               	movwf	efgtoa@h^(0+128)
 11254     066D                     l3968:
 11255                           
 11256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 11257     066D  3041               	movlw	65
 11258     066E  00F5               	movwf	___fldiv@a+3
 11259     066F  3020               	movlw	32
 11260     0670  00F4               	movwf	___fldiv@a+2
 11261     0671  3000               	movlw	0
 11262     0672  00F3               	movwf	___fldiv@a+1
 11263     0673  3000               	movlw	0
 11264     0674  00F2               	movwf	___fldiv@a
 11265     0675  084B               	movf	(efgtoa@u+3)^(0+128),w
 11266     0676  00F9               	movwf	___fldiv@b+3
 11267     0677  084A               	movf	(efgtoa@u+2)^(0+128),w
 11268     0678  00F8               	movwf	___fldiv@b+2
 11269     0679  0849               	movf	(efgtoa@u+1)^(0+128),w
 11270     067A  00F7               	movwf	___fldiv@b+1
 11271     067B  0848               	movf	efgtoa@u^(0+128),w
 11272     067C  00F6               	movwf	___fldiv@b
 11273     067D  120A  158A  209E  120A  118A  	fcall	___fldiv
 11274     0682  0875               	movf	?___fldiv+3,w
 11275     0683  1683               	bsf	3,5	;RP0=1, select bank1
 11276     0684  1303               	bcf	3,6	;RP1=0, select bank1
 11277     0685  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11278     0686  0874               	movf	?___fldiv+2,w
 11279     0687  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11280     0688  0873               	movf	?___fldiv+1,w
 11281     0689  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11282     068A  0872               	movf	?___fldiv,w
 11283     068B  00C8               	movwf	efgtoa@u^(0+128)
 11284     068C                     l3970:
 11285                           
 11286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 11287     068C  30FF               	movlw	255
 11288     068D  07A0               	addwf	efgtoa@ne^(0+128),f
 11289     068E  1803               	skipnc
 11290     068F  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 11291     0690  30FF               	movlw	255
 11292     0691  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 11293     0692                     l3972:
 11294                           
 11295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11296     0692  3001               	movlw	1
 11297     0693  07B7               	addwf	efgtoa@i^(0+128),f
 11298     0694  1803               	skipnc
 11299     0695  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 11300     0696  3000               	movlw	0
 11301     0697  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 11302     0698                     l3974:
 11303                           
 11304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11305     0698  0838               	movf	(efgtoa@i+1)^(0+128),w
 11306     0699  3A80               	xorlw	128
 11307     069A  1283               	bcf	3,5	;RP0=0, select bank0
 11308     069B  1303               	bcf	3,6	;RP1=0, select bank0
 11309     069C  00D3               	movwf	??_efgtoa
 11310     069D  1683               	bsf	3,5	;RP0=1, select bank1
 11311     069E  1303               	bcf	3,6	;RP1=0, select bank1
 11312     069F  082E               	movf	(efgtoa@m+1)^(0+128),w
 11313     06A0  3A80               	xorlw	128
 11314     06A1  1283               	bcf	3,5	;RP0=0, select bank0
 11315     06A2  1303               	bcf	3,6	;RP1=0, select bank0
 11316     06A3  0253               	subwf	??_efgtoa,w
 11317     06A4  1D03               	skipz
 11318     06A5  2EAA               	goto	u5965
 11319     06A6  1683               	bsf	3,5	;RP0=1, select bank1
 11320     06A7  1303               	bcf	3,6	;RP1=0, select bank1
 11321     06A8  082D               	movf	efgtoa@m^(0+128),w
 11322     06A9  0237               	subwf	efgtoa@i^(0+128),w
 11323     06AA                     u5965:
 11324     06AA  1803               	skipnc
 11325     06AB  2EAD               	goto	u5961
 11326     06AC  2EAE               	goto	u5960
 11327     06AD                     u5961:
 11328     06AD  2EBD               	goto	l3978
 11329     06AE                     u5960:
 11330     06AE                     l3976:
 11331     06AE  1683               	bsf	3,5	;RP0=1, select bank1
 11332     06AF  1303               	bcf	3,6	;RP1=0, select bank1
 11333     06B0  0847               	movf	(efgtoa@n+1)^(0+128),w
 11334     06B1  3A80               	xorlw	128
 11335     06B2  00FF               	movwf	btemp+1
 11336     06B3  3080               	movlw	128
 11337     06B4  027F               	subwf	btemp+1,w
 11338     06B5  1D03               	skipz
 11339     06B6  2EB9               	goto	u5975
 11340     06B7  304B               	movlw	75
 11341     06B8  0246               	subwf	efgtoa@n^(0+128),w
 11342     06B9                     u5975:
 11343     06B9  1C03               	skipc
 11344     06BA  2EBC               	goto	u5971
 11345     06BB  2EBD               	goto	u5970
 11346     06BC                     u5971:
 11347     06BC  2D38               	goto	l3932
 11348     06BD                     u5970:
 11349     06BD                     l3978:
 11350                           
 11351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 11352     06BD  304F               	movlw	79
 11353     06BE  1683               	bsf	3,5	;RP0=1, select bank1
 11354     06BF  1303               	bcf	3,6	;RP1=0, select bank1
 11355     06C0  00B7               	movwf	efgtoa@i^(0+128)
 11356     06C1  3000               	movlw	0
 11357     06C2  00B8               	movwf	(efgtoa@i^(0+128)+1)
 11358     06C3                     l3980:
 11359                           
 11360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 11361     06C3  0837               	movf	efgtoa@i^(0+128),w
 11362     06C4  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11363     06C5  0084               	movwf	4
 11364     06C6  1783               	bsf	3,7	;select IRP bank2
 11365     06C7  0180               	clrf	0
 11366     06C8                     l3982:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 11369     06C8  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11370     06C9  1283               	bcf	3,5	;RP0=0, select bank0
 11371     06CA  1303               	bcf	3,6	;RP1=0, select bank0
 11372     06CB  00D3               	movwf	??_efgtoa
 11373     06CC  1683               	bsf	3,5	;RP0=1, select bank1
 11374     06CD  1303               	bcf	3,6	;RP1=0, select bank1
 11375     06CE  0846               	movf	efgtoa@n^(0+128),w
 11376     06CF  1283               	bcf	3,5	;RP0=0, select bank0
 11377     06D0  1303               	bcf	3,6	;RP1=0, select bank0
 11378     06D1  02D3               	subwf	??_efgtoa,f
 11379     06D2  1683               	bsf	3,5	;RP0=1, select bank1
 11380     06D3  1303               	bcf	3,6	;RP1=0, select bank1
 11381     06D4  0837               	movf	efgtoa@i^(0+128),w
 11382     06D5  1283               	bcf	3,5	;RP0=0, select bank0
 11383     06D6  1303               	bcf	3,6	;RP1=0, select bank0
 11384     06D7  0753               	addwf	??_efgtoa,w
 11385     06D8  00F2               	movwf	memcpy@d1
 11386     06D9  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11387     06DA  00F3               	movwf	memcpy@s1
 11388     06DB  1683               	bsf	3,5	;RP0=1, select bank1
 11389     06DC  1303               	bcf	3,6	;RP1=0, select bank1
 11390     06DD  0847               	movf	(efgtoa@n+1)^(0+128),w
 11391     06DE  00F5               	movwf	memcpy@n+1
 11392     06DF  0846               	movf	efgtoa@n^(0+128),w
 11393     06E0  00F4               	movwf	memcpy@n
 11394     06E1  160A  158A  2518  120A  118A  	fcall	_memcpy
 11395     06E6                     l3984:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11398     06E6  1683               	bsf	3,5	;RP0=1, select bank1
 11399     06E7  1303               	bcf	3,6	;RP1=0, select bank1
 11400     06E8  0846               	movf	efgtoa@n^(0+128),w
 11401     06E9  0237               	subwf	efgtoa@i^(0+128),w
 11402     06EA  00C6               	movwf	efgtoa@n^(0+128)
 11403     06EB  0847               	movf	(efgtoa@n+1)^(0+128),w
 11404     06EC  1C03               	skipc
 11405     06ED  0A47               	incf	(efgtoa@n+1)^(0+128),w
 11406     06EE  0238               	subwf	(efgtoa@i+1)^(0+128),w
 11407     06EF  00C7               	movwf	(efgtoa@n+1)^(0+128)
 11408     06F0                     l3986:
 11409                           
 11410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 11411     06F0  0841               	movf	efgtoa@sign^(0+128),w
 11412     06F1  1D03               	btfss	3,2
 11413     06F2  2EF4               	goto	u5981
 11414     06F3  2EF6               	goto	u5980
 11415     06F4                     u5981:
 11416     06F4  3001               	movlw	1
 11417     06F5  2EF7               	goto	u5990
 11418     06F6                     u5980:
 11419     06F6  3000               	movlw	0
 11420     06F7                     u5990:
 11421     06F7  1283               	bcf	3,5	;RP0=0, select bank0
 11422     06F8  1303               	bcf	3,6	;RP1=0, select bank0
 11423     06F9  00D3               	movwf	??_efgtoa
 11424     06FA  01D4               	clrf	??_efgtoa+1
 11425     06FB  0853               	movf	??_efgtoa,w
 11426     06FC  1683               	bsf	3,5	;RP0=1, select bank1
 11427     06FD  1303               	bcf	3,6	;RP1=0, select bank1
 11428     06FE  00B7               	movwf	efgtoa@i^(0+128)
 11429     06FF  1283               	bcf	3,5	;RP0=0, select bank0
 11430     0700  1303               	bcf	3,6	;RP1=0, select bank0
 11431     0701  0854               	movf	??_efgtoa+1,w
 11432     0702  1683               	bsf	3,5	;RP0=1, select bank1
 11433     0703  1303               	bcf	3,6	;RP1=0, select bank1
 11434     0704  00B8               	movwf	(efgtoa@i+1)^(0+128)
 11435     0705                     l3988:
 11436                           
 11437                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11438     0705  0841               	movf	efgtoa@sign^(0+128),w
 11439     0706  1903               	btfsc	3,2
 11440     0707  2F09               	goto	u6001
 11441     0708  2F0A               	goto	u6000
 11442     0709                     u6001:
 11443     0709  2F16               	goto	l3992
 11444     070A                     u6000:
 11445     070A                     l3990:
 11446                           
 11447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 11448     070A  30FF               	movlw	255
 11449     070B  07C6               	addwf	efgtoa@n^(0+128),f
 11450     070C  1803               	skipnc
 11451     070D  0AC7               	incf	(efgtoa@n+1)^(0+128),f
 11452     070E  30FF               	movlw	255
 11453     070F  07C7               	addwf	(efgtoa@n+1)^(0+128),f
 11454     0710  0846               	movf	efgtoa@n^(0+128),w
 11455     0711  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11456     0712  0084               	movwf	4
 11457     0713  0841               	movf	efgtoa@sign^(0+128),w
 11458     0714  1783               	bsf	3,7	;select IRP bank2
 11459     0715  0080               	movwf	0
 11460     0716                     l3992:
 11461                           
 11462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11463     0716  0837               	movf	efgtoa@i^(0+128),w
 11464     0717  02B1               	subwf	efgtoa@w^(0+128),f
 11465     0718  0838               	movf	(efgtoa@i+1)^(0+128),w
 11466     0719  1C03               	skipc
 11467     071A  03B2               	decf	(efgtoa@w+1)^(0+128),f
 11468     071B  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 11469     071C                     l3994:
 11470                           
 11471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 11472     071C  1283               	bcf	3,5	;RP0=0, select bank0
 11473     071D  1303               	bcf	3,6	;RP1=0, select bank0
 11474     071E  084C               	movf	efgtoa@fp,w
 11475     071F  00AE               	movwf	pad@fp
 11476     0720  084D               	movf	efgtoa@fp+1,w
 11477     0721  00AF               	movwf	pad@fp+1
 11478     0722  1683               	bsf	3,5	;RP0=1, select bank1
 11479     0723  1303               	bcf	3,6	;RP1=0, select bank1
 11480     0724  0846               	movf	efgtoa@n^(0+128),w
 11481     0725  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11482     0726  1283               	bcf	3,5	;RP0=0, select bank0
 11483     0727  1303               	bcf	3,6	;RP1=0, select bank0
 11484     0728  00B0               	movwf	pad@buf
 11485     0729  1683               	bsf	3,5	;RP0=1, select bank1
 11486     072A  1303               	bcf	3,6	;RP1=0, select bank1
 11487     072B  0832               	movf	(efgtoa@w+1)^(0+128),w
 11488     072C  1283               	bcf	3,5	;RP0=0, select bank0
 11489     072D  1303               	bcf	3,6	;RP1=0, select bank0
 11490     072E  00B2               	movwf	pad@p+1
 11491     072F  1683               	bsf	3,5	;RP0=1, select bank1
 11492     0730  1303               	bcf	3,6	;RP1=0, select bank1
 11493     0731  0831               	movf	efgtoa@w^(0+128),w
 11494     0732  1283               	bcf	3,5	;RP0=0, select bank0
 11495     0733  1303               	bcf	3,6	;RP1=0, select bank0
 11496     0734  00B1               	movwf	pad@p
 11497     0735  160A  158A  2621  120A  118A  	fcall	_pad
 11498     073A                     l772:
 11499     073A  0008               	return
 11500     073B                     __end_of_efgtoa:

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      80
    BANK1            80     58      77
    BANK3            96      0      32
    BANK2            96      0      80

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    LCD_Write_String@str	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), STR_1(CODE[15]), STR_3(CODE[15]), STR_5(CODE[15]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S869$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK3[20]), 

    S869$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_4(CODE[10]), STR_6(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK3[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_4(CODE[10]), STR_6(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_4(CODE[10]), STR_6(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_4(CODE[10]), STR_6(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _trigger_3->___xxtofl
    _trigger_2->___xxtofl
    _trigger_1->___xxtofl
    _LCD_Init->_LCD_CMD
    _vfpfcnvrt->_read_prec_or_width
    _read_prec_or_width->___wmul
    _efgtoa->___fladd
    _efgtoa->___fldiv
    _efgtoa->___fleq
    _efgtoa->___fltol
    _efgtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flmul->___xxtofl
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Display_1
    _main->_LCD_Display_2
    _main->_LCD_Display_3
    _trigger_3->___flmul
    _trigger_2->___flmul
    _trigger_1->___flmul
    _LCD_Display_3->_sprintf
    _LCD_Display_2->_sprintf
    _LCD_Display_1->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Display_3->_sprintf
    _LCD_Display_2->_sprintf
    _LCD_Display_1->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   57856
                        _GPIO_Config
                          _LCD_Clear
                      _LCD_Display_1
                      _LCD_Display_2
                      _LCD_Display_3
                           _LCD_Init
                          _TMR1_Init
                          _TMR2_Init
                          _trigger_1
                          _trigger_2
                          _trigger_3
 ---------------------------------------------------------------------------------
 (1) _trigger_3                                            1     1      0    2821
                                             32 BANK0      1     1      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _trigger_2                                            1     1      0    2821
                                             32 BANK0      1     1      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _trigger_1                                            1     1      0    2821
                                             32 BANK0      1     1      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     339
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     423
                                              5 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Display_3                                        2     2      0   16245
                                             77 BANK0      2     2      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _LCD_Display_2                                        2     2      0   16245
                                             77 BANK0      2     2      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _LCD_Display_1                                        2     2      0   16245
                                             77 BANK0      2     2      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   15063
                                             64 BANK0     13    13      0
                                             52 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   14727
                                             63 BANK0      1     1      0
                                             48 BANK1      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4   14500
                                             55 BANK0      8     8      0
                                             44 BANK1      4     0      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     276
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4      94
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              56    49      7   13249
                                             44 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               3     1      2      77
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     832
                                              9 COMMON     1     1      0
                                             14 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     5      3     378
                                              6 COMMON     3     0      3
                                              9 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     232
                                              2 COMMON     4     0      4
                                              0 BANK0      9     9      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               7     3      4     146
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4      69
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             18 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     201
                                              2 COMMON     4     0      4
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     346
                                              2 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2039
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    1990
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2482
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     232
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     192
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1132
                                              2 COMMON     8     0      8
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     501
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     353
                                              3 COMMON     4     4      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       6     5      1     681
                                              5 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     235
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     235
                                              3 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_DATA                                             1     1      0     188
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Config
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Display_1
     _LCD_Set_Cursor
       _LCD_CMD
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _LCD_Display_2
     _LCD_Set_Cursor
     _LCD_Write_String
     _sprintf
   _LCD_Display_3
     _LCD_Set_Cursor
     _LCD_Write_String
     _sprintf
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _TMR1_Init
   _TMR2_Init
   _trigger_1
     ___flmul
     ___xxtofl
   _trigger_2
     ___flmul
     ___xxtofl
   _trigger_3
     ___flmul
     ___xxtofl

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     10      12     85.7%
BANK0               80     79      80    100.0%
BANK1               80     58      77     96.2%
BANK3               96      0      32     33.3%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     283      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 29 23:09:33 2025

                         _C 00EA                ___fldiv@aexp 0031                ___fldiv@bexp 0030  
                         pc 0002                ___fldiv@sign 0029                          l91 1CCA  
                        l94 0810                          l97 118E                          l99 1192  
                        fsr 0004         ___wmul@multiplicand 0074         __Umul8_16@word_mpld 0022  
                       l100 1195                         l102 1199                         l103 11E7  
                       l111 1201                         l112 124F                         l120 1269  
                       l121 12B7                         l130 1EE0                         l106 11F6  
                       l115 125E                         l124 1CBA                         l108 11FA  
                       l133 10D9                         l109 11FD                         l117 1262  
                       l150 1D59                         l118 1265                         l127 1E9F  
                       l152 1D5A                         l144 1D42                         l145 1D45  
                       l161 1FB0                         l146 1D4B                         l170 07FD  
                       l147 1D4C                         l155 1D17                         l148 1D52  
                       l149 1D53                         l158 1328                         l175 1FFF  
                       l167 1F69                         l442 1088                         l610 0CB3  
                       l602 0C93                         l611 0CBD                         l267 1D8B  
                       l436 1057                         l437 1073                         l453 14E2  
                       l445 145D                         l461 139E                         l269 1DA3  
                       l614 1D7E                         l710 07F0                         l471 139E  
                       l640 09E7                         l624 08F3                         l448 14C9  
                       l457 100B                         l721 07BA                         l626 0A6D  
                       l730 1038                         l722 07C6                         l714 079E  
                       l563 0A9A                         l572 0B4A                         l468 1389  
                       l708 075F                         l581 0CBD                         l821 1181  
                       l709 0770                         l646 0A59                         l670 0F71  
                       l574 0B25                         l830 1534                         l648 0A65  
                       l664 0FFF                         l568 0ACB                         l593 0C34  
                       l905 1E20                         l761 1E5E                         l841 15E5  
                       l914 1CF8                         l683 1DBA                         l676 0FF5  
                       l908 07FE                         l772 073A                         l685 1DCC  
                       l589 0C10                         l757 1E29                         l599 0C57  
                       l864 173E                         l848 1DF5                         l865 17FF  
                       l769 165E                         l858 089D                         l882 1D2A  
                       l788 027D                         l869 17F7                         l885 1D38  
                       l798 0524                         l879 1CDF                         l897 143E  
                       _ISR 1EE1                         _pad 1E21                         fsr0 0004  
                       indf 0000                ?_GPIO_Config 0070                ___flmul@aexp 0034  
              ___flmul@bexp 0039                ___flmul@sign 0033                ___flmul@temp 003E  
              ___flmul@prod 003A             __end_of_LCD_CMD 1D18                        ?_ISR 0070  
            _LCD_Set_Cursor 1FB1                ___fltol@exp1 0021                        l2300 0ADB  
                      l2310 0AE5                        l2302 0ADD                        l4000 1D3E  
                      l2400 0C3E                        l2320 0AEF                        l2312 0AE7  
                      l2304 0ADF                        l2240 13CC                        l2232 139F  
                      l4002 1D49                        l2410 0C4E                        l2402 0C43  
                      l2330 0B0D                        l2322 0AF1                        l2314 0AE9  
                      l2306 0AE1                        l2250 0A74                        l2242 13FE  
                      l2234 13A5                        l4010 14F4                        l4004 1D50  
                      l2500 147D                        l2420 0C6F                        l2412 0C54  
                      l2404 0C45                        l2340 0B37                        l2332 0B29  
                      l2324 0AF3                        l2316 0AEB                        l2308 0AE3  
                      l2260 0A87                        l2252 0A78                        l2236 13AB  
                      l4020 1512                        l4012 14F8                        l4100 1DCD  
                      l4006 1D57                        l4110 1FB4                        l2502 14A1  
                      l2430 0CA5                        l2422 0C73                        l2406 0C49  
                      l2342 0B40                        l2334 0B30                        l2318 0AED  
                      l2326 0AF5                        l2270 0A9E                        l2262 0A8F  
                      l2254 0A7C                        l2246 0A6E                        l2238 13B2  
                      l3150 112F                        l4022 1521                        l4014 14FC  
                      l4102 1DD4                        l4120 1FD0                        l4112 1FB9  
                      l2600 08E9                        l2504 14A5                        l2512 1001  
                      l2440 0CB8                        l2432 0CAA                        l2424 0C91  
                      l2416 0C5C                        l2408 0C4A                        l2360 0B82  
                      l2352 0B5C                        l2336 0B32                        l2344 0B42  
                      l2328 0AF6                        l2280 0AAE                        l2272 0AA4  
                      l2264 0A90                        l2256 0A7D                        l2248 0A72  
                      l3152 113E                        l3160 116C                        l4032 1539  
                      l4024 1528                        l4016 1500                        l4008 14E3  
                      l4104 1DE3                        l4200 1185                        l4130 1FF1  
                      l4114 1FC6                        l4122 1FD8                        l2602 08EB  
                      l2506 14DF                        l2514 1009                        l2442 0CBC  
                      l2434 0CAB                        l2426 0C98                        l2418 0C61  
                      l2362 0B84                        l2354 0B73                        l2346 0B4E  
                      l2370 0B95                        l2338 0B36                        l2282 0AB3  
                      l2290 0AC3                        l2274 0AA5                        l2258 0A82  
                      l2266 0A92                        l3162 117D                        l3154 1142  
                      l4042 1581                        l4034 1544                        l4026 1531  
                      l4018 150E                        l4106 1DF1                        l4210 1E5F  
                      l3410 1CBB                        l3330 0757                        l4202 118B  
                      l4132 1FF7                        l4124 1FE0                        l4116 1FC8  
                      l4140 1F4D                        l2700 0A63                        l2620 0932  
                      l2604 08FB                        l2612 0912                        l2508 14E1  
                      l2516 100B                        l2436 0CAF                        l2428 0C9D  
                      l2380 0BF3                        l2372 0BAB                        l2364 0B88  
                      l2356 0B77                        l2348 0B53                        l2292 0AD1  
                      l2284 0AB8                        l2276 0AA9                        l2268 0A9C  
                      l3156 1150                        l3148 112B                        l4052 15B5  
                      l4044 1589                        l4036 1551                        l4028 1537  
                      l4212 1E67                        l3420 1CC5                        l3412 1CBF  
                      l3340 0785                        l3332 0767                        l3324 073E  
                      l4204 1193                        l4220 11EC                        l4070 1D06  
                      l4126 1FED                        l4118 1FCA                        l4134 1F24  
                      l2630 0951                        l2622 093A                        l2614 0917  
                      l2606 0907                        l2438 0CB1                        l2390 0C26  
                      l2374 0BE9                        l2382 0C02                        l2366 0B89  
                      l2358 0B7B                        l2294 0AD5                        l2286 0AC0  
                      l2278 0AAD                        l2470 1D85                        l3158 1167  
                      l4046 1593                        l4038 1569                        l4054 15C0  
                      l4150 101C                        l4142 100C                        l4214 1E70  
                      l3422 1CC8                        l3414 1CC0                        l3350 07B4  
                      l3342 0787                        l3326 0743                        l4206 119A  
                      l4230 120E                        l4222 11ED                        l4072 1D0D  
                      l4064 1CFA                        l4128 1FEF                        l4080 1F77  
                      l4136 1F29                        l2640 0983                        l2632 0963  
                      l2624 0942                        l2608 0909                        l2480 1039  
                      l2392 0C2F                        l2384 0C18                        l2376 0BEB  
                      l2368 0B92                        l2296 0AD7                        l2288 0AC1  
                      l3600 137E                        l2472 1D92                        l4152 102B  
                      l4144 1010                        l4216 1E94                        l4232 1EA0  
                      l4160 12BC                        l3424 1CC9                        l3416 1CC1  
                      l3360 07E7                        l3352 07BE                        l3344 0795  
                      l3336 0773                        l3328 0747                        l4208 11A6  
                      l4224 11F3                        l4240 1250                        l4074 1D10  
                      l4066 1CFD                        l4090 1F8C                        l4082 1F79  
                      l4138 1F45                        l2650 09A8                        l2642 0984  
                      l2634 0967                        l2626 094A                        l2618 0920  
                      l2570 08AC                        l2562 089E                        l2482 104F  
                      l3610 0CC4                        l2394 0C33                        l2386 0C1D  
                      l2378 0BEE                        l2298 0AD9                        l3602 138E  
                      l2474 1D99                        l2466 1D7F                        l4058 15C8  
                      l4146 1018                        l4234 1EA8                        l4170 12D8  
                      l4162 12BD                        l3418 1CC2                        l3426 0801  
                      l3362 07E8                        l3354 07C8                        l3346 07A5  
                      l3338 077E                        l4226 11FB                        l4218 11E8  
                      l4250 126A                        l4242 1254                        l4068 1D03  
                      l4092 1F8F                        l4084 1F7C                        l4076 1F6B  
                      l2660 09C1                        l2652 09AA                        l2644 0998  
                      l2636 0968                        l2628 094C                        l2580 08C0  
                      l2572 08AD                        l2564 08A2                        l2484 106B  
                      l2492 143F                        l3700 0F42                        l3620 0CD7  
                      l3612 0CC8                        l2396 0C38                        l2556 1D5B  
                      l3604 1393                        l2900 1730                        l2476 1D9F  
                      l2468 1D81                        l4148 101A                        l4236 1EB1  
                      l4260 10CE                        l4180 12F8                        l4172 12E1  
                      l4164 12C3                        l4156 12B8                        l3356 07DE  
                      l3348 07B0                        l4228 1202                        l4252 1276  
                      l4244 1255         LCD_Write_String@str 0077                        l3366 1CB2  
                      l4094 1F96                        l4086 1F82                        l4078 1F75  
                      l2670 09E4                        l2654 09B3                        l2662 09C7  
                      l2638 0971                        l2646 099A                        l2590 08D5  
                      l2574 08B2                        l2582 08C2                        l2566 08A4  
                      l2486 1085                        l2494 1455                        l3550 1DA9  
                      l3710 0F5A                        l3702 0F4B                        l3630 0CF0  
                      l3622 0CDF                        l3614 0CCC                        l3606 0CBE  
                      l2398 0C3C                        l2558 1D5F                        l2910 1773  
                      l2902 173D                        l4238 1ED5                        l4254 1089  
                      l4190 1316                        l4182 12FE                        l4174 12E7  
                      l4166 12CB                        l4158 12BB                        l3358 07E3  
                      l4246 125B                        l4270 10F8                        l4262 10DA  
                      l4096 1F9C                        l4088 1F85                        l2680 0A03  
                      l2664 09CB                        l2656 09B7                        l2648 09A0  
                      l2592 08D6                        l2584 08CA                        l2576 08B7  
                      l2568 08A8                        l2488 1087                        l2496 1471  
                      l3552 1DB0                        l3720 0F89                        l3712 0F6E  
                      l3704 0F51                        l3640 0D07                        l3632 0CF4  
                      l3624 0CE1                        l3616 0CCD                        l3608 0CC2  
                      l2920 17D6                        l2912 178C                        l2904 1744  
                      l3800 1650                        l4256 1091                        l4192 131C  
                      l4184 1304                        l4176 12EC                        l4168 12D2  
                      l4248 1263                        l4280 110D                        l4272 10FD  
                      l4264 10DF                        l4098 1FA6                        l2690 0A4C  
                      l2682 0A1C                        l2674 09EC                        l2666 09CC  
                      l2658 09B8                        l2594 08DB                        l2586 08CD  
                      l2578 08BF                        l2498 1479                        l3554 1DB4  
                      l3730 0FC4                        l3722 0F8D                        l3706 0F55  
                      l3642 0D09                        l3634 0CF5                        l3626 0CE9  
                      l3618 0CD2                        l3570 1329                        l2922 17EF  
                      l2914 17A3                        l2906 175E                        l2930 1D22  
                      l3562 1DF6                        l3810 167A                        l3802 1655  
                      l4258 109A                        l4194 1322                        l4186 130A  
                      l4178 12F2                        l4290 1124                        l4282 1112  
                      l4274 1102                        l4266 10E4                        l4196 07F1  
                      l2692 0A50                        l2676 09F1                        l2684 0A22  
                      l2668 09D0                        l2596 08E0                        l2588 08D1  
                      l3556 1DC3                        l3548 1DA7                        l3740 0FEF  
                      l3732 0FD3                        l3724 0FA6                        l3716 0F76  
                      l3708 0F56                        l3660 0D76                        l3652 0D24  
                      l3644 0D11                        l3636 0CFA                        l3628 0CEC  
                      l3580 1351                        l3572 1334                        l2916 17B4  
                      l2932 1D24                        l3564 1DFB                        l3900 03A2  
                      l3812 168A                        l3820 16B8                        l3804 165A  
                      l4188 1310                        l4284 1113                        l4276 1103  
                      l4268 10F3                        l2694 0A58                        l2686 0A2F  
                      l2678 09FF                        l2598 08E8                        l3558 1DC8  
                      l3742 0FF0                        l3734 0FDD                        l3718 0F7B  
                      l3726 0FAC                        l3670 0DEF                        l3662 0DA0  
                      l3654 0D32                        l3646 0D16                        l3638 0CFF  
                      l3582 1359                        l2918 17CD                        l2926 1D18  
                      l3566 1E0B                        l3750 1E27                        l3910 0454  
                      l3902 03B8                        l3822 16CF                        l3814 1694  
                      l3806 1660                        l4198 1182                        l4286 111A  
                      l4278 1108                        ?_pad 002E                        l2696 0A5D  
                      l2688 0A3D                        l3744 0FF7                        l3736 0FDF  
                      l3728 0FB9                        l3680 0E6B                        l3672 0E0C  
                      l3664 0DBC                        l3656 0D3F                        l3648 0D1B  
                      l3592 1367                        l3584 135B                        l3576 133D  
                      l3760 0811                        l2928 1D1D                        l3568 1E13  
                      l3752 1E2C                        l3920 04D9                        l3912 045A  
                      l3904 03F7                        l3824 16D6                        l3816 169C  
                      l3808 1673                        l4288 111F                        l2698 0A61  
                      l3738 0FEB                        l3690 0F1D                        l3682 0E96  
                      l3674 0E1A                        l3666 0DD8                        l3658 0D5A  
                      l3586 135F                        l3594 1377                        l3578 1350  
                      l3770 086C                        l3762 0831                        l2890 1CCF  
                      l3754 1E3B                        l3930 0535                        l3922 0518  
                      l3914 0462                        l3906 042E                        l3850 013E  
                      l3842 0058                        l3826 16E6                        l3834 0032  
            ?_LCD_Display_1 0070                        l3692 0F26                        l3684 0EA4  
                      l3676 0E37                        l3668 0DE1                        l3780 0899  
                      l3764 0848                        l2892 1CD0                        l3756 1E43  
                      l3748 1E21                        l2884 1CE0                        l3940 05B1  
                      l3932 0538                        l3924 051E                        l3916 0483  
                      l3908 0439                        l3852 019E                        l3844 0068  
                      l3836 003C              ?_LCD_Display_2 0070              ?_LCD_Display_3 0070  
                      l3694 0F34                        l3686 0ECF                        l3678 0E4E  
                      l3766 084E                        l3774 0871                        l3758 1E51  
                      l2886 1CE2                        l3950 05CA                        l3942 05B5  
                      l3934 0590                        l3926 0532                        l3918 04D1  
                      l3870 0279                        l3854 01A9                        l3862 022F  
                      l3846 00A7                        l3838 003E                        l3790 1628  
                      l3696 0F3D                        l3688 0EF5                        l3776 0877  
                      l3768 0867                        l2896 16F1                        l2888 1CCB  
                      l3960 05E8                        l3952 05D0                        l3944 05BB  
                      l3936 05A6                        l3928 0533                        l3880 029B  
                      l3872 0287                        l3856 01CA                        l3848 0105  
                      l3864 0268                        l3792 162C                        l3784 15E6  
                      l3698 0F41                        l2898 1711                        l3970 068C  
                      l3962 05EF                        l3954 05D6                        l3946 05C1  
                      l3938 05AC                        l3890 02BA                        l3882 02A1  
                      l3874 028D                        l3866 0270                        l3858 01D0  
                      l3794 1643                        l3786 15E9                        l3980 06C3  
                      l3972 0692                        l3964 05F5                        l3956 05DC  
                      l3948 05C7                        l3892 02F8                        l3876 0291  
                      l3884 02A7                        l3868 0274                        l3796 1647  
                      l3788 1601                        l3990 070A                        l3982 06C8  
                      l3966 05FB                        l3958 05E2                        l3974 0698  
                      l3894 030B                        l3886 02A9                        l3878 0299  
                      l3798 164B                        l3992 0716                        l3984 06E6  
                      l3976 06AE                        l3968 066D                        l3896 037D  
                      l3888 02B1                        l3994 071C                        l3986 06F0  
                      l3978 06BD                        l3898 039C                        l3988 0705  
                      l3998 1D3A                        STR_1 1810                        STR_2 183D  
                      STR_3 181F                        STR_4 183D                        STR_5 182E  
                      STR_6 183D                        STR_7 1847                        u3000 0C9D  
                      u3001 0C9C                        u3010 0CAA                        u3011 0CA9  
                      u3020 0CAF                        u3021 0CAE                        u3030 0CBC  
                      u3110 1D9F                        u3031 0CBB                        u3111 1D9E  
                      u3120 104F                        u3121 104E                        u3201 14B4  
                      u3105 1D93                        u3130 106B                        u3210 14DF  
                      u3202 14B5                        u3131 106A                        u3211 14DE  
                      u3203 14BA                        u3140 1085                        u3204 14BB  
                      u3220 1009                        u4100 1CF8                        u3141 1084  
                      u3205 14C0                        u3221 1008                        u4101 1CF7  
                      u3206 14C1                        u3150 1455                        u4110 1CCF  
                      u3215 14DB                        u3151 1454                        u4111 1CCE  
                      u3400 0917                        u3160 1471                        u2600 0A87  
                      u4200 17C2                        u4120 171F                        u3080 1D85  
                      u3401 0916                        u3145 1081                        u3161 1470  
                      u2601 0A86                        u3081 1D84                        u3410 0951  
                      u3330 08AC                        u3170 147D                        u2610 0AA4  
                      u4210 17CD                        u4130 173D                        u2530 13A5  
                      u3411 0950                        u3331 08AB                        u3171 147C  
                      u2611 0AA3                        u4211 17CC                        u4131 173C  
                      u2531 13A4                        u3340 08B2                        u2700 0B29  
                      u2620 0AAD                        u5100 134B                        u4220 17E4  
                      u4140 1744                        u2540 13AB                        u3341 08B1  
                      u3181 148C                        u2701 0B28                        u2621 0AAC  
                      u4205 17BD                        u4141 1743                        u4125 171A  
                      u2541 13AA                        u3510 09B7                        u3350 08B7  
                      u3190 14A5                        u3182 148D                        u2710 0B36  
                      u2630 0AB3                        u5110 135F                        u4230 17EF  
                      u4150 1754                        u2550 13CC                        u3511 09B6  
                      u3351 08B6                        u3191 14A4                        u3183 1492  
                      u2711 0B35                        u2631 0AB2                        u5111 135E  
                      u4231 17EE                        u4135 1739                        u2551 13CB  
                      u3095 1D8C                        u3600 0A2F                        u3440 0967  
                      u3360 08D5                        u3184 1493                        u5200 0CD2  
                      u2640 0AB8                        u5120 1366                        u4160 1772  
                      u4240 1D38                        u2560 13FE                        u6000 070A  
                      u3601 0A2E                        u3505 09AC                        u3441 0966  
                      u3425 0953                        u3361 08D4                        u3185 1498  
                      u5201 0CD1                        u2641 0AB7                        u5121 1365  
                      u5105 1346                        u4225 17DF                        u4161 1771  
                      u4241 1D37                        u2561 13FD                        u6001 0709  
                      u6010 1D3E                        u3610 0A4C                        u3530 09CB  
                      u3370 08DB                        u3186 1499                        u5050 1DB4  
                      u5210 0CD7                        u2810 0BAB                        u2730 0B4A  
                      u2650 0AD1                        u4170 1781                        u2570 1421  
                      u6011 1D3D                        u3611 0A4B                        u3531 09CA  
                      u3435 095C                        u3371 08DA                        u5051 1DB3  
                      u5211 0CD6                        u2811 0BAA                        u2731 0B49  
                      u2651 0AD0                        u4155 174F                        u6020 1D49  
                      u6100 1FB9                        u3620 0A61                        u3540 09D0  
                      u3460 0983                        u3380 08E0                        u5220 0CF4  
                      u2900 0C43                        u2740 0B4E                        u2660 0AD5  
                      u2580 0A7C                        u5140 1376                        u4180 178C  
                      u6021 1D48                        u6101 1FB8                        u3621 0A60  
                      u3605 0A2B                        u3541 09CF                        u3525 09BA  
                      u3461 0982                        u3381 08DF                        u5301 0DCA  
                      u5221 0CF3                        u2901 0C42                        u2821 0BC2  
                      u2813 0BA7                        u2805 0B8B                        u2741 0B4D  
                      u2725 0B39                        u2661 0AD4                        u2581 0A7B  
                      u5141 1375                        u4181 178B                        u2565 13FA  
                      u6030 1D50                        u3550 09E4                        u3470 0998  
                      u3390 08FB                        u5070 1DC8                        u5302 0DD1  
                      u5230 0CFA                        u2910 0C49                        u2830 0BD6  
                      u2822 0BC3                        u2750 0B53                        u2670 0B0D  
                      u2590 0A82                        u5150 137D                        u6031 1D4F  
                      u3615 0A48                        u3551 09E3                        u3455 096A  
                      u3391 08FA                        u5071 1DC7                        u5303 0DD8  
                      u5231 0CF9                        u2911 0C48                        u2831 0BD7  
                      u2823 0BC8                        u2751 0B52                        u2671 0B0C  
                      u2591 0A81                        u5151 137C                        u5135 1368  
                      u4191 1795                        u4175 177C                        u6040 1D57  
                      u6120 1FE0                        u3560 09EB                        u3480 09A0  
                      u5400 0F03                        u5240 0CFF                        u2920 0C4E  
                      u2840 0BF3                        u2832 0BDC                        u2824 0BC9  
                      u2680 0B16                        u4192 179C                        u5080 1E20  
                      u4600 113E                        u6200 1201                        u6041 1D56  
                      u6121 1FDF                        u3561 09EA                        u3481 099F  
                      u3465 097F                        u5065 1DBB                        u5321 0DFE  
                      u5241 0CFE                        u2921 0C4D                        u2841 0BF2  
                      u2833 0BDD                        u2825 0BCE                        u2761 0B65  
                      u2681 0B14                        u4193 17A3                        u5081 1E1F  
                      u4601 113D                        u6201 1200                        u3570 09F1  
                      u3490 09A8                        u5322 0E05                        u5250 0D16  
                      u2930 0C54                        u2850 0C18                        u2826 0BCF  
                      u2770 0B77                        u2762 0B6C                        u2690 0B17  
                      u5170 138E                        u5090 1334                        u4610 117D  
                      u6050 14F4                        u6210 1262                        u6115 1FBF  
                      u3571 09F0                        u3491 09A7                        u3475 098B  
                      u5411 0F0F                        u5331 0E29                        u5323 0E0C  
                      u5315 0DDA                        u5251 0D15                        u2931 0C53  
                      u2851 0C17                        u2771 0B76                        u2763 0B73  
                      u2675 0B09                        u5171 138D                        u5091 1333  
                      u4611 117C                        u6051 14F3                        u6211 1261  
                      u6140 1F33                        u3580 0A03                        u3476 098C  
                      u5500 0F7B                        u5412 0F16                        u5332 0E30  
                      u5260 0D1B                        u2940 0C5B                        u2860 0C1D  
                      u2780 0B7B                        u5180 1393                        u6060 150E  
                      u6220 1269                        u3581 0A02                        u3477 0991  
                      u5501 0F7A                        u5413 0F1D                        u5405 0EFE  
                      u5333 0E37                        u5261 0D1A                        u2941 0C5A  
                      u2861 0C1C                        u2781 0B7A                        u5181 1392  
                      u5165 1380                        u6061 150D                        u6221 1268  
                      u6150 1F57                        u3590 0A12                        u3478 0992  
                      u5510 0F8D                        u5190 0CCC                        u2950 0C61  
                      u2790 0B88                        u6070 1550                        u6230 10F8  
                      u6135 1FE6                        u3479 0997                        u5511 0F8C  
                      u5351 0E5D                        u5271 0D68                        u5191 0CCB  
                      u2951 0C60                        u2791 0B87                        u6071 154F  
                      u6231 10F7                        u6160 1F69                        u5520 0F9C  
                      u5440 0F41                        u5352 0E64                        u5272 0D6F  
                      u2960 0C73                        u2880 0C33                        u5600 085C  
                      u4800 0767                        u6240 1108                        u6161 1F68  
                      u5441 0F40                        u5425 0F1F                        u5361 0E88  
                      u5353 0E6B                        u5345 0E39                        u5281 0D84  
                      u5273 0D76                        u2961 0C72                        u2881 0C32  
                      u4801 0766                        u6241 1107                        u5530 0FB9  
                      u5362 0E8F                        u5282 0D8B                        u2970 0C82  
                      u2890 0C38                        u5610 0867                        u6090 1DF1  
                      u6170 1192                        u6250 111A                        u3595 0A0D  
                      u5531 0FB8                        u5435 0F36                        u5371 0EB3  
                      u5363 0E96                        u5291 0DAE                        u5283 0D92  
                      u2891 0C37                        u2875 0C28                        u5611 0866  
                      u6091 1DF0                        u6307 12CD                        u6171 1191  
                      u6251 1119                        u5540 0FD3                        u5460 0F55  
                      u5380 0EDB                        u5372 0EBA                        u5292 0DB5  
                      u2980 0C91                        u5620 0877                        u5700 167A  
                      u4900 07E3                        u4820 0784                        u6180 1199  
                      u6085 1F6E                        u5541 0FD2                        u5525 0F97  
                      u5461 0F54                        u5373 0EC1                        u5293 0DBC  
                      u2981 0C90                        u5621 0876                        u5605 0857  
                      u5701 1679                        u6317 12DC                        u4901 07E2  
                      u4821 0783                        u6181 1198                        u5550 0FEF  
                      u5470 0F5A                        u2990 0C98                        u5630 0885  
                      u5710 16CF                        u4910 07E7                        u6190 11FA  
                      u6407 1D08                        u5551 0FEE                        u5535 0FB5  
                      u5471 0F59                        u5455 0F44                        u5391 0EE7  
                      u2991 0C97                        u2975 0C7D                        u5711 16CC  
                      u6327 12E9                        u4911 07E6                        u4815 0776  
                      u6191 11F9                        u5480 0F6E                        u5392 0EEE  
                      u5640 0891                        u5560 1E27                        u5800 022E  
                      u5720 16D6                        u4840 07A4                        u6417 1D12  
                      u5545 0FCF                        u5481 0F6D                        u5393 0EF5  
                      u5385 0ED6                        u5641 088F                        u5561 1E26  
                      u5801 022D                        u5721 16D5                        u6337 10D4  
                      u4841 07A3                        u5490 0F75                        u5650 0892  
                      u5570 1E51                        u5810 0268                        u5730 0057  
                      u5491 0F74                        u5635 0880                        u5571 1E50  
                      u5811 0267                        u5803 022A                        u5731 0056  
                      u6347 1EDB                        u4835 0796                        u6267 1259  
                      u5580 083F                        u5900 04D1                        u5820 0274  
                      u5660 1628                        u4860 07B4                        u4780 0743  
                      i1l77 1F1D                        u5901 04D0                        u5821 0273  
                      u5741 00CA                        u5661 1627                        u6357 1E9A  
                      u4861 07B3                        u4781 0742                        u6277 11F1  
                      u5590 084E                        u5910 051E                        u5830 028D  
                      u5750 0105                        u5742 00CD                        u5670 1650  
                      u4870 07BA                        u4790 0747                        u6367 1F87  
                      u5591 084D                        u5575 1E4D                        u5911 051D  
                      u5831 028C                        u5751 0104                        u5743 00D4  
                      u5671 164F                        u4871 07B9                        u4855 07A9  
                      u4791 0746                        u6287 1189                        u5920 0590  
                      u5840 0291                        u5760 013E                        u5744 00D7  
                      u5680 1655                        u4880 07BE                        u6377 1F91  
                      u5585 083A                        u5921 058F                        u5841 0290  
                      u5761 013D                        u5753 0101                        u5745 00DE  
                      u5681 1654                        u6297 12C7                        u4881 07BD  
                      u5930 05B1                        u5850 02A1                        u5746 00E1  
                      u5690 1673                        u4890 07D3                        u6387 1FA1  
                      u5931 05B0                        u5851 02A0                        u5771 0163  
                      u5691 1672                        u5940 05B5                        u5860 03B8  
                      u5780 019E                        u5772 0166                        u6397 1FAB  
                      u5941 05B4                        u5925 058C                        u5861 03B7  
                      u5781 019D                        u5773 016D                        u5950 05E8  
                      u5870 042E                        u5774 0170                        u5951 05E7  
                      u5871 042D                        u5791 01F3                        u5783 019A  
                      u5775 0177                        u4895 07CE                        u5960 06AE  
                      u5880 0454                        u5792 01F6                        u5776 017A  
                      u5961 06AD                        u5881 0453                        u5865 03B4  
                      u5793 01FD                        u5970 06BD                        u5890 045A  
                      u5794 0200                        u5971 06BC                        u5891 0459  
                      u5795 0207                        u5980 06F6                        u5796 020A  
                      u5981 06F4                        u5965 06AA                        u5990 06F7  
                      u5975 06B9                        _TMR1 000E                        _TMR2 0011  
         ?_LCD_Write_String 0077                        _data 00DA                        _dbuf 0110  
                      _labs 1CCB                        _main 10DA                        _prec 00E8  
                      pad@i 0033                        pad@p 0031                        btemp 007E  
             ___fpclassifyf 0811                        start 000C          ??_LCD_Write_String 0020  
           ___fldiv@new_exp 002A                       ??_ISR 0070            __end_of_LCD_DATA 1D5B  
                     ??_pad 0079            __end_of_LCD_Init 1329               ___fltol@sign1 0020  
                     ?_labs 0072             __end_of___fladd 0CBE                       ?_main 0070  
           __end_of___fldiv 0A6E             __end_of___flneg 100C                       STR_10 184B  
           __end_of___flmul 1000             __end_of___flsub 1D7F             __end_of___fltol 139F  
              vfpfcnvrt@fmt 00CE                       _TRISB 0086      __end_of_LCD_Set_Cursor 2000  
                     _flags 00EC         read_prec_or_width@c 0020         read_prec_or_width@n 0021  
                     _fputc 139F                       _fputs 1DF6                       labs@a 0072  
                     pad@fp 002E                       _width 00E6                       _putch 07FE  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 1039              ?___fpclassifyf 0072              _LCD_Write_Char 1F6A  
           __initialization 000F                __end_of_labs 1CE0                __end_of_main 112B  
                    ??_labs 0076                      ??_main 007A           __end_of_LCD_Clear 07FE  
                 ??_LCD_CMD 0073  __end_of_read_prec_or_width 1182             ?_LCD_Set_Cursor 0075  
           ??_LCD_Display_1 006D             ??_LCD_Display_2 006D             ??_LCD_Display_3 006D  
                    ?_fputc 0072                      ?_fputs 0076                      ?_putch 0070  
                    i1l3500 1EFB                      i1l3502 1F04                      i1l3510 1F18  
                    i1l3512 1F1C                      i1l3504 1F07                      i1l3506 1F10  
                    i1l3508 1F14                      i1l3492 1EE1                      i1l3494 1EE7  
                    i1l3496 1EEF                      i1l3498 1EF8                      u500_20 1F04  
                    u500_21 1F03                      u501_20 1F10                      u501_21 1F0F  
                    u498_20 1EE7                      u498_21 1EE6                      u499_20 1EF8  
                    u499_21 1EF7            __end_of___xxtofl 07F1      __end_of_LCD_Write_Char 1FB1  
              vfprintf@cfmt 005F                      ___flge 143F                      ___fleq 1039  
         __end_of_TMR1_Init 1CCB           __end_of_TMR2_Init 0811                   ??___fladd 0020  
                    ___wmul 1D7F                   ??___fldiv 0020                   ??___flneg 0076  
                 ??___flmul 002E                   ??___flsub 007A                   ??___fltol 0076  
                    _efgtoa 15E6                      _buffer 019C                      _floorf 16F1  
                    _memcpy 1D18        read_prec_or_width@ap 0079                      pad@buf 0030  
                    _strcpy 1CE0                      fputc@c 0072                      fputs@c 002B  
                    fputs@i 002C                      fputs@s 0076             ___fpclassifyf@e 0026  
           ___fpclassifyf@u 0028             ___fpclassifyf@x 0072                      saved_w 007E  
                    putch@c 0070            __end_of_vfprintf 1DF6                   ??_sprintf 0060  
           LCD_Set_Cursor@c 0075             LCD_Set_Cursor@r 0020                  ___flge@ff1 0040  
                ___flge@ff2 0044             ??___fpclassifyf 0020                   ?_LCD_DATA 0070  
              ___xxtofl@arg 0022                ___xxtofl@exp 0021                ___xxtofl@val 0072  
                ___fleq@ff1 0072                  ___fleq@ff2 0076     __end_of__initialization 002E  
                 ?_LCD_Init 0070                  ___flneg@f1 0072                  ___fltol@f1 0072  
           ?_LCD_Write_Char 0070              __pcstackCOMMON 0070               __end_of_fputc 143F  
             __end_of_fputs 1E21               __end_of_putch 07FF                     ??_fputc 0020  
                   ??_fputs 0029                     ??_putch 0072                  __pbssBANK0 006F  
                __pbssBANK1 00DA                  __pbssBANK2 0110                  __pbssBANK3 0190  
                ??_LCD_DATA 0072                  ??_LCD_Init 0075           __end_of__Umul8_16 1DCD  
                _efgtoa$994 00A6                  __pmaintext 10DA                     ?___flge 0040  
                   ?___fleq 0072                     ?___wmul 0072                  __pintentry 0004  
                   ?_efgtoa 004C                     ?_floorf 0032                     ?_memcpy 0072  
                   ?_strcpy 0072                     _LCD_CMD 1CF9                   ?___xxtofl 0072  
                __stringtab 1800                     ___fladd 0A6E                     ___fldiv 089E  
                   ___flneg 1001                     ___flmul 0CBE                     ___flsub 1D5B  
                   ___fltol 1329                   ?_vfprintf 00D0            ??_LCD_Set_Cursor 0076  
                   __ptext1 1250                     __ptext2 11E8                     __ptext3 1182  
                   __ptext4 073B                     __ptext5 0801                     __ptext6 1CBB  
                   __ptext7 12B8                     __ptext8 1089                     __ptext9 1EA0  
                 _T1CONbits 0010                   _T2CONbits 0012       read_prec_or_width@fmt 0078  
                ??___xxtofl 0076                     efgtoa@c 0052                     efgtoa@d 00AB  
                   efgtoa@e 00AF                     efgtoa@f 004E                     efgtoa@g 00C2  
                   efgtoa@h 00B9                     efgtoa@i 00B7                     efgtoa@l 00BD  
                   efgtoa@m 00AD                     efgtoa@n 00C6                     _value_1 00E2  
                   efgtoa@p 00A2                     _value_2 00DE                     _value_3 0198  
                   efgtoa@t 00A4                     efgtoa@u 00C8                     efgtoa@w 00B1  
                 _LCD_Clear 07F1                     _sprintf 100C                     clrloop0 1CAB  
      end_of_initialization 002E                     floorf@e 0040                     floorf@m 003C  
                   floorf@u 0042                     floorf@x 0032                     memcpy@d 0077  
                   memcpy@n 0074                     memcpy@s 0078                     fputc@fp 0074  
                   fputs@fp 0077          _read_prec_or_width 112B           __end_of_vfpfcnvrt 15E6  
                efgtoa@mode 00A9                  efgtoa@sign 00C1         ?_read_prec_or_width 0078  
                   psplit$0 1D003A            vfpfcnvrt@convarg 0059           __end_of_trigger_1 11E8  
         __end_of_trigger_2 1250           __end_of_trigger_3 12B8                  ??_vfprintf 007A  
                   strcpy@d 0074                   _TMR1_Init 1CBB                   _TMR2_Init 0801  
                 _PORTBbits 0006                   _PORTDbits 0008                 ___fladd@grs 002B  
                LCD_CMD@cmd 0074               ___xxtofl@sign 0020                   _TRISBbits 0086  
                 _TRISDbits 0088                  ?_LCD_Clear 0070        ??_read_prec_or_width 007A  
               ___fldiv@grs 002C                 ___fldiv@rem 0025       __end_of_LCD_Display_1 1EA0  
     __end_of_LCD_Display_2 1EE1       __end_of_LCD_Display_3 10DA           LCD_Write_String@i 0023  
          ??_LCD_Write_Char 0073                 ___flmul@grs 0035              __end_of___flge 14E3  
            __end_of___fleq 1089                 vfpfcnvrt@ap 00CF                 vfpfcnvrt@cp 005E  
               vfpfcnvrt@fp 00CC              __end_of___wmul 1DA4            _LCD_Write_String 1F24  
            __end_of_efgtoa 073B                  ?_TMR1_Init 0070                  ?_TMR2_Init 0070  
            __end_of_floorf 1800              __end_of_memcpy 1D39                  floorf@F521 0190  
            __end_of_strcpy 1CF9               ??_GPIO_Config 0072         start_initialization 000F  
               __end_of_ISR 1F24                 __end_of_pad 1E5F       __end_of___fpclassifyf 089E  
               vfprintf@fmt 00D2                    ??___flge 0048                    ??___fleq 0020  
                  ??___wmul 0076                    ??_efgtoa 0053                   __Umul8_16 1DA4  
                  ??_floorf 0036                    ??_memcpy 0076                    ??_strcpy 0074  
                 ___fladd@a 0076                   ___fladd@b 0072                    ?_LCD_CMD 0070  
                 ___fldiv@a 0072                   ___fldiv@b 0076                   ___flmul@a 002A  
                 ___flmul@b 0026                 __pbssCOMMON 007A                   ___flsub@a 0040  
                 ___flsub@b 0044                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                 ??_LCD_Clear 0075         __end_of_GPIO_Config 1CBB  
                  ?___fladd 0072                    ?___fldiv 0072                    ?___flneg 0072  
                  ?___flmul 0026                    ?___flsub 0040                    ?___fltol 0072  
                ?__Umul8_16 0072                 ??_TMR1_Init 0072                 ??_TMR2_Init 0072  
                 __pstrings 1800                  pnum$text16 001D                    ?_sprintf 00D4  
                  _LCD_DATA 1D39           interrupt_function 0004                    _LCD_Init 12B8  
            ___wmul@product 0076                   clear_ram0 1CAA                    _PIE1bits 008C  
                  _PIR1bits 000C                   _vfpfcnvrt 14E3                 __stringbase 180F  
         ___wmul@multiplier 0072                   _trigger_1 1182                   _trigger_2 11E8  
                 _trigger_3 1250                 _GPIO_Config 1CB2                  vfpfcnvrt@c 005D  
  __end_of_LCD_Write_String 1F6A                   memcpy@tmp 0076                  vfprintf@ap 00D3  
                vfprintf@fp 00D0                 ??__Umul8_16 0074         LCD_Write_Char@high4 0074  
                ?_vfpfcnvrt 00CC          __end_of__stringtab 1810                  ?_trigger_1 0070  
                ?_trigger_2 0070                  ?_trigger_3 0070          ___fpclassifyf@F465 0194  
                sprintf@fmt 00D5                    ___xxtofl 073B                    __ptext10 1E5F  
                  __ptext11 100C                    __ptext20 139F                    __ptext12 1DCD  
                  __ptext21 07FE                    __ptext13 14E3                    __ptext30 0CBE  
                  __ptext22 1D18                    __ptext14 112B                    __ptext31 1DA4  
                  __ptext23 1CCB                    __ptext15 1D7F                    __ptext40 1D39  
                  __ptext32 143F                    __ptext24 16F1                    __ptext16 15E6  
                  __ptext41 1CB2                    __ptext33 1039                    __ptext25 0811  
                  __ptext17 1CE0                    __ptext42 1EE1                    __ptext34 089E  
                  __ptext26 1329                    __ptext18 1E21                    __ptext35 1F24  
                  __ptext27 1D5B                    __ptext19 1DF6                    __ptext36 1F6A  
                  __ptext28 0A6E                    __ptext37 1FB1                    __ptext29 1001  
                  __ptext38 07F1                    __ptext39 1CF9                  strcpy@dest 0072  
                  efgtoa@fp 004C                    efgtoa@ne 00A0                    efgtoa@pp 00A8  
                  efgtoa@ou 00B3                    _vfprintf 1DCD         LCD_Set_Cursor@high4 0021  
        pnum$text16_split_1 003A                  _INTCONbits 000B                    memcpy@d1 0072  
                  memcpy@s1 0073          LCD_Write_Char@data 0076          LCD_Write_Char@low4 0075  
                  intlevel1 0000                   sprintf@ap 0061                   strcpy@src 0073  
                 stringcode 180A                 efgtoa@nmode 00AA          LCD_Set_Cursor@low4 0022  
        LCD_Set_Cursor@temp 0023                 ??_vfpfcnvrt 0057      __Umul8_16@multiplicand 0072  
               ??_trigger_1 0040                 ??_trigger_2 0040                 ??_trigger_3 0040  
                  sprintf@f 0062                    sprintf@s 00D4                LCD_DATA@data 0072  
                  stringdir 180A                    stringtab 1800               ___fladd@signs 0028  
             _LCD_Display_1 1E5F               _LCD_Display_2 1EA0               _LCD_Display_3 1089  
              ___fladd@aexp 0029                ___fladd@bexp 002A        __Umul8_16@multiplier 0024  
             _updateSensor1 007B               _updateSensor2 007A               _updateSensor3 006F  
         __Umul8_16@product 0020  
