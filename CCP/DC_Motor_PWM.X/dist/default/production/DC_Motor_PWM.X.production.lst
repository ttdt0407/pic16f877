

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 15 12:15:37 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0015                     _CCPR1L         set	21
   177     0012                     _T2CONbits      set	18
   178     0017                     _CCP1CONbits    set	23
   179     0008                     _PORTDbits      set	8
   180     0006                     _PORTBbits      set	6
   181     0092                     _PR2            set	146
   182     0088                     _TRISD          set	136
   183     0087                     _TRISCbits      set	135
   184     0086                     _TRISB          set	134
   185                           
   186                           	psect	cinit
   187     07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FC                     __initialization:
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2F4C   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_PINS_Init:
   201     0070                     ?_PWM_Init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_TMR2_Init:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_Set_PWM_Duty:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     Set_PWM_Duty@duty_cycle:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ??_PINS_Init:	
   217                           ; 2 bytes @ 0x0
   218                           
   219     0070                     ??_PWM_Init:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ??_TMR2_Init:	
   223                           ; 1 bytes @ 0x0
   224                           
   225                           
   226                           ; 1 bytes @ 0x0
   227     0070                     	ds	2
   228     0072                     ??_Set_PWM_Duty:
   229                           
   230                           ; 1 bytes @ 0x2
   231     0072                     	ds	2
   232     0074                     ??_main:
   233                           
   234                           ; 1 bytes @ 0x4
   235     0074                     	ds	3
   236                           
   237                           	psect	maintext
   238     074C                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 23 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          3       0       0       0       0
   261 ;;      Totals:         3       0       0       0       0
   262 ;;Total ram usage:        3 bytes
   263 ;; Hardware stack levels required when called: 1
   264 ;; This function calls:
   265 ;;		_PINS_Init
   266 ;;		_PWM_Init
   267 ;;		_Set_PWM_Duty
   268 ;;		_TMR2_Init
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     074C                     _main:	
   275                           ;psect for function _main
   276                           
   277     074C                     l654:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280                           
   281                           
   282                           ;main.c: 24:     PINS_Init();
   283     074C  120A  118A  2716  120A  118A  	fcall	_PINS_Init
   284                           
   285                           ;main.c: 25:     PWM_Init();
   286     0751  120A  118A  2707  120A  118A  	fcall	_PWM_Init
   287                           
   288                           ;main.c: 26:     TMR2_Init();
   289     0756  120A  118A  270C  120A  118A  	fcall	_TMR2_Init
   290     075B                     l656:
   291                           
   292                           ;main.c: 28:     Set_PWM_Duty(0);
   293     075B  3000               	movlw	0
   294     075C  00F0               	movwf	Set_PWM_Duty@duty_cycle
   295     075D  00F1               	movwf	Set_PWM_Duty@duty_cycle+1
   296     075E  120A  118A  2721  120A  118A  	fcall	_Set_PWM_Duty
   297     0763                     l658:
   298                           
   299                           ;main.c: 30:     {;main.c: 31:         if (PORTBbits.RB0)
   300     0763  1283               	bcf	3,5	;RP0=0, select bank0
   301     0764  1303               	bcf	3,6	;RP1=0, select bank0
   302     0765  1C06               	btfss	6,0	;volatile
   303     0766  2F68               	goto	u121
   304     0767  2F69               	goto	u120
   305     0768                     u121:
   306     0768  2F90               	goto	l664
   307     0769                     u120:
   308     0769                     l660:
   309                           
   310                           ;main.c: 32:         {;main.c: 33:             PORTDbits.RD0 = ~PORTDbits.RD0;
   311     0769  1003               	clrc
   312     076A  1C08               	btfss	8,0	;volatile
   313     076B  1403               	setc
   314     076C  1803               	btfsc	3,0
   315     076D  2F6F               	goto	u131
   316     076E  2F73               	goto	u130
   317     076F                     u131:
   318     076F  1283               	bcf	3,5	;RP0=0, select bank0
   319     0770  1303               	bcf	3,6	;RP1=0, select bank0
   320     0771  1408               	bsf	8,0	;volatile
   321     0772  2F76               	goto	u144
   322     0773                     u130:
   323     0773  1283               	bcf	3,5	;RP0=0, select bank0
   324     0774  1303               	bcf	3,6	;RP1=0, select bank0
   325     0775  1008               	bcf	8,0	;volatile
   326     0776                     u144:
   327                           
   328                           ;main.c: 34:             PORTDbits.RD1 = ~PORTDbits.RD1;
   329     0776  1003               	clrc
   330     0777  1C88               	btfss	8,1	;volatile
   331     0778  1403               	setc
   332     0779  1803               	btfsc	3,0
   333     077A  2F7C               	goto	u151
   334     077B  2F80               	goto	u150
   335     077C                     u151:
   336     077C  1283               	bcf	3,5	;RP0=0, select bank0
   337     077D  1303               	bcf	3,6	;RP1=0, select bank0
   338     077E  1488               	bsf	8,1	;volatile
   339     077F  2F83               	goto	u164
   340     0780                     u150:
   341     0780  1283               	bcf	3,5	;RP0=0, select bank0
   342     0781  1303               	bcf	3,6	;RP1=0, select bank0
   343     0782  1088               	bcf	8,1	;volatile
   344     0783                     u164:
   345     0783                     l662:
   346                           
   347                           ;main.c: 35:             _delay((unsigned long)((500)*(4000000/4000.0)));
   348     0783  3003               	movlw	3
   349     0784  00F6               	movwf	??_main+2
   350     0785  308A               	movlw	138
   351     0786  00F5               	movwf	??_main+1
   352     0787  3055               	movlw	85
   353     0788  00F4               	movwf	??_main
   354     0789                     u217:
   355     0789  0BF4               	decfsz	??_main,f
   356     078A  2F89               	goto	u217
   357     078B  0BF5               	decfsz	??_main+1,f
   358     078C  2F89               	goto	u217
   359     078D  0BF6               	decfsz	??_main+2,f
   360     078E  2F89               	goto	u217
   361     078F  2F90               	nop2
   362     0790                     l664:
   363                           
   364                           ;main.c: 38:         if (PORTBbits.RB1)
   365     0790  1283               	bcf	3,5	;RP0=0, select bank0
   366     0791  1303               	bcf	3,6	;RP1=0, select bank0
   367     0792  1C86               	btfss	6,1	;volatile
   368     0793  2F95               	goto	u171
   369     0794  2F96               	goto	u170
   370     0795                     u171:
   371     0795  2FA7               	goto	l670
   372     0796                     u170:
   373     0796                     l666:
   374                           
   375                           ;main.c: 39:         {;main.c: 40:             Set_PWM_Duty(0);
   376     0796  3000               	movlw	0
   377     0797  00F0               	movwf	Set_PWM_Duty@duty_cycle
   378     0798  00F1               	movwf	Set_PWM_Duty@duty_cycle+1
   379     0799  120A  118A  2721  120A  118A  	fcall	_Set_PWM_Duty
   380     079E                     l668:
   381                           
   382                           ;main.c: 41:             _delay((unsigned long)((100)*(4000000/4000.0)));
   383     079E  3082               	movlw	130
   384     079F  00F5               	movwf	??_main+1
   385     07A0  30DD               	movlw	221
   386     07A1  00F4               	movwf	??_main
   387     07A2                     u227:
   388     07A2  0BF4               	decfsz	??_main,f
   389     07A3  2FA2               	goto	u227
   390     07A4  0BF5               	decfsz	??_main+1,f
   391     07A5  2FA2               	goto	u227
   392     07A6  2FA7               	nop2
   393     07A7                     l670:
   394                           
   395                           ;main.c: 43:         if (PORTBbits.RB2)
   396     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   397     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   398     07A9  1D06               	btfss	6,2	;volatile
   399     07AA  2FAC               	goto	u181
   400     07AB  2FAD               	goto	u180
   401     07AC                     u181:
   402     07AC  2FBF               	goto	l676
   403     07AD                     u180:
   404     07AD                     l672:
   405                           
   406                           ;main.c: 44:         {;main.c: 45:              Set_PWM_Duty(250);
   407     07AD  30FA               	movlw	250
   408     07AE  00F0               	movwf	Set_PWM_Duty@duty_cycle
   409     07AF  3000               	movlw	0
   410     07B0  00F1               	movwf	Set_PWM_Duty@duty_cycle+1
   411     07B1  120A  118A  2721  120A  118A  	fcall	_Set_PWM_Duty
   412     07B6                     l674:
   413                           
   414                           ;main.c: 46:             _delay((unsigned long)((100)*(4000000/4000.0)));
   415     07B6  3082               	movlw	130
   416     07B7  00F5               	movwf	??_main+1
   417     07B8  30DD               	movlw	221
   418     07B9  00F4               	movwf	??_main
   419     07BA                     u237:
   420     07BA  0BF4               	decfsz	??_main,f
   421     07BB  2FBA               	goto	u237
   422     07BC  0BF5               	decfsz	??_main+1,f
   423     07BD  2FBA               	goto	u237
   424     07BE  2FBF               	nop2
   425     07BF                     l676:
   426                           
   427                           ;main.c: 48:         if (PORTBbits.RB3)
   428     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   429     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   430     07C1  1D86               	btfss	6,3	;volatile
   431     07C2  2FC4               	goto	u191
   432     07C3  2FC5               	goto	u190
   433     07C4                     u191:
   434     07C4  2FD7               	goto	l682
   435     07C5                     u190:
   436     07C5                     l678:
   437                           
   438                           ;main.c: 49:         {;main.c: 50:              Set_PWM_Duty(375);
   439     07C5  3077               	movlw	119
   440     07C6  00F0               	movwf	Set_PWM_Duty@duty_cycle
   441     07C7  3001               	movlw	1
   442     07C8  00F1               	movwf	Set_PWM_Duty@duty_cycle+1
   443     07C9  120A  118A  2721  120A  118A  	fcall	_Set_PWM_Duty
   444     07CE                     l680:
   445                           
   446                           ;main.c: 51:             _delay((unsigned long)((100)*(4000000/4000.0)));
   447     07CE  3082               	movlw	130
   448     07CF  00F5               	movwf	??_main+1
   449     07D0  30DD               	movlw	221
   450     07D1  00F4               	movwf	??_main
   451     07D2                     u247:
   452     07D2  0BF4               	decfsz	??_main,f
   453     07D3  2FD2               	goto	u247
   454     07D4  0BF5               	decfsz	??_main+1,f
   455     07D5  2FD2               	goto	u247
   456     07D6  2FD7               	nop2
   457     07D7                     l682:
   458                           
   459                           ;main.c: 53:         if (PORTBbits.RB4)
   460     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   461     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   462     07D9  1E06               	btfss	6,4	;volatile
   463     07DA  2FDC               	goto	u201
   464     07DB  2FDD               	goto	u200
   465     07DC                     u201:
   466     07DC  2FEF               	goto	l688
   467     07DD                     u200:
   468     07DD                     l684:
   469                           
   470                           ;main.c: 54:         {;main.c: 55:              Set_PWM_Duty(500);
   471     07DD  30F4               	movlw	244
   472     07DE  00F0               	movwf	Set_PWM_Duty@duty_cycle
   473     07DF  3001               	movlw	1
   474     07E0  00F1               	movwf	Set_PWM_Duty@duty_cycle+1
   475     07E1  120A  118A  2721  120A  118A  	fcall	_Set_PWM_Duty
   476     07E6                     l686:
   477                           
   478                           ;main.c: 56:             _delay((unsigned long)((100)*(4000000/4000.0)));
   479     07E6  3082               	movlw	130
   480     07E7  00F5               	movwf	??_main+1
   481     07E8  30DD               	movlw	221
   482     07E9  00F4               	movwf	??_main
   483     07EA                     u257:
   484     07EA  0BF4               	decfsz	??_main,f
   485     07EB  2FEA               	goto	u257
   486     07EC  0BF5               	decfsz	??_main+1,f
   487     07ED  2FEA               	goto	u257
   488     07EE  2FEF               	nop2
   489     07EF                     l688:
   490                           
   491                           ;main.c: 58:         _delay((unsigned long)((10)*(4000000/4000.0)));
   492     07EF  300D               	movlw	13
   493     07F0  00F5               	movwf	??_main+1
   494     07F1  30FB               	movlw	251
   495     07F2  00F4               	movwf	??_main
   496     07F3                     u267:
   497     07F3  0BF4               	decfsz	??_main,f
   498     07F4  2FF3               	goto	u267
   499     07F5  0BF5               	decfsz	??_main+1,f
   500     07F6  2FF3               	goto	u267
   501     07F7  2FF8               	nop2
   502     07F8  2F63               	goto	l658
   503     07F9  120A  118A  2800   	ljmp	start
   504     07FC                     __end_of_main:
   505                           
   506                           	psect	text1
   507     070C                     __ptext1:	
   508 ;; *************** function _TMR2_Init *****************
   509 ;; Defined at:
   510 ;;		line 78 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		None
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     070C                     _TMR2_Init:	
   538                           ;psect for function _TMR2_Init
   539                           
   540     070C                     l608:	
   541                           ;incstack = 0
   542                           ; Regs used in _TMR2_Init: []
   543                           
   544                           
   545                           ;main.c: 80:     PR2 = 124;
   546     070C  307C               	movlw	124
   547     070D  1683               	bsf	3,5	;RP0=1, select bank1
   548     070E  1303               	bcf	3,6	;RP1=0, select bank1
   549     070F  0092               	movwf	18	;volatile
   550                           
   551                           ;main.c: 81:     T2CONbits.T2CKPS1 = 0;
   552     0710  1283               	bcf	3,5	;RP0=0, select bank0
   553     0711  1303               	bcf	3,6	;RP1=0, select bank0
   554     0712  1092               	bcf	18,1	;volatile
   555                           
   556                           ;main.c: 82:     T2CONbits.T2CKPS0 = 1;
   557     0713  1412               	bsf	18,0	;volatile
   558                           
   559                           ;main.c: 83:     T2CONbits.TMR2ON = 1;
   560     0714  1512               	bsf	18,2	;volatile
   561     0715                     l50:
   562     0715  0008               	return
   563     0716                     __end_of_TMR2_Init:
   564                           
   565                           	psect	text2
   566     0721                     __ptext2:	
   567 ;; *************** function _Set_PWM_Duty *****************
   568 ;; Defined at:
   569 ;;		line 85 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  duty_cycle      2    0[COMMON] unsigned short 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         2       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0
   585 ;;      Temps:          2       0       0       0       0
   586 ;;      Totals:         4       0       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596     0721                     _Set_PWM_Duty:	
   597                           ;psect for function _Set_PWM_Duty
   598                           
   599     0721                     l650:	
   600                           ;incstack = 0
   601                           ; Regs used in _Set_PWM_Duty: [wreg+status,2+status,0]
   602                           
   603                           
   604                           ;main.c: 85: void Set_PWM_Duty(uint16_t duty_cycle);main.c: 86: {;main.c: 87:     if (du
      +                          ty_cycle <= 1024)
   605     0721  3004               	movlw	4
   606     0722  0271               	subwf	Set_PWM_Duty@duty_cycle+1,w
   607     0723  3001               	movlw	1
   608     0724  1903               	skipnz
   609     0725  0270               	subwf	Set_PWM_Duty@duty_cycle,w
   610     0726  1803               	skipnc
   611     0727  2F29               	goto	u111
   612     0728  2F2A               	goto	u110
   613     0729                     u111:
   614     0729  2F4B               	goto	l54
   615     072A                     u110:
   616     072A                     l652:
   617                           
   618                           ;main.c: 88:     {;main.c: 89:     CCP1CONbits.CCP1Y = duty_cycle & 1;
   619     072A  0870               	movf	Set_PWM_Duty@duty_cycle,w
   620     072B  3901               	andlw	1
   621     072C  00F2               	movwf	??_Set_PWM_Duty
   622     072D  0EF2               	swapf	??_Set_PWM_Duty,f
   623     072E  1283               	bcf	3,5	;RP0=0, select bank0
   624     072F  1303               	bcf	3,6	;RP1=0, select bank0
   625     0730  0817               	movf	23,w	;volatile
   626     0731  0672               	xorwf	??_Set_PWM_Duty,w
   627     0732  39EF               	andlw	-17
   628     0733  0672               	xorwf	??_Set_PWM_Duty,w
   629     0734  0097               	movwf	23	;volatile
   630                           
   631                           ;main.c: 90:     CCP1CONbits.CCP1X = duty_cycle & 2;
   632     0735  0870               	movf	Set_PWM_Duty@duty_cycle,w
   633     0736  3902               	andlw	2
   634     0737  00F2               	movwf	??_Set_PWM_Duty
   635     0738  0EF2               	swapf	??_Set_PWM_Duty,f
   636     0739  0DF2               	rlf	??_Set_PWM_Duty,f
   637     073A  0817               	movf	23,w	;volatile
   638     073B  0672               	xorwf	??_Set_PWM_Duty,w
   639     073C  39DF               	andlw	-33
   640     073D  0672               	xorwf	??_Set_PWM_Duty,w
   641     073E  0097               	movwf	23	;volatile
   642                           
   643                           ;main.c: 91:     CCPR1L = duty_cycle >> 2;
   644     073F  0871               	movf	Set_PWM_Duty@duty_cycle+1,w
   645     0740  00F3               	movwf	??_Set_PWM_Duty+1
   646     0741  0870               	movf	Set_PWM_Duty@duty_cycle,w
   647     0742  00F2               	movwf	??_Set_PWM_Duty
   648     0743  1003               	clrc
   649     0744  0CF3               	rrf	??_Set_PWM_Duty+1,f
   650     0745  0CF2               	rrf	??_Set_PWM_Duty,f
   651     0746  1003               	clrc
   652     0747  0CF3               	rrf	??_Set_PWM_Duty+1,f
   653     0748  0CF2               	rrf	??_Set_PWM_Duty,f
   654     0749  0872               	movf	??_Set_PWM_Duty,w
   655     074A  0095               	movwf	21	;volatile
   656     074B                     l54:
   657     074B  0008               	return
   658     074C                     __end_of_Set_PWM_Duty:
   659                           
   660                           	psect	text3
   661     0707                     __ptext3:	
   662 ;; *************** function _PWM_Init *****************
   663 ;; Defined at:
   664 ;;		line 73 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		None
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691     0707                     _PWM_Init:	
   692                           ;psect for function _PWM_Init
   693                           
   694     0707                     l606:	
   695                           ;incstack = 0
   696                           ; Regs used in _PWM_Init: []
   697                           
   698                           
   699                           ;main.c: 75:     CCP1CONbits.CCP1M2 = 1;
   700     0707  1283               	bcf	3,5	;RP0=0, select bank0
   701     0708  1303               	bcf	3,6	;RP1=0, select bank0
   702     0709  1517               	bsf	23,2	;volatile
   703                           
   704                           ;main.c: 76:     CCP1CONbits.CCP1M3 = 1;
   705     070A  1597               	bsf	23,3	;volatile
   706     070B                     l47:
   707     070B  0008               	return
   708     070C                     __end_of_PWM_Init:
   709                           
   710                           	psect	text4
   711     0716                     __ptext4:	
   712 ;; *************** function _PINS_Init *****************
   713 ;; Defined at:
   714 ;;		line 65 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		status,2
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741     0716                     _PINS_Init:	
   742                           ;psect for function _PINS_Init
   743                           
   744     0716                     l598:	
   745                           ;incstack = 0
   746                           ; Regs used in _PINS_Init: [status,2]
   747                           
   748                           
   749                           ;main.c: 67:     TRISB = 0x1F;
   750     0716  301F               	movlw	31
   751     0717  1683               	bsf	3,5	;RP0=1, select bank1
   752     0718  1303               	bcf	3,6	;RP1=0, select bank1
   753     0719  0086               	movwf	6	;volatile
   754                           
   755                           ;main.c: 68:     TRISCbits.TRISC2 = 0;
   756     071A  1107               	bcf	7,2	;volatile
   757     071B                     l600:
   758                           
   759                           ;main.c: 69:     TRISD = 0;
   760     071B  0188               	clrf	8	;volatile
   761     071C                     l602:
   762                           
   763                           ;main.c: 70:     PORTDbits.RD0 = 0;
   764     071C  1283               	bcf	3,5	;RP0=0, select bank0
   765     071D  1303               	bcf	3,6	;RP1=0, select bank0
   766     071E  1008               	bcf	8,0	;volatile
   767     071F                     l604:
   768                           
   769                           ;main.c: 71:     PORTDbits.RD1 = 1;
   770     071F  1488               	bsf	8,1	;volatile
   771     0720                     l44:
   772     0720  0008               	return
   773     0721                     __end_of_PINS_Init:
   774     0002                     ___latbits      equ	2
   775     007E                     btemp           set	126	;btemp
   776     007E                     wtemp0          set	126
   777                           
   778                           	psect	config
   779                           
   780                           ;Config register CONFIG @ 0x2007
   781                           ;	Oscillator Selection bits
   782                           ;	FOSC = HS, HS oscillator
   783                           ;	Watchdog Timer Enable bit
   784                           ;	WDTE = OFF, WDT disabled
   785                           ;	Power-up Timer Enable bit
   786                           ;	PWRTE = ON, PWRT enabled
   787                           ;	Brown-out Reset Enable bit
   788                           ;	BOREN = ON, BOR enabled
   789                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   790                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   791                           ;	Data EEPROM Memory Code Protection bit
   792                           ;	CPD = OFF, Data EEPROM code protection off
   793                           ;	Flash Program Memory Write Enable bits
   794                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   795                           ;	In-Circuit Debugger Mode bit
   796                           ;	DEBUG = 0x1, unprogrammed default
   797                           ;	Flash Program Memory Code Protection bit
   798                           ;	CP = OFF, Code protection off
   799     2007                     	org	8199
   800     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Set_PWM_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      93
                                              4 COMMON     3     3      0
                          _PINS_Init
                           _PWM_Init
                       _Set_PWM_Duty
                          _TMR2_Init
 ---------------------------------------------------------------------------------
 (1) _TMR2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Set_PWM_Duty                                         4     2      2      93
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PINS_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PINS_Init
   _PWM_Init
   _Set_PWM_Duty
   _TMR2_Init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 15 12:15:37 2025

                     l50 0715                       l44 0720                       l54 074B  
                     l47 070B                      l600 071B                      l602 071C  
                    l604 071F                      l606 0707                      l608 070C  
                    l650 0721                      l652 072A                      l660 0769  
                    l670 07A7                      l662 0783                      l654 074C  
                    l680 07CE                      l672 07AD                      l664 0790  
                    l656 075B                      l682 07D7                      l674 07B6  
                    l666 0796                      l658 0763                      l684 07DD  
                    l676 07BF                      l668 079E                      l598 0716  
                    l686 07E6                      l678 07C5                      l688 07EF  
                    u110 072A                      u111 0729                      u200 07DD  
                    u120 0769                      u201 07DC                      u121 0768  
                    u130 0773                      u131 076F                      u150 0780  
                    u151 077C                      u144 0776                      u217 0789  
                    u170 0796                      u227 07A2                      u171 0795  
                    u180 07AD                      u164 0783                      u237 07BA  
                    u181 07AC                      u190 07C5                      _PR2 0092  
                    u247 07D2                      u191 07C4                      u257 07EA  
                    u267 07F3                     _main 074C                     btemp 007E  
                   start 0000                    ?_main 0070                    _TRISB 0086  
                  _TRISD 0088         __end_of_PWM_Init 070C                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                   _CCPR1L 0015        __end_of_PINS_Init 0721  
      __end_of_TMR2_Init 0716            ?_Set_PWM_Duty 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070           ??_Set_PWM_Duty 0072                ?_PWM_Init 0070  
             __pmaintext 074C               ??_PWM_Init 0070                  __ptext1 070C  
                __ptext2 0721                  __ptext3 0707                  __ptext4 0716  
              _T2CONbits 0012     end_of_initialization 07FC     __end_of_Set_PWM_Duty 074C  
              _PINS_Init 0716                _TMR2_Init 070C                _PORTBbits 0006  
              _PORTDbits 0008                _TRISCbits 0087              _CCP1CONbits 0017  
 Set_PWM_Duty@duty_cycle 0070               ?_PINS_Init 0070               ?_TMR2_Init 0070  
    start_initialization 07FC                ___latbits 0002              ??_PINS_Init 0070  
            ??_TMR2_Init 0070             _Set_PWM_Duty 0721                 _PWM_Init 0707  
