

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 31 23:02:48 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,space=0,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173     0015                     _CCPR1          set	21
   174     000E                     _TMR1           set	14
   175     000B                     _INTCONbits     set	11
   176     0017                     _CCP1CON        set	23
   177     0010                     _T1CON          set	16
   178     0006                     _PORTB          set	6
   179     000C                     _PIR1bits       set	12
   180     0008                     _PORTD          set	8
   181     008C                     _PIE1bits       set	140
   182     0088                     _TRISD          set	136
   183     0086                     _TRISB          set	134
   184     0087                     _TRISCbits      set	135
   185                           
   186                           	psect	cinit
   187     000F                     start_initialization:	
   188                           ; #config settings
   189                           
   190     000F                     __initialization:
   191     000F                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     000F                     __end_of__initialization:
   195     000F  0183               	clrf	3
   196     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_GPIO_Init:
   201     0070                     ?_TMR1_Init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_Capture_Init:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_main:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_ISR:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ??_ISR:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	2
   219     0072                     ??_GPIO_Init:
   220     0072                     ??_TMR1_Init:	
   221                           ; 1 bytes @ 0x2
   222                           
   223     0072                     ??_Capture_Init:	
   224                           ; 1 bytes @ 0x2
   225                           
   226     0072                     ??_main:	
   227                           ; 1 bytes @ 0x2
   228                           
   229                           
   230                           	psect	maintext
   231     0013                     __pmaintext:	
   232                           ; 1 bytes @ 0x2
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 15 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 2
   258 ;; This function calls:
   259 ;;		_Capture_Init
   260 ;;		_GPIO_Init
   261 ;;		_TMR1_Init
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267     0013                     _main:	
   268                           ;psect for function _main
   269                           
   270     0013                     l607:	
   271                           ;incstack = 0
   272                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   273                           
   274                           
   275                           ;main.c: 16:     GPIO_Init();
   276     0013  120A  118A  2047  120A  118A  	fcall	_GPIO_Init
   277                           
   278                           ;main.c: 17:     TMR1_Init();
   279     0018  120A  118A  2051  120A  118A  	fcall	_TMR1_Init
   280                           
   281                           ;main.c: 18:     Capture_Init();
   282     001D  120A  118A  203A  120A  118A  	fcall	_Capture_Init
   283     0022                     l609:
   284                           
   285                           ;main.c: 21:     {;main.c: 22:         PORTD = TMR1;
   286     0022  1283               	bcf	3,5	;RP0=0, select bank0
   287     0023  1303               	bcf	3,6	;RP1=0, select bank0
   288     0024  080E               	movf	14,w	;volatile
   289     0025  0088               	movwf	8	;volatile
   290     0026  2822               	goto	l609
   291     0027  120A  118A  280C   	ljmp	start
   292     002A                     __end_of_main:
   293                           
   294                           	psect	text1
   295     0051                     __ptext1:	
   296 ;; *************** function _TMR1_Init *****************
   297 ;; Defined at:
   298 ;;		line 46 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		status,2
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; Hardware stack levels required when called: 1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326     0051                     _TMR1_Init:	
   327                           ;psect for function _TMR1_Init
   328                           
   329     0051                     l601:	
   330                           ;incstack = 0
   331                           ; Regs used in _TMR1_Init: [status,2]
   332                           
   333                           
   334                           ;main.c: 48:     TMR1 = 0;
   335     0051  1283               	bcf	3,5	;RP0=0, select bank0
   336     0052  1303               	bcf	3,6	;RP1=0, select bank0
   337     0053  018E               	clrf	14	;volatile
   338     0054  018F               	clrf	15	;volatile
   339     0055                     l603:
   340                           
   341                           ;main.c: 49:     T1CON = 0b00001011;
   342     0055  300B               	movlw	11
   343     0056  0090               	movwf	16	;volatile
   344     0057                     l50:
   345     0057  0008               	return
   346     0058                     __end_of_TMR1_Init:
   347                           
   348                           	psect	text2
   349     0047                     __ptext2:	
   350 ;; *************** function _GPIO_Init *****************
   351 ;; Defined at:
   352 ;;		line 37 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		status,2
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380     0047                     _GPIO_Init:	
   381                           ;psect for function _GPIO_Init
   382                           
   383     0047                     l597:	
   384                           ;incstack = 0
   385                           ; Regs used in _GPIO_Init: [status,2]
   386                           
   387                           
   388                           ;main.c: 39:     TRISCbits.TRISC2 = 1;
   389     0047  1683               	bsf	3,5	;RP0=1, select bank1
   390     0048  1303               	bcf	3,6	;RP1=0, select bank1
   391     0049  1507               	bsf	7,2	;volatile
   392     004A                     l599:
   393                           
   394                           ;main.c: 40:     TRISB = 0;
   395     004A  0186               	clrf	6	;volatile
   396                           
   397                           ;main.c: 41:     TRISD = 0;
   398     004B  0188               	clrf	8	;volatile
   399                           
   400                           ;main.c: 42:     PORTB = 0;
   401     004C  1283               	bcf	3,5	;RP0=0, select bank0
   402     004D  1303               	bcf	3,6	;RP1=0, select bank0
   403     004E  0186               	clrf	6	;volatile
   404                           
   405                           ;main.c: 43:     PORTD = 0;
   406     004F  0188               	clrf	8	;volatile
   407     0050                     l47:
   408     0050  0008               	return
   409     0051                     __end_of_GPIO_Init:
   410                           
   411                           	psect	text3
   412     003A                     __ptext3:	
   413 ;; *************** function _Capture_Init *****************
   414 ;; Defined at:
   415 ;;		line 53 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		None
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443     003A                     _Capture_Init:	
   444                           ;psect for function _Capture_Init
   445                           
   446     003A                     l605:	
   447                           ;incstack = 0
   448                           ; Regs used in _Capture_Init: []
   449                           
   450                           
   451                           ;main.c: 55:     CCP1CON = 0b00000101;
   452     003A  3005               	movlw	5
   453     003B  1283               	bcf	3,5	;RP0=0, select bank0
   454     003C  1303               	bcf	3,6	;RP1=0, select bank0
   455     003D  0097               	movwf	23	;volatile
   456                           
   457                           ;main.c: 57:     PIE1bits.CCP1IE = 1;
   458     003E  1683               	bsf	3,5	;RP0=1, select bank1
   459     003F  1303               	bcf	3,6	;RP1=0, select bank1
   460     0040  150C               	bsf	12,2	;volatile
   461                           
   462                           ;main.c: 58:     PIR1bits.CCP1IF = 0;
   463     0041  1283               	bcf	3,5	;RP0=0, select bank0
   464     0042  1303               	bcf	3,6	;RP1=0, select bank0
   465     0043  110C               	bcf	12,2	;volatile
   466                           
   467                           ;main.c: 59:     INTCONbits.PEIE = 1;
   468     0044  170B               	bsf	11,6	;volatile
   469                           
   470                           ;main.c: 60:     INTCONbits.GIE = 1;
   471     0045  178B               	bsf	11,7	;volatile
   472     0046                     l53:
   473     0046  0008               	return
   474     0047                     __end_of_Capture_Init:
   475                           
   476                           	psect	text4
   477     002A                     __ptext4:	
   478 ;; *************** function _ISR *****************
   479 ;; Defined at:
   480 ;;		line 29 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          2       0       0       0       0
   497 ;;      Totals:         2       0       0       0       0
   498 ;;Total ram usage:        2 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		Interrupt level 1
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507     002A                     _ISR:	
   508                           ;psect for function _ISR
   509                           
   510     002A                     i1l611:
   511                           
   512                           ;main.c: 31:     if (PIR1bits.CCP1IF)
   513     002A  1283               	bcf	3,5	;RP0=0, select bank0
   514     002B  1303               	bcf	3,6	;RP1=0, select bank0
   515     002C  1D0C               	btfss	12,2	;volatile
   516     002D  282F               	goto	u1_21
   517     002E  2830               	goto	u1_20
   518     002F                     u1_21:
   519     002F  2833               	goto	i1l44
   520     0030                     u1_20:
   521     0030                     i1l613:
   522                           
   523                           ;main.c: 32:     {;main.c: 33:         PORTB = CCPR1;
   524     0030  0815               	movf	21,w	;volatile
   525     0031  0086               	movwf	6	;volatile
   526     0032                     i1l615:
   527                           
   528                           ;main.c: 34:         PIR1bits.CCP1IF = 0;
   529     0032  110C               	bcf	12,2	;volatile
   530     0033                     i1l44:
   531     0033  0871               	movf	??_ISR+1,w
   532     0034  008A               	movwf	10
   533     0035  0E70               	swapf	??_ISR,w
   534     0036  0083               	movwf	3
   535     0037  0EFE               	swapf	btemp,f
   536     0038  0E7E               	swapf	btemp,w
   537     0039  0009               	retfie
   538     003A                     __end_of_ISR:
   539     0002                     ___latbits      equ	2
   540     007E                     btemp           set	126	;btemp
   541     007E                     wtemp0          set	126
   542                           
   543                           	psect	intentry
   544     0004                     __pintentry:	
   545                           ;incstack = 0
   546                           ; Regs used in _ISR: [wreg]
   547                           
   548     0004                     interrupt_function:
   549     007E                     saved_w         set	btemp
   550     0004  00FE               	movwf	btemp
   551     0005  0E03               	swapf	3,w
   552     0006  00F0               	movwf	??_ISR
   553     0007  080A               	movf	10,w
   554     0008  00F1               	movwf	??_ISR+1
   555     0009  120A  118A  282A   	ljmp	_ISR
   556                           
   557                           	psect	config
   558                           
   559                           ;Config register CONFIG @ 0x2007
   560                           ;	Oscillator Selection bits
   561                           ;	FOSC = HS, HS oscillator
   562                           ;	Watchdog Timer Enable bit
   563                           ;	WDTE = OFF, WDT disabled
   564                           ;	Power-up Timer Enable bit
   565                           ;	PWRTE = ON, PWRT enabled
   566                           ;	FLASH Program Memory Code Protection bits
   567                           ;	CP = OFF, Code protection off
   568                           ;	Brown-out Reset Enable bit
   569                           ;	BOREN = ON, BOR enabled
   570                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   571                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   572                           ;	Data EE Memory Code Protection
   573                           ;	CPD = OFF, Code Protection off
   574                           ;	FLASH Program Memory Write Enable
   575                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
   576                           ;	In-Circuit Debugger Mode bit
   577                           ;	DEBUG = 0x1, unprogrammed default
   578     2007                     	org	8199
   579     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _Capture_Init
                          _GPIO_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (1) _TMR1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Capture_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Capture_Init
   _GPIO_Init
   _TMR1_Init

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       2     14.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 31 23:02:48 2025

                     l50 0057                       l53 0046                       l47 0050  
   __end_of_Capture_Init 0047                      l601 0051                      l603 0055  
                    l605 003A                      l607 0013                      l609 0022  
                    l597 0047                      l599 004A                      _ISR 002A  
                   ?_ISR 0070                     i1l44 0033                     _TMR1 000E  
                   u1_20 0030                     u1_21 002F                     _main 0013  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _CCPR1 0015                    _T1CON 0010  
                  i1l611 002A                    i1l613 0030                    i1l615 0032  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 002A  
                 ??_main 0072        __end_of_GPIO_Init 0051        __end_of_TMR1_Init 0058  
                 saved_w 007E  __end_of__initialization 000F             _Capture_Init 003A  
         __pcstackCOMMON 0070               __pmaintext 0013               __pintentry 0004  
                _CCP1CON 0017                  __ptext1 0051                  __ptext2 0047  
                __ptext3 003A                  __ptext4 002A                _GPIO_Init 0047  
   end_of_initialization 000F                _TMR1_Init 0051                _TRISCbits 0087  
             ?_GPIO_Init 0070               ?_TMR1_Init 0070      start_initialization 000F  
            __end_of_ISR 003A                ___latbits 0002              ??_GPIO_Init 0072  
            ??_TMR1_Init 0072        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            ?_Capture_Init 0070           ??_Capture_Init 0072  
             _INTCONbits 000B                 intlevel1 0000  
