

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Mar 04 22:05:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0007                     _PORTCbits      set	7
   173     0006                     _PORTB          set	6
   174     0086                     _TRISB          set	134
   175     0087                     _TRISCbits      set	135
   176                           
   177                           	psect	cinit
   178     07FC                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07FC                     __initialization:
   182     07FC                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185     07FC                     __end_of__initialization:
   186     07FC  0183               	clrf	3
   187     07FD  120A  118A  2F8A   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	cstackCOMMON
   190     0070                     __pcstackCOMMON:
   191     0070                     ?_main:
   192     0070                     ??_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 1 bytes @ 0x0
   197     0070                     	ds	2
   198     0072                     main@flag:
   199                           
   200                           ; 1 bytes @ 0x2
   201     0072                     	ds	1
   202     0073                     main@index:
   203                           
   204                           ; 1 bytes @ 0x3
   205     0073                     	ds	1
   206                           
   207                           	psect	maintext
   208     078A                     __pmaintext:	
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 13 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  index           1    3[COMMON] unsigned char 
   219 ;;  flag            1    2[COMMON] unsigned char 
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, btemp+1
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         2       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0
   232 ;;      Totals:         4       0       0       0       0
   233 ;;Total ram usage:        4 bytes
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241     078A                     _main:	
   242                           ;psect for function _main
   243                           
   244     078A                     l569:	
   245                           ;incstack = 0
   246                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   247                           
   248                           
   249                           ;main.c: 15:     TRISCbits.TRISC0 = 1;
   250     078A  1683               	bsf	3,5	;RP0=1, select bank1
   251     078B  1303               	bcf	3,6	;RP1=0, select bank1
   252     078C  1407               	bsf	7,0	;volatile
   253                           
   254                           ;main.c: 16:     TRISCbits.TRISC1 = 1;
   255     078D  1487               	bsf	7,1	;volatile
   256     078E                     l571:
   257                           
   258                           ;main.c: 18:     TRISB = 0x00;
   259     078E  0186               	clrf	6	;volatile
   260                           
   261                           ;main.c: 19:     PORTB = 0x00;
   262     078F  1283               	bcf	3,5	;RP0=0, select bank0
   263     0790  1303               	bcf	3,6	;RP1=0, select bank0
   264     0791  0186               	clrf	6	;volatile
   265                           
   266                           ;main.c: 21:     unsigned char index = 0;
   267     0792  01F3               	clrf	main@index
   268     0793                     l573:
   269                           
   270                           ;main.c: 22:     unsigned char flag = 2;
   271     0793  3002               	movlw	2
   272     0794  00F2               	movwf	main@flag
   273                           
   274                           ;main.c: 24:     while (PORTCbits.RC0 || flag == 1)
   275     0795  2FBD               	goto	l15
   276     0796                     l16:
   277                           
   278                           ;main.c: 25:     {;main.c: 26:         flag = 1;
   279     0796  3001               	movlw	1
   280     0797  00F2               	movwf	main@flag
   281     0798                     l575:
   282                           
   283                           ;main.c: 28:         PORTB = (1<< index);
   284     0798  3001               	movlw	1
   285     0799  00F0               	movwf	??_main
   286     079A  0A73               	incf	main@index,w
   287     079B  2F9E               	goto	u14
   288     079C                     u15:
   289     079C  1003               	clrc
   290     079D  0DF0               	rlf	??_main,f
   291     079E                     u14:
   292     079E  3EFF               	addlw	-1
   293     079F  1D03               	skipz
   294     07A0  2F9C               	goto	u15
   295     07A1  0870               	movf	??_main,w
   296     07A2  0086               	movwf	6	;volatile
   297                           
   298                           ;main.c: 29:         index++;
   299     07A3  3001               	movlw	1
   300     07A4  07F3               	addwf	main@index,f
   301     07A5                     l577:
   302                           
   303                           ;main.c: 30:         _delay((unsigned long)((50)*(4000000/4000.0)));
   304     07A5  3041               	movlw	65
   305     07A6  00F1               	movwf	??_main+1
   306     07A7  30EE               	movlw	238
   307     07A8  00F0               	movwf	??_main
   308     07A9                     u117:
   309     07A9  0BF0               	decfsz	??_main,f
   310     07AA  2FA9               	goto	u117
   311     07AB  0BF1               	decfsz	??_main+1,f
   312     07AC  2FA9               	goto	u117
   313     07AD  0000               	nop
   314     07AE                     l579:
   315                           
   316                           ;main.c: 31:         if (index == 4)
   317     07AE  3004               	movlw	4
   318     07AF  0673               	xorwf	main@index,w
   319     07B0  1D03               	btfss	3,2
   320     07B1  2FB3               	goto	u21
   321     07B2  2FB4               	goto	u20
   322     07B3                     u21:
   323     07B3  2FB5               	goto	l583
   324     07B4                     u20:
   325     07B4                     l581:
   326                           
   327                           ;main.c: 32:             index = 0;
   328     07B4  01F3               	clrf	main@index
   329     07B5                     l583:
   330                           
   331                           ;main.c: 33:         if (PORTCbits.RC1)
   332     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   333     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   334     07B7  1C87               	btfss	7,1	;volatile
   335     07B8  2FBA               	goto	u31
   336     07B9  2FBB               	goto	u30
   337     07BA                     u31:
   338     07BA  2FBD               	goto	l15
   339     07BB                     u30:
   340     07BB                     l585:
   341                           
   342                           ;main.c: 34:         {;main.c: 35:             flag = 0;
   343     07BB  01F2               	clrf	main@flag
   344                           
   345                           ;main.c: 36:             break;
   346     07BC  2FF0               	goto	l20
   347     07BD                     l15:	
   348                           ;main.c: 38:     }
   349                           
   350                           
   351                           ;main.c: 24:     while (PORTCbits.RC0 || flag == 1)
   352     07BD  1807               	btfsc	7,0	;volatile
   353     07BE  2FC0               	goto	u41
   354     07BF  2FC1               	goto	u40
   355     07C0                     u41:
   356     07C0  2F96               	goto	l16
   357     07C1                     u40:
   358     07C1                     l587:
   359     07C1  0372               	decf	main@flag,w
   360     07C2  1903               	btfsc	3,2
   361     07C3  2FC5               	goto	u51
   362     07C4  2FC6               	goto	u50
   363     07C5                     u51:
   364     07C5  2F96               	goto	l16
   365     07C6                     u50:
   366     07C6  2FF0               	goto	l20
   367     07C7                     l589:
   368                           
   369                           ;main.c: 41:     {;main.c: 42:         PORTB = (8 >> index);
   370     07C7  0A73               	incf	main@index,w
   371     07C8  00FF               	movwf	btemp+1
   372     07C9  3008               	movlw	8
   373     07CA  00F0               	movwf	??_main
   374     07CB  3000               	movlw	0
   375     07CC  00F1               	movwf	??_main+1
   376     07CD  2FD1               	goto	u64
   377     07CE                     u65:
   378     07CE  0D71               	rlf	??_main+1,w
   379     07CF  0CF1               	rrf	??_main+1,f
   380     07D0  0CF0               	rrf	??_main,f
   381     07D1                     u64:
   382     07D1  0BFF               	decfsz	btemp+1,f
   383     07D2  2FCE               	goto	u65
   384     07D3  0870               	movf	??_main,w
   385     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   386     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   387     07D6  0086               	movwf	6	;volatile
   388     07D7                     l591:
   389                           
   390                           ;main.c: 43:         index++;
   391     07D7  3001               	movlw	1
   392     07D8  07F3               	addwf	main@index,f
   393     07D9                     l593:
   394                           
   395                           ;main.c: 44:         _delay((unsigned long)((50)*(4000000/4000.0)));
   396     07D9  3041               	movlw	65
   397     07DA  00F1               	movwf	??_main+1
   398     07DB  30EE               	movlw	238
   399     07DC  00F0               	movwf	??_main
   400     07DD                     u127:
   401     07DD  0BF0               	decfsz	??_main,f
   402     07DE  2FDD               	goto	u127
   403     07DF  0BF1               	decfsz	??_main+1,f
   404     07E0  2FDD               	goto	u127
   405     07E1  0000               	nop
   406     07E2                     l595:
   407                           
   408                           ;main.c: 45:         if (index == 4)
   409     07E2  3004               	movlw	4
   410     07E3  0673               	xorwf	main@index,w
   411     07E4  1D03               	btfss	3,2
   412     07E5  2FE7               	goto	u71
   413     07E6  2FE8               	goto	u70
   414     07E7                     u71:
   415     07E7  2FE9               	goto	l599
   416     07E8                     u70:
   417     07E8                     l597:
   418                           
   419                           ;main.c: 46:             index = 0;
   420     07E8  01F3               	clrf	main@index
   421     07E9                     l599:
   422                           
   423                           ;main.c: 47:         if (PORTCbits.RC0)
   424     07E9  1283               	bcf	3,5	;RP0=0, select bank0
   425     07EA  1303               	bcf	3,6	;RP1=0, select bank0
   426     07EB  1C07               	btfss	7,0	;volatile
   427     07EC  2FEE               	goto	u81
   428     07ED  2FEF               	goto	u80
   429     07EE                     u81:
   430     07EE  2FF0               	goto	l20
   431     07EF                     u80:
   432     07EF                     l601:
   433                           
   434                           ;main.c: 50:             break;
   435     07EF  2FF9               	goto	l25
   436     07F0                     l20:	
   437                           ;main.c: 52:     }
   438                           
   439                           
   440                           ;main.c: 40:      while (PORTCbits.RC1 || flag == 0)
   441     07F0  1887               	btfsc	7,1	;volatile
   442     07F1  2FF3               	goto	u91
   443     07F2  2FF4               	goto	u90
   444     07F3                     u91:
   445     07F3  2FC7               	goto	l589
   446     07F4                     u90:
   447     07F4                     l603:
   448     07F4  0872               	movf	main@flag,w
   449     07F5  1903               	btfsc	3,2
   450     07F6  2FF8               	goto	u101
   451     07F7  2FF9               	goto	u100
   452     07F8                     u101:
   453     07F8  2FC7               	goto	l589
   454     07F9                     u100:
   455     07F9                     l25:
   456     07F9  120A  118A  2800   	ljmp	start
   457     07FC                     __end_of_main:
   458     0002                     ___latbits      equ	2
   459     007E                     btemp           set	126	;btemp
   460     007E                     wtemp0          set	126
   461                           
   462                           	psect	config
   463                           
   464                           ;Config register CONFIG @ 0x2007
   465                           ;	Oscillator Selection bits
   466                           ;	FOSC = XT, XT oscillator
   467                           ;	Watchdog Timer Enable bit
   468                           ;	WDTE = OFF, WDT disabled
   469                           ;	Power-up Timer Enable bit
   470                           ;	PWRTE = ON, PWRT enabled
   471                           ;	Brown-out Reset Enable bit
   472                           ;	BOREN = ON, BOR enabled
   473                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   474                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   475                           ;	Data EEPROM Memory Code Protection bit
   476                           ;	CPD = OFF, Data EEPROM code protection off
   477                           ;	Flash Program Memory Write Enable bits
   478                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   479                           ;	In-Circuit Debugger Mode bit
   480                           ;	DEBUG = 0x1, unprogrammed default
   481                           ;	Flash Program Memory Code Protection bit
   482                           ;	CP = OFF, Code protection off
   483     2007                     	org	8199
   484     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Mar 04 22:05:52 2025

                     l20 07F0                       l15 07BD                       l16 0796  
                     l25 07F9                       u20 07B4                       u21 07B3  
                     u30 07BB                       u14 079E                       u31 07BA  
                     u15 079C                       u40 07C1                       u41 07C0  
                     u50 07C6                       u51 07C5                       u70 07E8  
                     u71 07E7                       u80 07EF                       u64 07D1  
                     u81 07EE                       u65 07CE                       u90 07F4  
                     u91 07F3                      l601 07EF                      l603 07F4  
                    l571 078E                      l581 07B4                      l573 0793  
                    l591 07D7                      l583 07B5                      l575 0798  
                    l593 07D9                      l585 07BB                      l577 07A5  
                    l569 078A                      l595 07E2                      l587 07C1  
                    l579 07AE                      l597 07E8                      l589 07C7  
                    l599 07E9                      u100 07F9                      u101 07F8  
                    u117 07A9                      u127 07DD                     _main 078A  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 078A     end_of_initialization 07FC                _PORTCbits 0007  
              _TRISCbits 0087      start_initialization 07FC                ___latbits 0002  
              main@index 0073                 main@flag 0072  
